var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.807,1,1.274]],["body/injectables/ApiService.html",[0,0.734,1,1.159,2,1.32,3,0.073,4,0.064,5,0.064,6,1.765,7,0.111,8,0.578,9,3.844,10,3.844,11,3.844,12,2.221,13,0.465,14,3.572,15,3.572,16,3.572,17,3.1,18,3.572,19,3.572,20,4.369,21,4.369,22,3.1,23,3.572,24,4.369,25,3.1,26,3.572,27,4.369,28,4.369,29,4.369,30,2.79,31,3.572,32,3.931,33,3.572,34,3.572,35,3.572,36,3.1,37,3.844,38,3.844,39,0.268,40,1.962,41,3.931,42,1.636,43,0.523,44,2.26,45,0.522,46,0.015,47,0.442,48,0.332,49,0.488,50,2.373,51,3.1,52,1.711,53,3.216,54,2.26,55,2.503,56,0.901,57,3.1,58,2.942,59,2.26,60,3.798,61,3.1,62,1.634,63,2.26,64,3.049,65,3.1,66,2.26,67,3.1,68,2.26,69,3.1,70,2.26,71,2.26,72,1.233,73,2.26,74,3.1,75,2.26,76,3.1,77,2.26,78,2.79,79,1.501,80,2.26,81,3.1,82,2.26,83,2.26,84,2.868,85,2.26,86,2.203,87,2.26,88,2.26,89,2.26,90,3.1,91,2.26,92,3.1,93,2.26,94,2.26,95,3.1,96,2.26,97,0.219,98,3.1,99,2.26,100,3.1,101,1.152,102,2.26,103,2.26,104,2.26,105,2.26,106,2.26,107,2.26,108,2.26,109,2.26,110,2.26,111,0.312,112,0.152,113,0.541,114,1.404,115,1.765,116,1.962,117,0.521,118,1.765,119,1.962,120,0.762,121,0.977,122,1.869,123,1.32,124,0.762,125,1.247,126,1.962,127,1.071,128,1.32,129,1.501,130,0.762,131,0.562,132,0.679,133,3.172,134,0.86,135,1.501,136,2.558,137,1.073,138,1.305,139,1.247,140,1.962,141,0.006,142,1.765,143,1.404,144,1.962,145,1.765,146,2.219,147,1.962,148,1.765,149,2.003,150,1.765,151,1.962,152,1.962,153,1.962,154,1.962,155,1.962,156,1.501,157,1.618,158,1.971,159,1.962,160,1.962,161,1.962,162,1.962,163,1.962,164,1.962,165,0.793,166,0.762,167,0.073,168,0.004,169,0.397,170,0.464,171,1.962,172,1.962,173,1.962,174,1.962,175,1.962,176,1.962,177,1.618,178,1.264,179,3.844,180,3.681,181,1.962,182,5.058,183,2.503,184,1.765,185,1.962,186,1.962,187,1.962,188,1.971,189,0.606,190,1.962,191,1.404,192,1.962,193,1.962,194,5.058,195,3.172,196,0.652,197,1.962,198,1.544,199,3.492,200,4.758,201,1.962,202,1.501,203,1.765,204,1.962,205,5.058,206,3.1,207,3.1,208,2.219,209,2.219,210,2.558,211,1.962,212,1.962,213,1.962,214,1.765,215,1.962,216,1.32,217,1.618,218,1.501,219,1.765,220,1.962,221,4.369,222,3.202,223,1.115,224,1.765,225,1.305,226,1.47,227,1.765,228,1.962,229,1.962,230,1.962,231,1.618,232,1.359,233,2.373,234,3.1,235,1.962,236,3.844,237,1.962,238,1.962,239,1.962,240,1.071,241,1.962,242,1.962,243,1.962,244,1.962,245,1.776,246,1.765,247,1.962,248,1.962,249,3.1,250,1.962,251,1.247,252,1.962,253,1.618,254,1.962,255,1.962,256,1.618,257,1.962,258,1.962,259,3.1,260,1.962,261,3.844,262,1.962,263,3.844,264,1.962,265,2.942,266,1.962,267,1.765,268,1.962,269,4.369,270,3.1,271,3.46,272,1.501,273,1.962,274,0.977,275,1.618,276,3.405,277,3.1,278,1.962,279,1.962,280,1.962,281,0.006,282,0.004]],["title/components/AppComponent.html",[97,0.38,283,1.093]],["body/components/AppComponent.html",[3,0.115,4,0.064,5,0.064,7,0.175,8,0.575,12,0.788,13,0.463,39,0.266,42,1.345,43,0.437,45,0.162,46,0.015,47,0.291,48,0.261,49,0.151,52,0.48,56,0.523,58,1.492,72,1.228,97,0.427,101,0.991,111,0.286,112,0.151,113,1.056,117,0.518,130,1.488,131,0.558,132,0.675,137,1.068,138,1.299,141,0.004,158,1.239,166,1.199,167,0.073,168,0.004,169,0.394,170,0.73,180,1.239,189,2.026,196,0.649,198,2.169,199,3.016,216,1.312,223,1.11,226,0.602,240,1.064,245,3.311,251,1.962,267,1.754,274,1.907,276,3.395,281,0.006,282,0.004,283,1.397,284,1.068,285,0.729,286,0.855,287,0.675,288,0.729,289,1.949,290,0.602,291,2.311,292,1.199,293,4.411,294,1.11,295,3.554,296,4.411,297,4.411,298,4.411,299,3.829,300,4.411,301,1.909,302,5.015,303,5.015,304,1.312,305,2.376,306,4.411,307,5.015,308,3.554,309,2.246,310,2.246,311,2.246,312,1.918,313,1.627,314,2.246,315,6.445,316,2.776,317,5.837,318,3.554,319,2.374,320,3.813,321,3.085,322,3.554,323,3.554,324,4.353,325,3.159,326,3.554,327,3.554,328,3.554,329,3.085,330,5.015,331,3.554,332,1.918,333,3.554,334,3.085,335,3.085,336,5.015,337,1.99,338,3.445,339,3.554,340,2.246,341,2.246,342,2.246,343,2.246,344,1.949,345,0.729,346,1.754,347,2.246,348,1.995,349,2.246,350,1.064,351,2.246,352,2.246,353,2.246,354,6.5,355,2.246,356,3.554,357,2.246,358,2.246,359,2.246,360,2.246,361,2.246,362,3.554,363,2.246,364,2.246,365,2.246,366,2.246,367,2.246,368,1.949,369,2.246,370,2.246,371,3.211,372,2.246,373,2.246,374,2.246,375,2.246,376,2.246,377,2.246,378,2.246,379,2.246,380,5.015,381,5.015,382,5.077,383,7.373,384,3.395,385,3.554,386,1.949,387,3.116,388,3.193,389,5.812,390,1.312,391,1.754,392,3.557,393,4.411,394,4.162,395,2.246,396,5.465,397,3.782,398,4.045,399,1.949,400,1.949,401,4.54,402,3.554,403,5.077,404,3.554,405,2.246,406,2.246,407,3.554,408,2.93,409,3.554,410,3.554,411,2.776,412,1.608,413,1.395,414,2.246,415,1.754,416,3.554,417,2.246,418,2.246,419,2.246,420,1.492,421,2.246,422,2.246,423,3.116,424,2.246,425,1.949,426,2.246,427,4.521,428,4.743,429,3.208,430,3.554,431,2.246,432,4.353,433,2.208,434,3.829,435,3.159,436,3.085,437,1.949,438,1.949,439,4.54,440,3.554,441,2.776,442,2.246,443,1.754,444,5.465,445,1.608,446,1.492,447,1.754,448,1.754,449,1.492,450,2.246,451,2.246,452,2.246,453,2.246,454,2.246,455,1.949,456,1.492,457,2.246,458,2.246,459,2.246,460,3.085,461,2.246,462,2.545,463,2.246,464,2.246,465,2.545,466,3.554,467,3.918,468,3.554,469,2.246,470,2.246,471,3.554,472,2.545,473,2.246,474,2.246,475,2.246,476,2.246,477,1.949,478,1.754,479,2.246,480,5.015,481,3.085,482,3.554,483,2.246,484,2.246,485,1.608,486,1.608,487,1.754,488,3.085,489,3.554,490,2.246,491,2.246,492,0.649,493,1.153,494,1.153,495,0.602,496,1.627,497,0.729,498,0.729,499,0.602,500,0.729,501,0.602,502,0.729,503,0.58,504,0.729,505,0.602,506,0.729,507,0.602,508,1.153,509,0.625,510,1.431,511,0.729,512,0.625,513,0.729,514,0.602,515,0.729,516,0.602,517,0.729,518,0.625,519,0.602,520,0.729,521,0.558,522,0.729,523,0.602,524,0.729,525,0.602,526,0.729,527,0.602,528,0.729,529,0.602,530,0.729,531,0.58,532,0.729,533,0.58,534,0.729,535,0.602,536,0.729,537,0.58,538,0.729,539,0.625,540,0.649,541,0.649,542,0.602,543,0.729,544,0.602,545,0.701,546,0.729]],["title/modules/AppModule.html",[547,2.294,548,2.608]],["body/modules/AppModule.html",[3,0.115,4,0.101,5,0.101,46,0.015,111,0.384,112,0.238,127,1.677,128,2.068,129,2.351,141,0.006,167,0.162,168,0.006,178,0.572,281,0.009,282,0.006,283,2.123,492,1.024,499,1.85,501,1.85,503,1.781,505,1.85,507,1.942,509,2.017,512,2.017,514,1.85,516,1.85,518,2.017,519,1.85,521,1.715,523,1.85,525,1.85,527,1.85,529,1.85,531,1.781,533,1.781,535,1.85,537,1.781,539,2.017,542,1.85,547,2.068,548,5.526,549,2.068,550,2.351,551,4.529,552,4.529,553,3.322,554,2.351,555,3.072,556,3.072,557,3.072,558,3.072,559,4.584,560,4.584,561,4.286,562,4.584,563,3.906,564,2.534,565,1.851,566,3.539,567,5,568,3.581,569,5,570,3.581,571,2.534,572,3.581,573,3.539,574,3.539,575,4.34,576,3.072,577,2.764,578,3.906,579,0.699,580,3.322,581,3.539,582,3.539,583,3.906,584,3.539,585,2.198,586,4.34,587,3.072,588,3.539,589,3.539,590,3.539,591,3.539,592,2.764,593,2.764,594,2.198,595,5.798,596,3.072,597,3.539,598,3.539,599,3.539,600,3.539,601,3.539,602,2.198,603,2.534]],["title/modules/AppRoutingModule.html",[547,2.294,604,2.608]],["body/modules/AppRoutingModule.html",[3,0.141,4,0.123,5,0.123,46,0.015,97,0.771,111,0.383,112,0.292,141,0.008,167,0.141,168,0.008,183,2.157,199,3.172,232,1.65,245,2.858,276,2.694,281,0.01,282,0.008,312,1.522,319,1.407,325,3.106,334,3.764,335,3.764,337,1.72,382,3.387,499,1.541,503,1.484,505,1.541,514,1.541,516,1.541,519,1.541,521,1.429,523,1.541,525,1.541,529,1.541,531,1.484,533,1.484,535,1.541,537,1.484,549,2.534,554,2.881,568,3.106,572,4.116,577,3.387,579,1.136,604,3.818,605,4.336,606,4.336,607,5.747,608,4.004,609,3.099,610,5.646,611,4.116,612,4.336,613,6.863,614,3.818,615,2.881,616,4.336,617,3.358,618,3.358,619,3.358,620,3.358,621,5.747,622,4.116,623,4.336,624,4.897,625,4.336,626,3.818,627,4.336,628,6.251,629,4.336,630,3.764,631,3.106,632,3.387,633,2.881,634,4.336,635,4.336,636,2.694,637,2.881,638,3.764,639,4.336,640,4.336]],["title/guards/AuthGuard.html",[624,2.439,641,1.776]],["body/guards/AuthGuard.html",[0,1.245,3,0.153,4,0.134,5,0.134,7,0.232,12,1.651,13,0.789,39,0.557,42,1.899,43,0.407,45,0.436,46,0.015,47,0.352,48,0.272,49,0.407,56,0.557,62,1.214,79,3.124,111,0.37,112,0.316,113,1.126,117,1.084,120,1.587,122,2.46,124,1.587,130,1.587,131,1.169,132,1.413,137,1.413,138,2.214,141,0.008,165,1.651,166,1.587,167,0.153,168,0.008,169,0.825,170,0.966,178,1.25,216,2.747,223,2.211,225,2.677,232,1.79,281,0.011,282,0.008,304,2.747,312,1.651,319,1.526,371,2.127,565,2.46,579,0.929,610,5.071,624,3.764,631,3.368,636,3.764,637,3.124,642,2.127,643,4.082,644,2.046,645,4.702,646,6.059,647,2.809,648,3.177,649,3.355,650,4.702,651,2.747,652,2.747,653,1.126,654,4.702,655,4.702,656,4.702,657,6.059,658,6.704,659,4.702,660,4.702,661,4.082,662,6.059,663,4.082,664,4.082,665,4.702,666,4.702,667,4.702,668,4.026,669,4.702,670,3.368,671,4.702,672,4.702,673,4.702,674,4.702,675,4.702,676,4.702,677,3.673,678,4.702,679,4.702]],["title/injectables/AuthService.html",[0,0.807,42,1.053]],["body/injectables/AuthService.html",[0,0.98,2,1.936,3,0.108,4,0.094,5,0.094,7,0.163,8,0.772,12,2.147,13,0.621,39,0.393,40,2.877,41,4.777,42,1.279,43,0.515,45,0.466,46,0.015,47,0.377,48,0.32,49,0.436,50,3.17,52,1.692,55,1.648,56,0.86,64,3.2,72,1.329,79,2.202,111,0.357,112,0.223,113,1.736,114,2.964,117,0.764,118,2.589,120,1.118,121,1.433,124,1.118,125,1.829,127,1.57,128,1.936,129,2.202,130,1.118,131,0.824,136,2.373,137,2.239,139,2.633,141,0.006,148,2.589,165,1.163,166,1.118,167,0.155,168,0.006,169,0.582,170,1.594,177,4.004,178,1.218,196,1.021,198,1.433,218,2.202,223,1.49,225,1.743,232,1.816,246,2.589,265,2.202,271,3.727,272,2.202,281,0.009,282,0.006,312,1.675,313,1.548,592,2.589,593,2.589,636,3.473,637,3.714,680,2.589,681,5.591,682,5.591,683,3.042,684,5.591,685,6.116,686,6.116,687,4.771,688,6.116,689,6.116,690,5.309,691,4.771,692,5.309,693,6.116,694,4.771,695,3.314,696,3.314,697,4.771,698,3.314,699,3.314,700,3.314,701,4.771,702,5.194,703,3.314,704,4.002,705,3.314,706,4.771,707,3.314,708,4.771,709,4.777,710,3.314,711,2.633,712,6.116,713,6.116,714,2.645,715,3.314,716,3.314,717,3.727,718,3.314,719,2.589,720,2.877,721,2.877,722,2.877,723,2.589,724,2.877,725,3.314,726,3.314,727,2.589,728,3.314,729,3.314,730,3.314,731,2.589,732,3.314,733,3.314,734,3.314,735,3.314,736,3.314,737,4.771,738,3.314,739,3.314,740,3.314,741,2.202,742,3.314,743,2.059,744,3.314,745,3.314,746,2.877,747,3.314,748,3.314,749,3.314,750,2.877,751,3.314,752,4.771,753,2.877,754,3.314,755,3.314,756,3.314,757,3.314,758,3.314,759,3.314,760,3.314,761,3.314,762,3.314]],["title/interceptors/CacheInterceptor.html",[763,2.439,764,2.812]],["body/interceptors/CacheInterceptor.html",[0,1.215,3,0.147,4,0.129,5,0.129,7,0.223,13,0.77,39,0.537,42,1.872,43,0.443,45,0.474,46,0.015,47,0.383,48,0.296,49,0.443,56,0.701,111,0.366,112,0.305,113,1.577,117,1.044,120,1.529,121,1.959,123,2.647,124,1.529,125,2.501,127,2.147,132,1.361,138,2.161,141,0.008,167,0.192,168,0.008,169,0.795,170,1.434,178,1.065,210,5.32,223,1.415,232,1.724,281,0.011,282,0.008,304,2.647,420,3.01,585,2.815,602,2.815,603,3.245,653,1.085,764,5,765,4.079,766,5.453,767,2.815,768,3.93,769,5.915,770,5.419,771,4.531,772,3.93,773,4.7,774,4.7,775,5.027,776,4.531,777,3.93,778,5.915,779,4.531,780,3.01,781,3.93,782,4.236,783,4.62,784,3.539,785,3.933,786,3.933,787,3.933,788,3.933,789,4.531,790,4.531,791,3.01,792,3.01,793,4.531,794,4.531,795,4.531,796,3.245,797,5.915,798,4.531,799,4.531,800,4.531,801,4.531,802,4.531,803,3.539,804,4.531,805,4.531,806,4.531,807,4.531,808,4.531,809,3.933,810,3.933,811,4.531,812,3.01]],["title/interfaces/CanComponentDeactivate.html",[134,1.494,813,2.294]],["body/interfaces/CanComponentDeactivate.html",[0,1.409,3,0.186,4,0.163,5,0.163,7,0.283,8,1.109,46,0.015,48,0.258,111,0.361,112,0.386,113,1.373,117,1.322,134,2.183,141,0.01,165,2.014,166,1.936,167,0.222,168,0.01,178,0.928,223,1.791,281,0.012,282,0.01,579,1.134,594,4.259,633,5.236,644,1.538,647,2.276,653,1.373,813,4.284,814,3.812,815,4.482,816,4.109,817,4.109,818,4.109,819,5.951]],["title/interfaces/CanComponentDeactivate-1.html",[134,1.245,198,1.414,813,1.911]],["body/interfaces/CanComponentDeactivate-1.html",[0,1.354,1,2.313,3,0.174,4,0.153,5,0.153,7,0.265,8,1.066,46,0.015,48,0.242,111,0.366,112,0.361,113,1.287,117,1.239,134,2.046,141,0.01,165,1.887,166,1.814,167,0.214,168,0.01,169,0.943,170,1.354,178,1.066,196,1.204,223,2.058,281,0.012,282,0.01,319,1.744,345,1.744,579,1.062,594,4.094,626,3.571,633,5.156,644,1.441,647,2.615,649,3.377,653,1.287,813,4.164,814,3.571,816,3.849,818,3.849,820,3.14,821,4.198,822,4.665,823,4.665,824,4.665,825,4.665,826,4.665,827,4.665,828,4.665,829,4.665,830,4.665,831,4.665,832,4.665,833,4.665,834,4.665]],["title/classes/Cerf.html",[62,1.014,168,0.007]],["body/classes/Cerf.html",[3,0.089,4,0.078,5,0.078,7,0.135,8,0.671,39,0.593,43,0.518,45,0.197,46,0.015,47,0.434,48,0.367,49,0.184,52,1.771,53,3.479,55,3.135,62,1.292,134,1.578,141,0.005,149,2.263,167,0.181,168,0.007,281,0.007,282,0.005,350,3.8,540,1.823,683,3.135,835,1.434,836,2.141,837,2.999,838,4.923,839,4.478,840,4.923,841,3.915,842,3.915,843,4.923,844,4.923,845,3.915,846,4.923,847,4.923,848,4.923,849,4.923,850,3.915,851,4.923,852,3.255,853,3.613,854,1.821,855,4.163,856,2.741,857,2.741,858,2.741,859,2.741,860,2.741,861,2.741,862,2.741,863,2.741,864,2.741,865,2.741,866,2.741,867,2.741,868,2.741,869,2.741,870,2.741,871,2.741,872,2.741,873,2.741,874,2.741,875,2.741,876,2.761,877,3.479,878,2.986,879,3.915,880,3.915,881,3.6,882,3.239,883,3.239,884,3.239,885,3.6,886,3.6,887,3.6,888,2.755,889,3.239,890,3.239,891,3.239,892,3.6,893,3.6,894,1.963,895,2.379,896,2.379,897,2.379,898,3.239]],["title/components/CerfListComponent.html",[97,0.38,501,1.053]],["body/components/CerfListComponent.html",[3,0.154,4,0.093,5,0.093,7,0.162,8,0.766,13,0.617,39,0.389,43,0.505,45,0.4,46,0.015,47,0.42,48,0.325,49,0.374,52,1.187,56,0.722,62,1.435,64,1.716,72,1.695,97,0.538,101,1.203,111,0.318,112,0.221,113,0.785,117,0.756,131,0.816,137,1.829,141,0.006,146,2.038,149,1.484,167,0.106,168,0.006,169,0.576,178,0.766,183,1.631,189,2.115,196,1.179,226,0.88,240,2.884,281,0.009,282,0.006,283,0.913,284,1.423,285,1.064,286,1.248,287,0.986,288,1.064,290,0.88,291,2.411,292,1.598,294,1.479,301,2.317,312,1.663,313,1.064,348,2.753,371,2.92,413,2.942,423,2.038,443,2.562,492,0.949,493,1.537,494,1.537,495,0.88,496,1.975,497,1.064,498,1.064,499,0.88,500,1.064,501,1.632,502,1.064,503,0.847,504,1.064,505,0.88,506,1.064,507,0.88,508,1.537,509,0.913,510,1.804,511,1.064,512,0.913,513,1.064,514,0.88,515,1.064,516,0.88,517,1.064,518,0.913,519,0.88,520,1.064,521,0.816,522,1.064,523,0.88,524,1.064,525,0.88,526,1.064,527,0.88,528,1.064,529,0.88,530,1.064,531,0.847,532,1.064,533,0.847,534,1.064,535,0.88,536,1.064,537,0.847,538,1.064,539,0.913,540,1.37,541,0.949,542,0.88,543,1.064,544,0.88,545,1.024,546,1.064,579,0.648,630,4.825,644,1.804,731,3.7,837,1.358,839,3.147,852,3.211,853,1.81,876,1.81,878,1.554,879,2.038,880,2.038,899,2.847,900,6.456,901,3.28,902,4.736,903,3.068,904,3.693,905,3.693,906,3.392,907,4.111,908,3.36,909,3.392,910,5.284,911,2.349,912,4.736,913,3.28,914,3.28,915,3.147,916,3.28,917,4.044,918,4.111,919,3.28,920,1.916,921,3.28,922,3.28,923,4.825,924,3.28,925,3.068,926,3.28,927,3.068,928,3.147,929,3.147,930,3.28,931,3.068,932,3.147,933,3.28,934,1.554,935,1.631,936,2.847,937,1.418,938,4.736,939,4.736,940,2.038,941,2.562,942,2.349,943,3.28,944,3.28,945,3.28,946,3.7,947,4.736,948,4.736,949,2.562,950,3.28,951,3.28,952,3.28,953,3.28,954,1.81,955,3.28,956,4.111,957,3.28,958,2.847,959,2.562,960,2.349,961,2.847,962,2.847,963,2.847,964,4.111,965,2.179,966,2.179,967,2.847,968,2.847,969,2.349,970,2.847,971,2.847,972,2.847,973,2.847,974,2.179,975,2.179,976,2.179,977,2.562,978,2.847,979,2.179,980,2.847,981,2.847,982,2.847,983,2.179,984,2.847,985,2.847,986,3.392]],["title/classes/CerfListEntry.html",[168,0.007,894,2.812]],["body/classes/CerfListEntry.html",[3,0.108,4,0.094,5,0.094,7,0.164,8,0.773,39,0.664,43,0.454,45,0.239,46,0.015,47,0.448,48,0.339,49,0.223,52,1.773,53,3.728,55,3.359,62,1.234,134,1.819,141,0.006,149,2.532,167,0.199,168,0.008,281,0.009,282,0.006,350,3.858,540,1.382,683,3.099,835,1.737,836,2.594,837,3.119,838,3.732,839,4.733,840,3.732,841,2.968,842,2.968,843,3.732,844,3.732,845,2.968,846,3.732,847,3.732,848,3.732,849,3.732,850,2.968,851,3.732,852,3.462,853,3.842,854,2.206,855,3.534,876,3.089,877,3.728,878,3.201,879,4.196,880,4.196,881,4.148,882,3.732,883,3.732,884,3.732,885,4.148,886,4.148,887,4.148,888,3.175,889,3.732,890,3.732,891,3.732,892,4.148,893,4.148,894,3.422,895,2.882,896,2.882,897,2.882,898,3.732,987,3.321,988,3.321,989,3.321,990,3.321,991,3.321,992,3.321]],["title/guards/CerfNavResolver.html",[615,2.608,641,1.776]],["body/guards/CerfNavResolver.html",[0,1.384,1,2.515,3,0.154,4,0.135,5,0.135,7,0.234,13,0.794,39,0.563,42,1.906,43,0.41,45,0.439,46,0.015,47,0.354,48,0.274,49,0.41,56,0.563,62,1.227,64,2.485,111,0.377,112,0.319,113,1.46,117,1.095,120,1.603,121,2.054,122,2.485,123,2.776,124,1.603,130,1.603,131,1.181,132,1.427,137,1.833,138,2.461,141,0.009,165,2.141,166,2.058,167,0.198,168,0.011,169,1.07,170,1.384,178,1.189,225,1.736,281,0.011,282,0.009,319,1.542,345,1.542,579,0.939,609,3.043,614,3.156,615,4.052,642,2.149,644,2.099,647,2.916,648,3.368,649,3.483,651,2.776,652,2.776,653,1.46,714,2.054,993,5.262,994,2.485,995,2.054,996,4.751,997,3.718,998,4.751,999,4.124,1000,4.124,1001,4.124,1002,4.124,1003,3.711,1004,4.124,1005,4.124,1006,4.124,1007,4.124,1008,4.124]],["title/injectables/CerfService.html",[0,0.807,1009,3.067]],["body/injectables/CerfService.html",[0,0.826,1,2.013,2,1.537,3,0.085,4,0.075,5,0.075,7,0.198,8,0.65,12,1.713,13,0.523,17,4.742,22,4.742,39,0.312,42,1.731,43,0.515,45,0.446,46,0.015,47,0.411,48,0.299,49,0.417,52,1.378,53,2.219,55,2,56,0.892,60,2.858,62,1.967,72,1.359,111,0.318,112,0.177,113,1.168,114,3.031,117,0.606,121,1.138,124,0.888,131,0.654,132,0.791,137,1.466,141,0.005,143,3.031,149,2.661,156,3.629,167,0.085,168,0.005,169,0.462,170,1.509,178,1.187,184,3.14,188,1.452,191,2.498,196,1.179,198,1.739,203,2.055,222,1.537,224,2.055,226,0.706,227,2.055,232,1.857,281,0.007,282,0.005,287,1.208,312,0.924,313,0.854,350,3.232,371,2.806,386,3.49,540,1.163,594,1.635,683,1.857,717,3.14,837,1.664,838,5.042,839,2.671,840,3.14,841,1.635,843,2.055,844,3.14,846,3.14,847,2.055,848,2.055,849,2.055,850,2.498,851,4.267,852,1.309,853,2.219,876,1.452,877,2.219,878,2.94,879,3.393,880,3.393,882,2.055,883,2.055,884,2.055,888,1.748,889,2.055,890,2.055,891,2.055,995,1.138,1009,3.14,1010,2.284,1011,5.462,1012,4.02,1013,5.462,1014,5.462,1015,3.49,1016,5.462,1017,4.742,1018,5.462,1019,4.02,1020,4.02,1021,5.462,1022,5.462,1023,4.02,1024,5.462,1025,5.462,1026,4.235,1027,4.267,1028,4.02,1029,4.02,1030,4.235,1031,2.631,1032,2.631,1033,2.631,1034,3.49,1035,2.631,1036,2.055,1037,5.042,1038,2.631,1039,2.631,1040,2.631,1041,2.631,1042,2.631,1043,4.02,1044,2.631,1045,5.108,1046,4.02,1047,2.631,1048,2.055,1049,4.02,1050,3.241,1051,4.02,1052,4.02,1053,4.02,1054,4.02,1055,2.631,1056,2.631,1057,4.02,1058,2.631,1059,2.631,1060,2.631,1061,2.631,1062,2.631,1063,2.055,1064,2.284,1065,2.055,1066,2.055,1067,2.284,1068,1.885,1069,1.537,1070,1.885,1071,2.631,1072,2.631,1073,2.631,1074,2.055,1075,2.631,1076,2.631,1077,1.885,1078,2.631,1079,2.055,1080,2.284,1081,2.631,1082,3.49,1083,2.284,1084,2.631,1085,2.631,1086,5.462,1087,1.537,1088,2.631,1089,2.631,1090,2.631,1091,2.631,1092,2.631,1093,4.02,1094,2.631,1095,2.631,1096,1.748,1097,2.631,1098,2.284,1099,3.49,1100,3.49,1101,2.284,1102,2.284,1103,2.284,1104,2.498,1105,2.284,1106,2.284,1107,2.631,1108,2.284,1109,2.631,1110,2.631,1111,2.631,1112,5.462,1113,1.885,1114,2.284,1115,2.284,1116,2.631,1117,2.631,1118,2.631,1119,2.631,1120,2.631,1121,2.631,1122,2.631,1123,2.631,1124,2.631,1125,2.631,1126,2.631,1127,2.631,1128,2.631,1129,2.631,1130,2.631,1131,2.631,1132,2.631,1133,2.631,1134,2.631,1135,2.631,1136,2.631,1137,2.631,1138,2.631,1139,4.02,1140,2.284,1141,2.631,1142,2.631,1143,4.02,1144,4.02,1145,4.02,1146,4.02,1147,4.02,1148,4.02,1149,2.631,1150,2.631,1151,2.631,1152,2.631,1153,2.631,1154,2.631,1155,2.631,1156,2.631,1157,2.631,1158,2.631,1159,2.631,1160,2.631]],["title/components/ClubAdministrationComponent.html",[97,0.38,503,1.014]],["body/components/ClubAdministrationComponent.html",[3,0.104,4,0.056,5,0.056,7,0.307,8,0.52,13,0.419,25,2.792,39,0.235,42,1.252,43,0.488,45,0.369,46,0.015,47,0.435,48,0.288,49,0.345,52,1.331,53,2.833,55,2.553,56,0.715,60,1.683,72,1.68,86,2.322,97,0.452,101,0.802,111,0.307,112,0.133,130,2.255,131,0.493,132,0.596,137,1.403,138,1.483,141,0.004,143,1.998,149,2.112,167,0.104,168,0.006,169,0.348,170,0.959,178,0.52,183,2.553,189,1.96,196,1.004,198,0.857,208,1.232,216,1.879,223,1.946,225,2.519,226,0.532,232,0.754,240,2.432,272,3.652,281,0.006,282,0.004,283,0.552,284,0.966,285,0.643,286,0.754,287,0.596,288,0.643,290,0.532,291,2.281,292,1.085,294,1.267,301,1.777,305,2.605,312,1.802,313,1.666,319,1.317,337,2.6,338,2.512,345,0.643,346,1.549,371,1.836,384,2.371,387,1.232,388,1.158,392,1.158,394,4.32,397,1.998,398,1.317,399,1.721,400,1.721,401,1.549,408,3.102,413,1.232,423,1.232,427,1.42,429,1.775,441,1.549,445,1.42,462,1.42,485,1.42,486,1.42,492,0.573,493,1.044,494,1.044,495,0.532,496,1.515,497,0.643,498,0.643,499,0.532,500,0.643,501,0.532,502,0.643,503,1.206,504,0.643,505,0.532,506,0.643,507,0.532,508,1.044,509,0.552,510,1.957,511,0.643,512,0.896,513,0.643,514,0.532,515,0.643,516,0.532,517,0.643,518,0.552,519,0.532,520,0.643,521,0.493,522,0.643,523,0.532,524,0.643,525,0.532,526,0.643,527,0.532,528,0.643,529,0.532,530,0.643,531,0.512,532,0.643,533,0.512,534,0.643,535,0.532,536,0.643,537,0.512,538,0.643,539,0.552,540,0.573,541,0.573,542,0.532,543,0.643,544,0.532,545,0.619,546,0.643,579,0.392,648,0.939,704,3.898,711,3.441,714,1.755,741,1.317,837,1.933,841,2.901,850,2.901,853,3.034,876,2.577,877,2.577,903,2.24,904,2.696,905,2.696,906,2.304,908,2.577,915,2.137,917,3.102,920,3.212,925,2.24,927,1.094,928,2.137,929,2.137,931,1.094,932,2.137,934,0.939,935,2.322,937,1.755,940,1.998,954,1.775,965,1.317,966,1.317,974,1.317,975,1.317,976,1.317,979,1.317,983,1.317,986,2.304,1050,2.137,1096,4.007,1104,1.232,1161,1.549,1162,1.982,1163,2.792,1164,3.523,1165,3.523,1166,3.523,1167,3.523,1168,3.216,1169,3.216,1170,3.344,1171,3.344,1172,1.721,1173,2.577,1174,3.17,1175,3.647,1176,3.216,1177,1.982,1178,2.792,1179,1.982,1180,2.792,1181,1.982,1182,2.792,1183,1.982,1184,1.982,1185,1.982,1186,1.982,1187,1.982,1188,1.982,1189,2.792,1190,1.982,1191,1.982,1192,1.982,1193,1.982,1194,1.982,1195,2.792,1196,2.792,1197,2.792,1198,4.053,1199,2.792,1200,3.344,1201,2.792,1202,5.8,1203,5.8,1204,3.102,1205,2.792,1206,2.792,1207,4.053,1208,4.053,1209,4.053,1210,4.053,1211,4.053,1212,4.772,1213,2.792,1214,3.647,1215,4.053,1216,4.053,1217,2.792,1218,2.792,1219,2.792,1220,1.982,1221,1.982,1222,1.982,1223,1.775,1224,1.094,1225,1.721,1226,1.721,1227,1.549,1228,2.792,1229,2.792,1230,1.721,1231,1.721,1232,2.792,1233,1.721,1234,1.721,1235,1.721,1236,1.721,1237,1.721,1238,1.721,1239,1.721,1240,1.721,1241,1.721,1242,1.721,1243,2.792,1244,1.721,1245,1.721,1246,1.549,1247,1.549,1248,1.721,1249,1.721,1250,1.721,1251,1.721,1252,1.42,1253,1.549,1254,1.775,1255,1.721,1256,1.42,1257,1.42,1258,1.721,1259,1.721,1260,1.721,1261,1.42,1262,1.721,1263,1.721,1264,1.721,1265,1.037,1266,1.721,1267,2.792,1268,1.721,1269,1.721,1270,1.721,1271,1.721,1272,1.42,1273,1.721,1274,1.721,1275,1.721,1276,1.721,1277,2.304,1278,2.512,1279,2.792,1280,1.721,1281,1.549,1282,1.549,1283,0.986,1284,1.158,1285,1.158,1286,2.792,1287,2.137,1288,3.216,1289,3.216,1290,3.216,1291,2.512,1292,2.792,1293,4.711,1294,2.137,1295,4.669,1296,2.792,1297,3.216,1298,3.216,1299,2.792,1300,3.216,1301,2.792,1302,3.216,1303,2.792,1304,2.512,1305,2.792,1306,1.982,1307,1.982,1308,4.058,1309,1.982,1310,1.982,1311,1.982,1312,1.982]],["title/pipes/ClubIDPipe.html",[559,2.608,1313,2.294]],["body/pipes/ClubIDPipe.html",[3,0.188,4,0.165,5,0.165,13,0.755,43,0.39,45,0.417,46,0.015,47,0.428,48,0.261,49,0.39,52,1.663,56,0.688,111,0.34,112,0.39,141,0.01,167,0.188,168,0.01,169,1.018,178,0.938,281,0.012,282,0.01,290,1.555,305,3.49,313,1.882,345,1.882,446,3.853,559,4.584,653,1.388,1286,5.989,1313,4.031,1314,4.153,1315,5.034,1316,5.39,1317,5.799,1318,5.39,1319,5.799]],["title/components/ClubsComponent.html",[97,0.38,505,1.053]],["body/components/ClubsComponent.html",[1,2.214,3,0.158,4,0.097,5,0.097,7,0.28,8,0.789,13,0.635,30,4.846,39,0.405,42,1.664,43,0.491,45,0.246,46,0.015,47,0.424,48,0.295,49,0.23,52,1.401,56,0.736,72,1.827,97,0.6,101,1.124,111,0.346,112,0.23,130,1.154,131,0.85,132,1.027,138,2.079,141,0.006,157,2.449,167,0.158,168,0.009,169,0.6,170,1.169,189,2.125,196,1.198,199,3.875,226,0.917,232,1.301,240,2.696,281,0.009,282,0.006,283,0.952,284,1.466,285,1.109,286,1.301,287,1.027,288,1.109,290,0.917,291,2.425,292,1.646,294,1.776,301,2.361,312,1.997,313,1.846,319,1.846,332,2.395,337,2.706,345,1.109,348,2.207,390,1.998,492,0.989,493,1.583,494,1.583,495,0.917,496,2.013,497,1.109,498,1.109,499,0.917,500,1.109,501,0.917,502,1.109,503,0.883,504,1.109,505,1.664,506,1.109,507,0.917,508,1.583,509,1.359,510,2.33,511,1.109,512,0.952,513,1.109,514,0.917,515,1.109,516,0.917,517,1.109,518,0.952,519,0.917,520,1.109,521,0.85,522,1.109,523,0.917,524,1.109,525,0.917,526,1.109,527,0.917,528,1.109,529,0.917,530,1.109,531,0.883,532,1.109,533,0.883,534,1.109,535,0.917,536,1.109,537,0.883,538,1.109,539,0.952,540,0.989,541,0.989,542,0.917,543,1.109,544,0.917,545,1.067,546,1.109,579,0.676,714,2.46,743,2.124,837,1.415,903,3.14,908,3.424,909,3.495,925,3.14,927,1.887,931,1.887,934,1.62,935,3.086,937,2.11,940,3.031,954,1.887,995,1.478,1096,3.242,1171,4.443,1173,3.424,1223,2.693,1224,1.887,1252,2.449,1254,2.693,1256,2.449,1257,2.449,1261,2.449,1265,1.789,1283,1.7,1284,1.998,1285,1.998,1293,3.811,1294,3.242,1320,2.449,1321,3.419,1322,4.235,1323,4.879,1324,3.419,1325,3.419,1326,3.419,1327,3.419,1328,3.419,1329,3.419,1330,3.419,1331,4.235,1332,4.235,1333,2.449,1334,2.968,1335,2.968,1336,2.671,1337,2.968,1338,2.968,1339,2.968,1340,2.968,1341,2.968,1342,2.968,1343,2.968,1344,2.968,1345,2.968,1346,2.968]],["title/guards/ClubsResolver.html",[622,2.812,641,1.776]],["body/guards/ClubsResolver.html",[0,1.328,1,2.499,3,0.169,4,0.148,5,0.148,7,0.257,13,0.842,39,0.618,42,1.397,43,0.435,45,0.465,46,0.015,47,0.376,48,0.291,49,0.435,56,0.618,111,0.379,112,0.35,113,1.683,117,1.201,120,1.758,124,1.758,132,1.565,141,0.009,165,1.829,166,1.758,167,0.169,168,0.009,169,0.914,170,1.071,178,1.137,208,3.237,281,0.012,282,0.009,319,1.691,345,1.691,579,1.03,609,3.043,622,4.63,642,2.357,644,2.094,647,2.916,648,3.331,649,3.483,653,1.247,668,3.461,714,2.253,994,2.726,995,2.253,997,3.568,1265,2.726,1347,6.102,1348,4.523,1349,4.523,1350,5.21,1351,5.21]],["title/components/ConfirmDialogComponent.html",[97,0.38,507,1.053]],["body/components/ConfirmDialogComponent.html",[3,0.187,4,0.124,5,0.124,7,0.215,8,0.933,39,0.518,43,0.435,45,0.314,46,0.015,47,0.4,48,0.291,49,0.294,52,1.233,97,0.626,101,1.278,111,0.284,112,0.294,141,0.008,167,0.142,168,0.008,189,2.18,196,1.054,226,2.102,281,0.01,282,0.008,283,1.216,284,1.734,285,1.417,286,1.661,287,1.312,288,1.417,290,1.171,291,2.469,292,1.948,294,1.802,348,1.975,398,2.9,412,4.134,429,3.186,433,2.712,492,1.263,493,1.873,494,1.873,495,1.171,496,2.233,497,1.417,498,1.417,499,1.171,500,1.417,501,1.171,502,1.417,503,1.127,504,1.417,505,1.171,506,1.417,507,1.845,508,1.873,509,1.216,510,2.322,511,1.417,512,1.216,513,1.417,514,1.171,515,1.417,516,1.171,517,1.417,518,1.216,519,1.171,520,1.417,521,1.085,522,1.417,523,1.171,524,1.417,525,1.171,526,1.417,527,1.171,528,1.417,529,1.171,530,1.417,531,1.127,532,1.417,533,1.127,534,1.417,535,1.171,536,1.417,537,1.127,538,1.417,539,1.216,540,1.263,541,1.263,542,1.171,543,1.417,544,1.171,545,1.363,546,1.417,683,2.723,937,1.888,1173,2.409,1223,3.949,1224,2.409,1254,3.798,1283,2.171,1304,3.41,1352,5.973,1353,5.973,1354,3.41,1355,6.467,1356,5.011,1357,6.881,1358,2.9,1359,5.772,1360,4.366,1361,4.509,1362,4.366]],["title/interceptors/ContentTypeInterceptor.html",[763,2.439,1363,2.812]],["body/interceptors/ContentTypeInterceptor.html",[0,1.374,3,0.179,4,0.156,5,0.156,7,0.271,13,0.87,43,0.37,45,0.396,46,0.015,47,0.32,48,0.345,49,0.37,56,0.652,111,0.355,112,0.37,113,1.724,117,1.268,125,3.037,127,2.607,141,0.01,167,0.179,168,0.01,178,0.89,196,1.005,232,2.094,281,0.012,282,0.01,585,3.418,653,1.317,765,3.906,767,3.418,768,4.442,772,4.442,773,4.654,774,4.474,775,4.977,777,3.656,780,3.656,781,4.442,791,3.656,792,3.656,796,3.941,1363,4.788,1364,5.804,1365,4.777,1366,4.777,1367,4.777,1368,5.804,1369,5.804,1370,5.222,1371,5.503]],["title/modules/CoreModule.html",[547,2.294,562,2.608]],["body/modules/CoreModule.html",[3,0.139,4,0.122,5,0.122,39,0.509,46,0.015,49,0.384,62,1.109,64,2.248,111,0.394,112,0.289,127,2.036,141,0.008,167,0.139,168,0.008,170,0.883,196,0.785,281,0.01,282,0.008,284,1.291,320,2.371,344,3.729,492,1.243,499,1.152,501,1.152,503,1.109,507,1.152,521,1.068,527,1.152,531,1.109,533,1.109,544,1.962,547,2.51,548,3.794,549,3.748,550,2.854,551,5.011,552,3.356,553,3.794,554,4.262,561,3.548,562,5.287,563,4.461,564,3.077,565,2.248,568,4.09,572,4.595,577,4.461,586,5.569,587,3.729,604,5.23,670,3.077,719,3.356,721,5.935,722,3.729,753,3.729,878,2.036,1069,2.51,1080,3.729,1372,3.729,1373,3.729,1374,3.729,1375,3.729,1376,5.23,1377,4.296,1378,4.296,1379,4.296,1380,4.296,1381,5.711,1382,6.416,1383,3.356,1384,4.296,1385,4.296,1386,4.296,1387,4.296,1388,6.416,1389,6.416,1390,6.416,1391,3.729,1392,3.729,1393,6.416,1394,6.416,1395,6.416,1396,3.729,1397,6.416,1398,3.729,1399,4.296,1400,4.296,1401,3.077,1402,5.711,1403,3.077,1404,4.296,1405,5.711,1406,4.296,1407,4.296,1408,4.296,1409,4.296]],["title/components/DialogNewClub.html",[97,0.38,509,1.093]],["body/components/DialogNewClub.html",[1,1.929,3,0.168,4,0.105,5,0.105,7,0.183,8,0.835,13,0.672,30,2.894,39,0.439,42,1.385,43,0.432,45,0.267,46,0.015,47,0.426,48,0.289,49,0.249,52,1.444,56,0.439,72,1.438,97,0.622,101,1.175,111,0.354,112,0.249,130,1.25,131,0.921,132,1.113,138,1.354,141,0.007,157,2.654,167,0.168,168,0.009,169,0.65,170,1.221,189,2.137,196,1.36,199,2.85,222,3.017,226,0.993,232,1.41,240,1.756,281,0.009,282,0.007,283,1.032,284,1.552,285,1.202,287,1.113,288,1.202,290,0.993,291,2.442,292,1.25,294,1.856,301,1.41,319,1.202,332,1.813,337,2.907,345,1.202,348,2.336,390,2.165,492,1.072,493,1.676,494,1.676,495,0.993,496,2.086,497,1.202,498,1.202,499,0.993,500,1.202,501,0.993,502,1.202,503,0.957,504,1.202,505,1.385,506,1.202,507,0.993,508,1.676,509,1.79,510,2.378,511,1.202,512,1.032,513,1.202,514,0.993,515,1.202,516,0.993,517,1.202,518,1.032,519,0.993,520,1.202,521,0.921,522,1.202,523,0.993,524,1.202,525,0.993,526,1.202,527,0.993,528,1.202,529,0.993,530,1.202,531,0.957,532,1.202,533,0.957,534,1.202,535,0.993,536,1.202,537,0.957,538,1.202,539,1.032,540,1.072,541,1.072,542,0.993,543,1.202,544,0.993,545,1.157,546,1.202,579,0.732,683,1.965,714,2.233,743,2.302,837,1.534,903,2.045,908,2.045,925,2.85,927,2.045,931,2.045,934,1.756,935,2.568,937,2.233,954,2.045,1171,2.654,1173,2.85,1223,3.731,1224,2.045,1252,2.654,1254,3.731,1256,2.654,1257,2.654,1261,2.654,1265,1.938,1283,1.843,1284,3.756,1285,2.165,1320,2.654,1322,3.216,1331,3.216,1332,3.216,1333,2.654,1334,3.216,1335,3.216,1336,2.894,1337,3.216,1338,3.216,1339,3.216,1340,3.216,1341,3.216,1342,3.216,1343,3.216,1344,3.216,1345,4.482,1346,5.159,1358,2.462,1361,4.034,1410,5.164,1411,3.705,1412,3.705]],["title/components/DialogNewMember.html",[97,0.38,512,1.093]],["body/components/DialogNewMember.html",[3,0.138,4,0.081,5,0.081,7,0.14,8,0.689,13,0.555,39,0.337,42,1.143,43,0.409,45,0.204,46,0.015,47,0.429,48,0.255,49,0.191,52,1.415,53,3.657,55,3.296,56,0.337,72,1.187,86,1.413,97,0.55,101,1.011,111,0.343,112,0.191,130,2.156,131,0.707,132,0.854,137,1.28,138,1.038,141,0.005,143,1.765,149,1.285,167,0.138,168,0.008,169,0.499,170,1.167,178,0.689,183,2.119,189,2.066,196,1.297,198,1.229,208,1.765,222,2.49,223,1.9,225,2.49,226,0.762,232,1.082,240,1.347,281,0.008,282,0.005,283,0.791,284,1.28,285,0.922,287,0.854,288,0.922,290,0.762,291,2.383,292,0.959,294,1.596,301,1.082,305,2.423,319,0.922,337,1.127,338,2.22,345,0.922,346,2.22,371,1.285,388,1.66,394,3.662,408,2.831,423,1.765,445,2.035,462,2.035,492,0.822,493,1.383,494,1.383,495,0.762,496,1.843,497,0.922,498,0.922,499,0.762,500,0.922,501,0.762,502,0.922,503,1.1,504,0.922,505,0.762,506,0.922,507,0.762,508,1.383,509,0.791,510,2.212,511,0.922,512,1.582,513,0.922,514,0.762,515,0.922,516,0.762,517,0.922,518,0.791,519,0.762,520,0.922,521,0.707,522,0.922,523,0.762,524,0.922,525,0.762,526,0.922,527,0.762,528,0.922,529,0.762,530,0.922,531,0.734,532,0.922,533,0.734,534,0.922,535,0.762,536,0.922,537,0.734,538,0.922,539,0.791,540,0.822,541,0.822,542,0.762,543,0.922,544,0.762,545,0.887,546,0.922,579,0.562,648,1.347,683,1.622,704,3.135,711,2.352,714,1.229,741,1.888,837,1.764,841,2.647,850,1.765,853,1.568,876,1.568,877,1.568,903,1.568,904,1.888,905,1.888,908,1.568,915,1.888,917,3.397,920,1.66,925,2.352,927,1.568,929,1.888,931,1.568,932,1.888,934,1.347,935,2.119,937,2.211,954,2.352,965,1.888,966,1.888,974,1.888,975,1.888,976,1.888,979,1.888,983,1.888,1050,1.888,1161,2.22,1163,2.467,1164,2.467,1165,2.467,1166,2.467,1167,2.467,1170,2.035,1171,2.035,1173,2.352,1174,2.22,1175,3.329,1178,2.467,1180,2.467,1182,2.467,1189,2.467,1195,2.467,1196,2.467,1197,2.467,1198,2.467,1199,2.467,1200,2.035,1201,2.467,1202,4.931,1203,4.931,1204,1.888,1205,2.467,1206,2.467,1207,3.699,1208,3.699,1209,3.699,1210,3.699,1211,3.699,1212,3.699,1213,2.467,1214,3.329,1215,3.699,1216,3.699,1217,2.467,1218,2.467,1219,2.467,1223,3.359,1224,1.568,1225,2.467,1226,2.467,1227,2.22,1228,2.467,1229,2.467,1230,2.467,1231,2.467,1232,3.699,1233,2.467,1234,2.467,1235,2.467,1236,2.467,1237,2.467,1238,2.467,1239,2.467,1240,2.467,1241,2.467,1242,2.467,1243,3.699,1244,2.467,1245,2.467,1246,2.22,1247,2.22,1248,2.467,1249,2.467,1250,2.467,1251,2.467,1252,2.035,1253,2.22,1254,3.359,1255,2.467,1256,2.035,1257,2.035,1258,2.467,1259,2.467,1260,2.467,1261,2.035,1262,2.467,1263,2.467,1264,2.467,1265,1.487,1266,2.467,1267,3.699,1268,2.467,1269,2.467,1270,2.467,1271,2.467,1272,2.035,1273,2.467,1274,2.467,1275,2.467,1276,2.467,1277,3.052,1278,3.329,1279,3.699,1280,2.467,1281,2.22,1282,3.329,1283,1.413,1284,3.319,1285,1.66,1358,1.888,1361,3.329,1413,4.262,1414,2.842,1415,2.842,1416,2.842]],["title/pipes/DivisionIDPipe.html",[560,2.608,1313,2.294]],["body/pipes/DivisionIDPipe.html",[3,0.188,4,0.165,5,0.165,13,0.755,43,0.39,45,0.417,46,0.015,47,0.428,48,0.261,49,0.39,52,1.663,56,0.688,78,5.39,111,0.34,112,0.39,141,0.01,167,0.188,168,0.01,169,1.018,178,0.938,281,0.012,282,0.01,290,1.555,305,3.49,313,1.882,345,1.882,446,3.853,560,4.584,653,1.388,1313,4.031,1314,4.153,1316,5.39,1318,5.39,1417,5.034,1418,5.799,1419,5.799]],["title/components/DivisionsComponent.html",[97,0.38,514,1.053]],["body/components/DivisionsComponent.html",[1,2.235,3,0.162,4,0.1,5,0.1,7,0.285,8,0.805,13,0.648,39,0.417,42,0.944,43,0.486,45,0.358,46,0.015,47,0.433,48,0.298,49,0.335,52,1.471,53,1.942,55,1.75,56,0.745,72,1.847,97,0.608,101,1.143,111,0.362,112,0.237,130,1.681,131,0.875,132,1.057,141,0.006,167,0.162,168,0.009,169,0.618,170,1.188,189,2.132,196,1.212,226,0.944,240,2.739,276,4.121,281,0.009,282,0.006,283,0.98,284,1.497,285,1.142,286,1.339,287,1.057,288,1.142,290,0.944,291,2.431,292,1.681,294,1.805,301,2.392,305,3.355,312,1.748,313,1.616,332,2.029,345,1.616,492,1.018,493,1.616,494,1.616,495,0.944,496,2.04,497,1.142,498,1.142,499,0.944,500,1.142,501,0.944,502,1.142,503,0.909,504,1.142,505,0.944,506,1.142,507,0.944,508,1.616,509,0.98,510,2.347,511,1.142,512,1.387,513,1.142,514,1.685,515,1.142,516,0.944,517,1.142,518,0.98,519,0.944,520,1.142,521,0.875,522,1.142,523,0.944,524,1.142,525,0.944,526,1.142,527,0.944,528,1.142,529,0.944,530,1.142,531,0.909,532,1.142,533,0.909,534,1.142,535,0.944,536,1.142,537,0.909,538,1.142,539,0.98,540,1.018,541,1.018,542,0.944,543,1.142,544,0.944,545,1.099,546,1.142,579,0.696,743,2.186,837,1.457,903,3.191,908,3.469,920,2.056,925,3.191,927,1.942,931,1.942,934,1.668,935,1.75,937,2.5,954,1.942,995,1.522,1096,3.309,1170,4.502,1173,3.469,1174,4.515,1175,4.91,1223,2.749,1224,1.942,1246,2.749,1247,2.749,1253,2.749,1254,1.942,1265,1.841,1282,2.749,1283,1.75,1284,2.056,1285,2.056,1293,3.891,1294,3.309,1420,2.749,1421,3.519,1422,4.981,1423,4.981,1424,4.981,1425,3.519,1426,3.519,1427,3.519,1428,4.981,1429,3.519,1430,3.519,1431,3.519,1432,4.981,1433,4.981,1434,3.519,1435,3.055,1436,3.519]],["title/directives/EqualValidator.html",[495,1.053,542,1.053]],["body/directives/EqualValidator.html",[3,0.114,4,0.1,5,0.1,7,0.173,8,0.805,12,2.029,13,0.648,36,4.323,39,0.417,42,1.335,43,0.446,45,0.358,46,0.015,47,0.289,48,0.298,49,0.335,52,1.651,56,0.417,97,0.482,111,0.327,112,0.335,132,1.057,137,1.057,138,1.286,139,1.942,141,0.006,167,0.162,168,0.009,169,0.618,170,1.023,178,1.145,189,0.944,209,2.186,223,2.258,225,2.587,226,0.944,281,0.01,282,0.006,290,0.944,291,1.737,292,1.188,294,1.099,301,1.339,313,2.152,332,1.748,495,1.335,537,0.909,541,1.018,542,1.685,553,3.309,579,0.696,602,3.094,637,3.309,644,1.55,653,1.384,668,2.338,683,2.621,702,3.567,704,3.191,709,2.749,711,2.749,714,1.522,812,3.309,855,1.841,928,3.309,1068,4.502,1069,2.056,1113,2.521,1265,1.841,1333,2.521,1437,2.749,1438,5.018,1439,5.018,1440,4.323,1441,5.018,1442,4.323,1443,6.146,1444,5.978,1445,4.981,1446,5.018,1447,3.519,1448,3.519,1449,4.323,1450,3.519,1451,4.323,1452,4.323,1453,4.981,1454,3.519,1455,3.519,1456,3.519,1457,3.309,1458,3.055,1459,3.055,1460,3.055,1461,3.055,1462,4.323,1463,2.521,1464,2.749,1465,5.456,1466,3.055,1467,3.055,1468,5.456,1469,3.055,1470,3.841,1471,3.055,1472,5.018,1473,5.018,1474,2.749,1475,3.055,1476,3.055,1477,3.055,1478,3.055,1479,3.055,1480,3.055,1481,3.055,1482,3.055,1483,3.055,1484,3.055,1485,3.891,1486,4.323,1487,3.055,1488,2.749,1489,3.055,1490,3.055,1491,5.456,1492,5.018,1493,3.055,1494,3.055,1495,3.055,1496,3.055,1497,3.055,1498,3.055,1499,3.055,1500,3.055,1501,3.055,1502,2.749,1503,3.055,1504,3.055,1505,3.055,1506,3.055,1507,3.055,1508,3.055,1509,3.055,1510,3.055,1511,3.891,1512,3.055,1513,3.055,1514,3.055,1515,3.055,1516,3.055,1517,3.055]],["title/interceptors/ErrorInterceptor.html",[763,2.439,1518,2.812]],["body/interceptors/ErrorInterceptor.html",[0,1.347,3,0.173,4,0.151,5,0.151,7,0.263,13,0.854,43,0.358,45,0.383,46,0.015,47,0.31,48,0.24,49,0.358,56,0.632,111,0.365,112,0.358,113,1.7,117,1.229,120,1.799,123,3.114,124,1.799,125,2.942,127,2.526,139,2.942,141,0.01,150,4.164,167,0.173,168,0.009,178,1.148,209,3.311,225,1.948,281,0.012,282,0.01,420,3.541,585,3.311,653,1.276,765,3.831,767,3.311,768,4.356,772,4.356,773,4.603,774,4.412,775,4.923,777,3.541,780,3.541,781,4.356,782,4.696,784,4.164,791,3.541,792,3.541,809,4.627,810,4.627,1003,4.164,1518,4.696,1519,5.692,1520,5.33,1521,5.33,1522,5.33,1523,5.33,1524,5.33,1525,5.33,1526,5.33,1527,5.33]],["title/guards/ExitGuard.html",[641,1.776,817,2.812]],["body/guards/ExitGuard.html",[0,1.397,3,0.184,4,0.161,5,0.161,7,0.279,13,0.885,43,0.38,45,0.407,46,0.015,47,0.329,48,0.254,49,0.38,56,0.671,97,0.548,111,0.359,112,0.38,113,1.354,117,1.304,134,2.153,141,0.01,165,1.986,166,1.909,167,0.221,168,0.01,178,0.915,223,1.766,281,0.012,282,0.01,579,1.118,633,5.139,642,2.559,644,1.517,647,2.244,653,1.354,813,4.418,815,4.419,816,4.052,817,4.869,818,4.869,819,5.901,1528,5.657]],["title/components/FAQsComponent.html",[97,0.38,516,1.053]],["body/components/FAQsComponent.html",[3,0.116,4,0.064,5,0.064,7,0.111,13,0.464,39,0.524,43,0.239,46,0.013,47,0.257,56,0.267,60,3.859,72,0.627,97,0.428,101,0.873,111,0.111,112,0.151,141,0.004,167,0.073,168,0.004,189,2.005,196,0.651,226,0.604,281,0.006,282,0.004,283,0.627,284,1.07,285,0.731,286,0.857,287,0.677,288,0.731,290,0.604,291,2.312,292,1.202,294,1.112,301,1.912,492,0.651,493,1.156,494,1.156,495,0.604,496,1.63,497,0.731,498,0.731,499,0.604,500,0.731,501,0.604,502,0.731,503,0.581,504,0.731,505,0.604,506,0.731,507,0.604,508,1.156,509,0.627,510,1.434,511,0.731,512,0.627,513,0.731,514,0.604,515,0.731,516,1.347,517,0.731,518,0.627,519,0.604,520,0.731,521,0.56,522,0.731,523,0.604,524,0.731,525,0.604,526,0.731,527,0.604,528,0.731,529,0.604,530,0.731,531,0.581,532,0.731,533,0.581,534,0.731,535,0.604,536,0.731,537,0.581,538,0.731,539,0.627,540,0.651,541,0.651,542,0.604,543,0.731,544,0.604,545,0.703,546,0.731,638,3.092,653,0.853,1457,2.936,1529,1.955,1530,2.252,1531,3.562,1532,2.252,1533,2.252,1534,3.562,1535,3.562,1536,6.663,1537,5.023,1538,6.319,1539,6.914,1540,6.914,1541,6.663,1542,3.562,1543,6.319,1544,7.477,1545,7.015,1546,7.377,1547,7.184,1548,7.105,1549,3.562,1550,6.319,1551,5.023,1552,6.319,1553,3.562,1554,7.105,1555,5.819,1556,6.319,1557,5.023,1558,6.319,1559,5.9,1560,5.023,1561,6.663,1562,5.819,1563,6.319,1564,5.819,1565,7.105,1566,5.023,1567,4.419,1568,5.819,1569,6.319,1570,6.319,1571,6.319,1572,3.562,1573,5.819,1574,5.819,1575,5.819,1576,5.023,1577,6.506,1578,6.797,1579,6.663,1580,6.663,1581,6.319,1582,5.023,1583,5.819,1584,6.663,1585,5.023,1586,3.562,1587,6.319,1588,5.819,1589,6.914,1590,5.023,1591,3.562,1592,5.023,1593,6.663,1594,5.023,1595,3.562,1596,5.023,1597,5.819,1598,3.562,1599,6.914,1600,6.319,1601,5.023,1602,5.819,1603,5.819,1604,5.023,1605,5.819,1606,3.562,1607,6.319,1608,5.472,1609,3.562,1610,5.819,1611,5.819,1612,3.562,1613,6.319,1614,3.562,1615,5.819,1616,3.562,1617,5.819,1618,5.819,1619,6.319,1620,6.319,1621,5.023,1622,5.023,1623,5.819,1624,5.819,1625,5.819,1626,5.023,1627,5.023,1628,5.819,1629,5.819,1630,5.023,1631,5.023,1632,5.023,1633,5.023,1634,5.819,1635,3.562,1636,5.023,1637,3.562,1638,5.023,1639,5.819,1640,5.023,1641,5.023,1642,3.562,1643,3.562,1644,3.562,1645,5.023,1646,5.023,1647,3.562,1648,5.023,1649,3.562,1650,3.562,1651,3.562,1652,3.562,1653,2.252,1654,3.562,1655,3.562,1656,3.562,1657,3.562,1658,3.562,1659,2.252,1660,2.252,1661,2.252,1662,2.252]],["title/interceptors/FakeBackendInterceptor.html",[763,2.439,1663,2.812]],["body/interceptors/FakeBackendInterceptor.html",[0,1.117,3,0.13,4,0.113,5,0.113,7,0.197,13,0.708,43,0.269,45,0.287,46,0.015,47,0.232,48,0.18,49,0.269,50,2.653,56,0.473,64,2.089,111,0.327,112,0.269,113,1.48,117,0.92,120,1.348,123,2.333,124,1.348,125,2.204,127,1.892,139,4.046,141,0.007,167,0.176,168,0.007,178,1.286,223,1.247,281,0.01,282,0.007,585,2.481,602,2.481,603,2.86,653,0.956,765,3.177,768,3.612,772,3.612,773,4.123,774,3.841,775,4.41,777,2.653,780,2.653,781,3.612,782,5.343,783,4.247,784,5.828,785,3.467,786,3.467,787,3.467,788,3.467,791,2.653,792,2.653,796,2.86,812,2.653,852,3.646,878,1.892,1663,4.428,1664,4.247,1665,3.119,1666,3.993,1667,3.993,1668,7.331,1669,7.331,1670,6.219,1671,6.312,1672,7.331,1673,7.331,1674,7.331,1675,3.993,1676,3.993,1677,3.993,1678,3.119,1679,3.119,1680,3.467,1681,4.72,1682,3.467,1683,3.119,1684,2.86]],["title/components/InfoDialog.html",[97,0.38,518,1.093]],["body/components/InfoDialog.html",[3,0.239,4,0.124,5,0.124,7,0.216,8,0.935,39,0.519,43,0.463,45,0.315,46,0.015,47,0.4,48,0.31,49,0.294,52,1.235,72,1.219,97,0.627,101,1.28,111,0.319,112,0.294,141,0.008,167,0.142,168,0.008,189,2.17,196,1.056,226,1.174,281,0.01,282,0.008,283,1.219,284,1.737,285,1.421,287,1.315,288,1.421,290,1.174,291,2.469,294,1.805,299,6.217,492,1.266,493,1.877,494,1.877,495,1.174,496,2.235,497,1.421,498,1.421,499,1.174,500,1.421,501,1.174,502,1.421,503,1.13,504,1.421,505,1.174,506,1.421,507,1.174,508,1.877,509,1.219,510,2.324,511,1.421,512,1.219,513,1.421,514,1.174,515,1.421,516,1.174,517,1.421,518,1.918,519,1.174,520,1.421,521,1.088,522,1.421,523,1.174,524,1.421,525,1.174,526,1.421,527,1.174,528,1.421,529,1.174,530,1.421,531,1.13,532,1.421,533,1.13,534,1.421,535,1.174,536,1.421,537,1.13,538,1.421,539,1.219,540,1.266,541,1.266,542,1.174,543,1.421,544,1.174,545,1.367,546,1.421,570,3.135,571,3.135,683,2.201,937,1.893,1173,2.416,1223,3.953,1224,2.416,1254,3.802,1277,4.142,1283,2.177,1284,2.558,1285,2.558,1358,2.908,1685,6.217,1686,6.217,1687,3.8,1688,5.783,1689,6.476,1690,5.783,1691,4.377,1692,6.476,1693,4.377]],["title/components/LoginComponent.html",[97,0.38,519,1.053]],["body/components/LoginComponent.html",[3,0.166,4,0.104,5,0.104,7,0.18,8,0.826,12,2.07,13,0.665,39,0.606,42,1.713,43,0.469,45,0.368,46,0.015,47,0.391,48,0.265,49,0.344,56,0.606,72,1.423,97,0.571,101,1.329,111,0.29,112,0.245,132,1.097,137,1.919,138,1.867,139,2.015,141,0.007,167,0.118,168,0.006,170,1.05,188,2.821,189,2.141,196,0.934,218,3.918,222,2.133,223,1.14,225,2.155,226,0.979,281,0.009,282,0.007,283,1.017,284,1.536,285,1.185,286,1.389,287,1.097,288,1.185,290,0.979,291,2.434,292,1.724,294,1.596,301,2.431,304,2.133,312,1.281,313,1.185,317,4.606,320,3.526,348,2.312,384,2.133,387,2.268,388,2.133,392,2.986,397,2.268,401,2.852,412,2.615,425,4.436,427,2.615,429,2.821,433,2.268,447,3.992,456,2.425,465,2.615,472,2.615,477,3.169,492,1.056,493,1.658,494,1.658,495,0.979,496,2.073,497,1.185,498,1.185,499,0.979,500,1.185,501,0.979,502,1.185,503,0.943,504,1.185,505,0.979,506,1.185,507,0.979,508,1.658,509,1.017,510,1.914,511,1.185,512,1.017,513,1.185,514,0.979,515,1.185,516,0.979,517,1.185,518,1.017,519,1.713,520,1.185,521,0.908,522,1.185,523,0.979,524,1.185,525,0.979,526,1.185,527,0.979,528,1.185,529,0.979,530,1.185,531,0.943,532,1.185,533,0.943,534,1.185,535,0.979,536,1.185,537,0.943,538,1.185,539,1.017,540,1.056,541,1.056,542,0.979,543,1.185,544,0.979,545,1.14,546,1.185,579,0.722,636,3.175,644,1.918,653,1.223,664,3.169,668,2.425,702,4.991,704,3.846,803,3.992,940,3.175,1070,2.615,1457,3.918,1502,2.852,1671,2.852,1694,3.169,1695,3.651,1696,5.111,1697,5.897,1698,5.111,1699,3.651,1700,3.651,1701,3.651,1702,3.651,1703,3.651,1704,3.651,1705,3.651,1706,5.111,1707,5.111,1708,3.651,1709,5.111,1710,3.651,1711,2.615,1712,3.651,1713,3.651,1714,3.651,1715,3.651,1716,3.651,1717,4.436,1718,3.992,1719,5.111,1720,5.545,1721,5.111,1722,5.111,1723,5.111,1724,4.436,1725,2.852,1726,3.169,1727,3.169,1728,4.436,1729,3.169,1730,3.169,1731,3.169,1732,3.169,1733,3.169,1734,3.169,1735,3.169,1736,3.169,1737,3.169,1738,3.169,1739,2.615,1740,3.169,1741,3.169,1742,3.169,1743,3.169]],["title/classes/Maker.html",[168,0.007,1744,3.067]],["body/classes/Maker.html",[3,0.175,4,0.153,5,0.153,7,0.266,13,0.86,43,0.363,45,0.389,46,0.015,47,0.314,48,0.243,49,0.363,56,0.64,62,1.922,111,0.266,134,2.056,141,0.01,142,4.219,143,3.356,158,2.981,167,0.252,168,0.01,178,0.873,196,0.987,281,0.012,282,0.01,835,2.826,1036,5.164,1744,5.164,1745,4.689,1746,6.201,1747,6.611,1748,6.611,1749,5.402,1750,5.402,1751,5.164,1752,5.402,1753,5.402,1754,5.402,1755,6.611,1756,6.611,1757,5.402,1758,5.402,1759,5.402,1760,5.402,1761,5.402,1762,5.402,1763,5.402,1764,5.402,1765,5.402,1766,5.402,1767,5.402,1768,5.402,1769,5.402,1770,5.402,1771,5.402,1772,5.402,1773,5.402,1774,5.402,1775,5.402,1776,5.402,1777,5.402,1778,5.402,1779,5.402,1780,5.402,1781,5.402,1782,5.402]],["title/modules/MaterialsModule.html",[547,2.294,1376,2.608]],["body/modules/MaterialsModule.html",[3,0.176,4,0.154,5,0.154,46,0.015,111,0.352,112,0.364,141,0.01,167,0.176,168,0.01,281,0.012,282,0.01,549,3.167,554,3.601,568,3.882,570,3.882,572,4.744,575,4.705,576,4.705,937,2.344,1376,4.401,1783,5.42,1784,7.154,1785,7.154,1786,7.154,1787,7.154,1788,7.154,1789,7.154,1790,7.154,1791,7.154,1792,7.154,1793,7.154,1794,7.154,1795,7.154,1796,7.154,1797,7.154,1798,7.154,1799,7.154,1800,7.154,1801,7.154,1802,7.154,1803,7.154,1804,7.154]],["title/classes/Member.html",[130,1.325,168,0.007]],["body/classes/Member.html",[3,0.161,4,0.141,5,0.141,7,0.244,8,1.013,39,0.743,43,0.525,45,0.356,46,0.015,47,0.442,48,0.359,49,0.462,52,1.766,79,3.292,130,2.114,141,0.009,167,0.161,168,0.009,216,4.35,274,2.142,281,0.011,282,0.009,332,1.739,337,1.966,350,3.255,683,3.134,704,4.11,711,4.11,835,2.592,837,2.988,845,4.626,854,3.292,855,3.594,1291,3.87,1805,4.301,1806,7.446,1807,4.955,1808,4.955,1809,4.955,1810,4.955,1811,4.955,1812,4.955,1813,4.955,1814,4.955]],["title/pipes/MemberIDPipe.html",[561,2.439,1313,2.294]],["body/pipes/MemberIDPipe.html",[3,0.188,4,0.165,5,0.165,13,0.755,43,0.39,45,0.417,46,0.015,47,0.428,48,0.261,49,0.39,52,1.663,56,0.688,111,0.34,112,0.39,141,0.01,167,0.188,168,0.01,169,1.018,178,0.938,281,0.012,282,0.01,290,1.555,305,3.49,313,1.882,345,1.882,446,3.853,561,4.286,653,1.388,1313,4.031,1314,4.153,1316,5.39,1318,5.39,1815,5.034,1816,6.9,1817,5.799,1818,5.799]],["title/injectables/MemberService.html",[0,0.807,305,1.86]],["body/injectables/MemberService.html",[0,1.025,1,2.236,2,2.061,3,0.114,4,0.1,5,0.1,7,0.174,8,0.807,13,0.649,39,0.418,43,0.502,45,0.521,46,0.015,47,0.438,48,0.335,49,0.487,52,1.728,56,0.858,111,0.327,112,0.237,113,1.386,117,0.813,120,1.19,121,1.525,124,1.19,130,1.953,137,1.06,141,0.006,165,1.238,166,1.19,167,0.114,168,0.006,169,0.619,178,1.294,189,0.946,198,2.871,223,1.101,225,2.115,232,1.342,265,2.343,281,0.009,282,0.006,305,2.364,313,1.878,332,1.751,337,1.979,388,2.914,704,3.472,741,2.343,743,2.191,837,3.124,855,1.845,878,1.671,995,1.525,1063,2.755,1087,2.061,1170,3.573,1272,3.573,1291,4.915,1485,4.915,1488,3.897,1819,3.062,1820,4.988,1821,6.292,1822,4.988,1823,4.988,1824,4.988,1825,4.988,1826,4.988,1827,4.988,1828,4.988,1829,3.527,1830,3.527,1831,4.988,1832,3.527,1833,4.988,1834,3.527,1835,4.988,1836,3.527,1837,4.988,1838,6.292,1839,4.988,1840,3.527,1841,4.988,1842,4.988,1843,4.988,1844,3.527,1845,4.988,1846,3.527,1847,3.527,1848,3.527,1849,3.527,1850,3.527,1851,3.527,1852,3.062,1853,3.527,1854,3.527,1855,3.527,1856,3.527,1857,2.191,1858,3.527,1859,3.527,1860,5.788,1861,3.527,1862,3.527,1863,3.527,1864,5.788,1865,3.527,1866,4.988,1867,6.292,1868,3.527,1869,4.988,1870,6.292,1871,4.988,1872,4.988,1873,3.527,1874,3.527,1875,3.527,1876,3.527,1877,3.527,1878,3.527,1879,2.343,1880,3.527,1881,3.527,1882,2.755,1883,4.988,1884,3.527,1885,3.527]],["title/guards/MembersResolver.html",[611,2.812,641,1.776]],["body/guards/MembersResolver.html",[0,1.338,3,0.171,4,0.15,5,0.15,7,0.26,13,0.847,39,0.625,42,1.413,43,0.438,45,0.468,46,0.015,47,0.378,48,0.293,49,0.438,56,0.625,111,0.386,112,0.354,113,1.691,117,1.215,120,1.778,124,1.778,130,1.778,131,1.31,132,1.583,141,0.009,165,1.85,166,1.778,167,0.171,168,0.009,169,0.925,170,1.083,178,0.852,281,0.012,282,0.009,305,3.66,319,1.71,345,1.71,579,1.042,609,3.055,611,4.663,642,2.383,644,2.099,647,2.928,648,3.348,649,3.497,653,1.262,994,2.757,997,3.593,1172,4.574,1886,6.133,1887,5.27,1888,5.27,1889,5.27]],["title/classes/Mrf.html",[101,0.776,168,0.007]],["body/classes/Mrf.html",[3,0.113,4,0.141,5,0.099,7,0.172,8,0.8,39,0.682,43,0.53,45,0.251,46,0.015,47,0.334,48,0.368,49,0.235,52,1.716,60,1.825,62,1.773,84,3.593,86,3.415,101,0.978,111,0.172,137,2.168,141,0.006,149,1.578,167,0.161,168,0.009,180,3.649,183,2.861,281,0.009,282,0.006,350,3.876,683,3.161,835,1.825,837,2.737,842,4.107,845,4.107,852,3.415,853,1.926,854,2.318,855,4.126,876,1.926,877,4.197,878,1.653,879,2.167,880,2.167,888,2.318,949,3.867,1077,3.545,1200,2.499,1204,2.318,1287,4.392,1751,2.725,1890,2.725,1891,5.164,1892,5.164,1893,5.164,1894,5.164,1895,5.164,1896,5.739,1897,5.164,1898,5.164,1899,5.364,1900,3.489,1901,3.489,1902,3.489,1903,3.489,1904,3.489,1905,3.489,1906,3.489,1907,3.489,1908,3.489,1909,3.489,1910,3.489,1911,3.489,1912,3.489,1913,3.489,1914,3.489,1915,3.489,1916,3.489,1917,3.489,1918,3.029,1919,3.029,1920,3.029,1921,4.297,1922,2.725,1923,3.029,1924,3.029,1925,3.029,1926,2.725,1927,3.029,1928,3.029,1929,3.029,1930,3.029,1931,3.029,1932,3.029,1933,2.499]],["title/guards/MrfDeactivateGuard.html",[626,2.608,641,1.776]],["body/guards/MrfDeactivateGuard.html",[0,1.3,1,2.478,3,0.163,4,0.143,5,0.143,7,0.248,8,0.814,13,0.823,39,0.597,43,0.425,45,0.455,46,0.015,47,0.367,48,0.284,49,0.425,56,0.597,79,3.343,97,0.487,111,0.358,112,0.338,113,1.205,117,1.16,134,1.915,137,1.512,141,0.009,165,1.766,166,1.698,167,0.205,168,0.009,169,0.883,170,1.492,178,1.023,196,1.156,223,1.975,281,0.011,282,0.009,319,2.245,345,1.633,579,0.994,626,4.203,633,4.97,642,2.276,644,1.349,647,2.88,649,3.672,653,1.205,813,4.241,816,3.604,818,4.531,820,4.043,821,3.93,822,5.491,823,4.368,824,5.491,825,4.368,826,6.006,827,6.006,828,4.368,829,4.368,830,4.368,831,4.368,832,4.368,833,4.368,834,4.368,995,2.176,1934,5.032,1935,5.032]],["title/components/MrfDistrictComponent.html",[97,0.38,523,1.053]],["body/components/MrfDistrictComponent.html",[3,0.189,4,0.126,5,0.126,7,0.218,8,0.942,39,0.525,43,0.438,45,0.318,46,0.015,47,0.402,48,0.262,49,0.298,97,0.63,101,1.572,111,0.321,112,0.298,131,1.1,141,0.008,167,0.144,168,0.008,169,0.777,189,2.183,196,1.064,226,1.187,274,2.519,281,0.01,282,0.008,283,1.232,284,1.75,285,1.436,286,1.684,287,1.33,288,1.436,290,1.187,291,2.471,292,1.965,294,1.818,348,2.002,492,1.28,493,1.89,494,1.89,495,1.187,496,2.245,497,1.436,498,1.436,499,1.187,500,1.436,501,1.187,502,1.436,503,1.143,504,1.436,505,1.187,506,1.436,507,1.187,508,1.89,509,1.232,510,2.113,511,1.436,512,1.232,513,1.436,514,1.187,515,1.436,516,1.187,517,1.436,518,1.232,519,1.187,520,1.436,521,1.1,522,1.436,523,1.855,524,1.436,525,1.187,526,1.436,527,1.187,528,1.436,529,1.187,530,1.436,531,1.143,532,1.436,533,1.143,534,1.436,535,1.187,536,1.436,537,1.143,538,1.436,539,1.232,540,1.28,541,1.28,542,1.187,543,1.436,544,1.187,545,1.382,546,1.436,579,0.875,609,2.695,644,1.562,911,3.17,934,2.097,935,3.44,1936,4.955,1937,6.005,1938,3.841,1939,4.425,1940,6.51,1941,5.824,1942,5.651,1943,5.824,1944,4.425,1945,5.824,1946,4.55,1947,3.457,1948,4.425]],["title/guards/MrfDistrictResolver.html",[619,2.294,641,1.776]],["body/guards/MrfDistrictResolver.html",[0,1.483,1,2.571,3,0.145,4,0.127,5,0.127,7,0.221,13,0.764,39,0.531,43,0.395,45,0.422,46,0.015,47,0.341,48,0.264,49,0.395,56,0.531,62,1.516,101,0.886,111,0.365,112,0.301,113,1.773,117,1.033,120,1.512,121,1.938,122,2.344,124,1.512,131,1.114,141,0.008,165,2.44,166,2.346,167,0.226,168,0.012,169,1.22,170,1.428,178,1.197,245,2.92,274,1.938,281,0.011,282,0.008,319,1.454,332,1.573,345,1.454,390,2.618,579,0.886,609,3.124,617,2.618,618,2.618,619,3.431,620,2.618,642,2.027,644,2.136,647,2.994,648,3.509,649,3.575,651,2.618,652,2.618,653,1.664,820,3.827,994,2.344,995,1.938,997,3.983,1087,2.618,1857,2.783,1879,2.977,1949,4.481,1950,4.481,1951,3.209,1952,4.691,1953,2.977,1954,3.209]],["title/components/MrfDivisionComponent.html",[97,0.38,525,1.053]],["body/components/MrfDivisionComponent.html",[3,0.189,4,0.126,5,0.126,7,0.218,8,0.942,39,0.525,43,0.438,45,0.318,46,0.015,47,0.402,48,0.262,49,0.298,97,0.63,101,1.572,111,0.321,112,0.298,131,1.1,141,0.008,167,0.144,168,0.008,169,0.777,189,2.183,196,1.064,226,1.187,281,0.01,282,0.008,283,1.232,284,1.75,285,1.436,286,1.684,287,1.33,288,1.436,290,1.187,291,2.471,292,1.965,294,1.818,332,2.045,348,2.002,492,1.28,493,1.89,494,1.89,495,1.187,496,2.245,497,1.436,498,1.436,499,1.187,500,1.436,501,1.187,502,1.436,503,1.143,504,1.436,505,1.187,506,1.436,507,1.187,508,1.89,509,1.232,510,2.113,511,1.436,512,1.232,513,1.436,514,1.187,515,1.436,516,1.187,517,1.436,518,1.232,519,1.187,520,1.436,521,1.1,522,1.436,523,1.187,524,1.436,525,1.855,526,1.436,527,1.187,528,1.436,529,1.187,530,1.436,531,1.143,532,1.436,533,1.143,534,1.436,535,1.187,536,1.436,537,1.143,538,1.436,539,1.232,540,1.28,541,1.28,542,1.187,543,1.436,544,1.187,545,1.382,546,1.436,579,0.875,609,2.695,644,1.562,911,3.17,934,2.097,935,3.44,1936,4.955,1942,5.651,1946,4.55,1947,3.457,1955,6.005,1956,3.841,1957,4.425,1958,6.51,1959,5.824,1960,5.824,1961,4.425,1962,5.824,1963,4.425]],["title/guards/MrfDivisionResolver.html",[618,2.294,641,1.776]],["body/guards/MrfDivisionResolver.html",[0,1.483,1,2.571,3,0.145,4,0.127,5,0.127,7,0.221,13,0.764,39,0.531,43,0.395,45,0.422,46,0.015,47,0.341,48,0.264,49,0.395,56,0.531,62,1.516,101,0.886,111,0.365,112,0.301,113,1.773,117,1.033,120,1.512,121,1.938,122,2.344,124,1.512,131,1.114,141,0.008,165,2.44,166,2.346,167,0.226,168,0.012,169,1.22,170,1.428,178,1.197,245,2.92,274,1.938,281,0.011,282,0.008,319,1.454,332,1.573,345,1.454,390,2.618,579,0.886,609,3.124,617,2.618,618,3.431,619,2.618,620,2.618,642,2.027,644,2.136,647,2.994,648,3.509,649,3.575,651,2.618,652,2.618,653,1.664,820,3.827,994,2.344,995,1.938,997,3.983,1087,2.618,1857,2.783,1879,2.977,1951,3.209,1952,4.691,1953,2.977,1954,3.209,1964,4.481,1965,4.481]],["title/components/MrfListComponent.html",[97,0.38,527,1.053]],["body/components/MrfListComponent.html",[1,1.999,3,0.118,4,0.066,5,0.103,7,0.114,8,0.589,12,0.813,13,0.474,39,0.274,42,1.368,43,0.51,45,0.324,46,0.015,47,0.39,48,0.325,49,0.302,52,1.434,56,0.657,58,2.989,60,1.904,62,0.598,72,1.544,84,2.901,86,2.237,97,0.435,101,1.217,111,0.303,112,0.156,120,1.518,131,0.575,132,0.695,136,3.222,138,1.33,141,0.009,149,1.047,167,0.075,168,0.004,169,0.406,170,0.748,189,2.025,196,0.822,198,2.205,199,3.249,208,1.438,226,0.621,232,0.881,240,2.628,245,1.151,251,2.009,256,1.658,274,1.945,276,3.657,281,0.007,282,0.004,283,0.645,284,1.094,285,0.751,286,0.881,287,0.695,288,0.751,290,0.621,291,2.328,292,1.228,294,1.136,301,1.941,304,1.352,312,2.304,313,2.13,316,2.843,320,2.815,332,1.579,337,2.2,345,0.751,348,2.035,350,2.79,371,3.098,384,4.177,387,2.261,388,2.98,391,1.808,392,3.727,403,1.808,408,2.418,411,1.808,413,2.795,423,3.168,428,2.009,429,1.278,433,1.438,435,2.607,436,2.009,437,2.009,438,3.16,439,4.599,445,2.607,448,1.808,449,1.538,455,2.009,456,1.538,467,1.808,472,1.658,485,1.658,486,1.658,492,0.669,493,1.181,494,1.181,495,0.621,496,1.655,497,0.751,498,0.751,499,0.621,500,0.751,501,0.621,502,0.751,503,0.598,504,0.751,505,0.621,506,0.751,507,0.621,508,1.181,509,0.645,510,1.46,511,0.751,512,0.645,513,0.751,514,0.621,515,0.751,516,0.621,517,0.751,518,0.645,519,0.621,520,0.751,521,0.575,522,0.751,523,0.621,524,0.751,525,0.621,526,0.751,527,1.368,528,0.751,529,0.621,530,0.751,531,0.598,532,0.751,533,0.598,534,0.751,535,0.621,536,0.751,537,0.598,538,0.751,539,0.645,540,0.669,541,0.669,542,0.621,543,0.751,544,0.621,545,0.723,546,0.751,579,0.457,644,1.651,711,1.278,741,2.989,743,2.795,852,1.81,898,5.438,903,2.483,904,3.388,905,2.989,906,2.607,908,2.815,909,2.607,915,2.418,917,3.388,920,3.727,925,2.483,927,1.278,928,2.418,929,2.418,931,1.278,932,2.418,934,1.097,937,1.001,940,1.438,941,2.843,942,1.658,954,1.278,965,1.538,966,1.538,974,1.538,975,1.538,976,1.538,979,1.538,983,1.538,986,2.607,1265,2.354,1294,1.538,1299,3.16,1303,3.16,1336,2.843,1435,2.009,1464,1.808,1727,3.16,1746,6.043,1966,2.009,1967,4.813,1968,2.315,1969,3.64,1970,4.499,1971,4.499,1972,4.499,1973,4.499,1974,4.499,1975,3.64,1976,5.1,1977,3.64,1978,2.315,1979,2.315,1980,2.315,1981,2.315,1982,3.64,1983,2.315,1984,2.315,1985,2.315,1986,2.315,1987,2.315,1988,2.315,1989,2.315,1990,2.315,1991,2.843,1992,2.315,1993,2.315,1994,2.315,1995,2.315,1996,2.315,1997,3.64,1998,3.64,1999,3.64,2000,3.64,2001,3.64,2002,3.64,2003,3.64,2004,3.64,2005,3.64,2006,3.64,2007,3.64,2008,2.315,2009,2.315,2010,2.315,2011,3.64,2012,3.64,2013,2.315,2014,2.315,2015,2.315,2016,3.64,2017,2.315,2018,3.64,2019,2.315,2020,3.64,2021,2.315,2022,2.315,2023,4.499,2024,2.315,2025,3.64,2026,2.315,2027,2.315,2028,2.315,2029,2.315,2030,3.64,2031,3.64,2032,3.64,2033,3.64,2034,3.64,2035,3.16,2036,3.16,2037,3.64,2038,3.64,2039,3.64,2040,3.64,2041,2.009,2042,2.009,2043,3.64,2044,3.64,2045,2.315,2046,2.315,2047,2.315,2048,2.315,2049,2.315,2050,2.315,2051,2.315,2052,2.315,2053,1.808,2054,2.315,2055,2.315,2056,2.315,2057,2.315,2058,2.009,2059,3.64,2060,2.009,2061,2.009,2062,2.009,2063,2.009,2064,2.843,2065,2.009,2066,3.16,2067,3.905,2068,3.16,2069,2.009,2070,4.499,2071,1.808,2072,1.808,2073,2.009,2074,3.16,2075,2.843,2076,1.808,2077,3.905,2078,1.808,2079,2.009,2080,1.658,2081,2.009,2082,2.009]],["title/classes/MrfListEntry.html",[168,0.007,1933,2.812]],["body/classes/MrfListEntry.html",[3,0.137,4,0.16,5,0.12,7,0.208,8,0.913,39,0.754,43,0.5,45,0.304,46,0.015,47,0.432,48,0.334,49,0.284,52,1.721,60,2.209,62,1.642,84,3.81,86,3.622,101,0.835,111,0.208,137,2.127,141,0.008,149,1.91,167,0.183,168,0.01,180,2.331,183,3.164,281,0.01,282,0.008,350,3.911,683,3.15,835,2.209,837,2.93,842,2.623,845,2.623,852,3.622,853,2.331,854,2.806,876,2.331,877,4.333,878,2.001,879,2.623,880,2.623,888,2.806,949,4.41,1077,4.044,1200,3.025,1204,2.806,1287,2.806,1751,3.299,1890,3.299,1891,3.299,1892,3.299,1893,3.299,1894,3.299,1895,3.299,1896,3.666,1897,3.299,1898,3.299,1899,5.689,1918,3.666,1919,3.666,1920,3.666,1921,4.901,1922,3.299,1923,3.666,1924,3.666,1925,3.666,1926,3.299,1927,3.666,1928,3.666,1929,3.666,1930,3.666,1931,3.666,1932,3.666,1933,4.044,2083,4.223,2084,4.223,2085,4.223,2086,4.223,2087,4.223,2088,4.223,2089,4.223]],["title/guards/MrfPendingCerfResolver.html",[620,2.294,641,1.776]],["body/guards/MrfPendingCerfResolver.html",[0,1.483,1,2.571,3,0.145,4,0.127,5,0.127,7,0.221,13,0.764,39,0.531,43,0.395,45,0.422,46,0.015,47,0.341,48,0.264,49,0.395,56,0.531,62,1.516,101,0.886,111,0.365,112,0.301,113,1.773,117,1.033,120,1.512,121,1.938,122,2.344,124,1.512,131,1.114,141,0.008,165,2.44,166,2.346,167,0.226,168,0.012,169,1.22,170,1.428,178,1.197,245,2.92,274,1.938,281,0.011,282,0.008,319,1.454,332,1.573,345,1.454,390,2.618,579,0.886,609,3.124,617,2.618,618,2.618,619,2.618,620,3.431,642,2.027,644,2.136,647,2.994,648,3.509,649,3.575,651,2.618,652,2.618,653,1.664,820,3.827,994,2.344,995,1.938,997,3.983,1087,2.618,1857,2.783,1879,2.977,1951,3.209,1952,4.691,1953,2.977,1954,3.209,2090,4.481,2091,4.481]],["title/classes/MrfReuseStrategy.html",[168,0.007,580,2.608]],["body/classes/MrfReuseStrategy.html",[3,0.082,4,0.072,5,0.072,7,0.125,8,1.091,12,2.146,13,0.509,43,0.472,45,0.473,46,0.015,47,0.355,48,0.315,49,0.411,52,1.018,56,0.817,62,1.009,72,1.328,84,2.045,86,1.944,97,0.245,101,1.144,111,0.125,134,1.488,137,2.23,141,0.005,146,2.428,156,1.685,158,1.4,167,0.082,168,0.005,170,1.512,178,1.2,188,1.4,195,1.817,198,1.69,202,1.685,217,2.799,223,2.054,225,2.601,231,4.563,233,3.56,251,1.4,253,1.817,281,0.007,282,0.007,312,1.674,313,1.268,319,2.388,371,1.147,478,1.981,487,3.053,521,0.631,565,2.045,578,4.185,579,0.501,580,2.597,594,3.798,608,1.576,609,1.05,610,1.817,624,1.576,628,1.981,631,3.415,632,4.976,644,1.048,647,3.038,653,0.936,670,2.799,714,1.097,835,1.327,855,1.327,946,3.725,960,2.799,969,3.415,1048,3.053,1050,1.685,1074,1.981,1079,4.185,1104,4.528,1401,3.838,1403,3.838,1463,2.799,1470,3.845,1711,3.838,1882,1.981,2053,1.981,2080,2.799,2092,5.56,2093,1.981,2094,3.725,2095,4.139,2096,4.139,2097,4.139,2098,3.909,2099,3.909,2100,3.909,2101,4.139,2102,3.909,2103,5.307,2104,4.651,2105,2.536,2106,2.536,2107,2.536,2108,2.536,2109,3.393,2110,3.393,2111,3.393,2112,3.393,2113,3.393,2114,3.393,2115,6.088,2116,2.536,2117,3.393,2118,3.393,2119,3.393,2120,5.53,2121,2.536,2122,3.393,2123,3.393,2124,3.393,2125,3.053,2126,3.393,2127,3.053,2128,3.393,2129,4.651,2130,3.393,2131,4.139,2132,5.307,2133,4.521,2134,3.393,2135,3.393,2136,3.393,2137,5.982,2138,3.393,2139,3.393,2140,4.651,2141,3.053,2142,3.393,2143,3.393,2144,2.536,2145,5.71,2146,3.393,2147,2.536,2148,3.393,2149,2.536,2150,3.393,2151,4.651,2152,2.536,2153,3.393,2154,3.393,2155,3.393,2156,4.651,2157,3.393,2158,3.393,2159,3.393,2160,3.393,2161,5.307,2162,2.536,2163,2.536,2164,2.202,2165,2.202,2166,2.202,2167,2.202,2168,2.202,2169,2.202,2170,2.202,2171,1.981,2172,3.415,2173,3.393,2174,2.202,2175,4.139,2176,3.393,2177,4.139,2178,2.202,2179,2.202,2180,2.202,2181,2.202,2182,4.139,2183,2.202,2184,4.139,2185,2.202,2186,2.202,2187,2.202,2188,2.202,2189,2.202,2190,1.981,2191,2.202,2192,2.202,2193,2.202,2194,2.202,2195,2.202,2196,2.202,2197,2.202,2198,2.202,2199,2.202,2200,3.393,2201,2.202,2202,1.981,2203,2.202,2204,3.393,2205,2.202,2206,3.393,2207,2.202,2208,2.202,2209,2.202,2210,2.202,2211,2.202,2212,2.202,2213,2.202,2214,1.981,2215,2.202,2216,2.202,2217,3.393,2218,2.202,2219,3.393,2220,4.651,2221,2.202,2222,3.393,2223,2.202,2224,2.202,2225,2.202,2226,2.202,2227,2.202,2228,2.202,2229,2.202]],["title/components/MrfSecretaryComponent.html",[97,0.38,529,1.053]],["body/components/MrfSecretaryComponent.html",[3,0.184,4,0.12,5,0.12,7,0.209,8,0.915,39,0.503,43,0.381,45,0.305,46,0.015,47,0.395,48,0.254,49,0.285,62,1.095,97,0.617,101,1.562,111,0.314,112,0.285,131,1.054,141,0.008,167,0.138,168,0.008,169,0.744,189,2.174,196,1.034,226,1.137,245,2.816,275,4.055,281,0.01,282,0.008,283,1.181,284,1.701,285,1.376,286,1.614,287,1.274,288,1.376,290,1.137,291,2.463,292,1.91,294,1.767,320,3.754,321,3.68,329,3.68,348,1.918,384,3.724,392,3.724,397,2.634,413,2.634,415,3.312,429,2.34,435,4.055,449,2.817,492,1.226,493,1.837,494,1.837,495,1.137,496,2.207,497,1.376,498,1.376,499,1.137,500,1.376,501,1.137,502,1.376,503,1.095,504,1.376,505,1.137,506,1.376,507,1.137,508,1.837,509,1.181,510,2.068,511,1.376,512,1.181,513,1.376,514,1.137,515,1.376,516,1.137,517,1.376,518,1.181,519,1.137,520,1.376,521,1.054,522,1.376,523,1.137,524,1.376,525,1.137,526,1.376,527,1.137,528,1.376,529,1.824,530,1.376,531,1.095,532,1.376,533,1.095,534,1.376,535,1.137,536,1.376,537,1.095,538,1.376,539,1.181,540,1.226,541,1.226,542,1.137,543,1.376,544,1.137,545,1.324,546,1.376,579,0.838,644,1.518,727,3.312,911,3.036,920,2.477,934,2.009,935,3.383,1936,4.565,1946,4.422,1967,5.532,2071,3.312,2072,3.312,2075,4.422,2076,3.312,2078,3.312,2230,5.532,2231,3.68,2232,4.24,2233,6.373,2234,5.661,2235,5.661,2236,5.661,2237,4.24,2238,4.24,2239,3.68,2240,3.68,2241,3.68,2242,4.24]],["title/guards/MrfSecretaryResolver.html",[617,2.294,641,1.776]],["body/guards/MrfSecretaryResolver.html",[0,1.483,1,2.571,3,0.145,4,0.127,5,0.127,7,0.221,13,0.764,39,0.531,43,0.395,45,0.422,46,0.015,47,0.341,48,0.264,49,0.395,56,0.531,62,1.516,101,0.886,111,0.365,112,0.301,113,1.773,117,1.033,120,1.512,121,1.938,122,2.344,124,1.512,131,1.114,141,0.008,165,2.44,166,2.346,167,0.226,168,0.012,169,1.22,170,1.428,178,1.197,245,2.92,274,1.938,281,0.011,282,0.008,319,1.454,332,1.573,345,1.454,390,2.618,579,0.886,609,3.124,617,3.431,618,2.618,619,2.618,620,2.618,642,2.027,644,2.136,647,2.994,648,3.509,649,3.575,651,2.618,652,2.618,653,1.664,820,3.827,994,2.344,995,1.938,997,3.983,1087,2.618,1857,2.783,1879,2.977,1951,3.209,1952,4.691,1953,2.977,1954,3.209,2243,4.481,2244,4.481]],["title/injectables/MrfService.html",[0,0.807,2245,3.067]],["body/injectables/MrfService.html",[0,1.053,1,2.264,2,2.14,3,0.119,4,0.104,5,0.104,7,0.18,8,0.828,12,2.074,13,0.667,39,0.434,42,1.92,43,0.511,45,0.484,46,0.015,47,0.391,48,0.322,49,0.453,52,1.49,56,0.849,62,0.946,72,1.02,84,3.347,86,2.548,101,1.538,111,0.36,112,0.246,113,0.877,114,3.67,117,0.844,121,1.584,124,1.236,131,0.911,132,1.101,133,3.669,141,0.007,167,0.119,168,0.007,169,0.643,170,1.623,178,1.128,180,2.022,191,3.182,196,1.169,281,0.009,282,0.007,287,1.539,312,1.286,313,1.189,717,4.002,842,2.276,852,1.822,995,1.584,1015,4.447,1017,5.553,1026,5.128,1027,4.997,1034,4.447,1036,2.861,1037,5.449,1045,5.553,1063,2.861,1064,3.18,1065,2.861,1066,2.861,1067,3.18,1068,2.624,1069,2.14,1070,2.624,1077,3.669,1082,3.18,1087,2.14,1098,3.18,1099,4.447,1100,4.447,1101,3.18,1102,3.18,1103,3.18,1104,3.182,1105,3.18,1106,3.18,1108,3.18,1115,3.18,1140,3.18,1287,3.925,1857,2.276,1891,2.861,1892,2.861,1893,2.861,1894,2.861,1895,2.861,1897,2.861,1898,2.861,1899,2.861,1922,2.861,2094,4.002,2245,4.002,2246,3.18,2247,5.908,2248,6.397,2249,6.397,2250,5.123,2251,5.123,2252,5.123,2253,3.663,2254,3.663,2255,3.663,2256,3.663,2257,5.123,2258,3.663,2259,5.123,2260,3.663,2261,5.123,2262,3.663,2263,3.663,2264,3.663,2265,3.663,2266,3.663,2267,3.663,2268,6.397,2269,3.663,2270,3.663,2271,3.663,2272,3.663,2273,3.663,2274,3.663,2275,3.663,2276,3.663,2277,3.663,2278,3.663,2279,3.663,2280,5.123,2281,3.663,2282,5.123,2283,5.123,2284,3.663,2285,3.663,2286,3.663,2287,3.663,2288,3.663,2289,3.663,2290,3.663,2291,3.663,2292,3.663,2293,3.663,2294,3.663,2295,3.663,2296,3.663,2297,5.123,2298,3.663,2299,5.123,2300,5.123,2301,3.663,2302,3.663,2303,3.663]],["title/components/MyCerfsComponent.html",[97,0.38,531,1.014]],["body/components/MyCerfsComponent.html",[3,0.12,4,0.067,5,0.105,7,0.117,8,0.6,13,0.483,39,0.281,42,1.386,43,0.483,45,0.329,46,0.015,47,0.393,48,0.297,49,0.307,52,0.976,56,0.665,58,3.435,62,1.335,64,1.241,72,1.562,97,0.442,101,1.109,111,0.333,112,0.16,113,0.568,115,1.853,117,0.547,120,1.542,130,0.801,131,0.59,132,0.713,137,1.553,138,1.67,141,0.004,167,0.077,168,0.004,169,0.416,170,0.939,178,0.6,188,1.309,189,2.033,196,1.136,225,1.356,226,0.636,240,2.45,281,0.007,282,0.004,283,0.661,284,1.115,285,1.204,286,0.903,287,0.713,288,0.77,290,0.636,291,2.327,292,1.252,294,1.159,301,1.967,312,1.815,313,1.483,315,2.059,319,1.204,320,3.734,324,3.221,325,4.018,348,1.679,371,2.812,384,4.318,387,2.839,391,1.853,392,3.476,394,1.699,397,2.305,398,1.576,403,1.853,408,1.576,411,1.853,413,2.839,415,1.853,420,2.466,423,2.839,429,2.523,432,2.059,433,2.305,434,3.221,435,3.274,439,4.038,441,2.899,443,1.853,446,3.037,448,1.853,449,2.466,456,1.576,462,1.699,465,2.658,467,2.899,472,2.658,485,1.699,486,1.699,488,2.059,492,0.686,493,1.204,494,1.204,495,0.995,496,1.678,497,0.77,498,0.77,499,0.636,500,0.77,501,0.636,502,0.77,503,0.613,504,0.77,505,0.636,506,0.77,507,0.636,508,1.204,509,0.661,510,1.483,511,0.77,512,0.661,513,0.77,514,0.636,515,0.77,516,0.636,517,0.77,518,0.661,519,0.636,520,0.77,521,0.59,522,0.77,523,0.636,524,0.77,525,0.636,526,0.77,527,0.636,528,0.77,529,0.636,530,0.77,531,1.335,532,0.77,533,0.613,534,0.77,535,0.636,536,0.77,537,0.613,538,0.77,539,0.661,540,0.686,541,0.686,542,0.636,543,0.77,544,0.636,545,0.741,546,0.77,565,1.241,579,0.469,609,1.892,644,1.725,727,1.853,731,1.853,839,2.466,841,2.305,850,3.211,852,3.092,877,2.048,903,2.523,904,3.037,905,3.037,906,2.658,907,3.221,908,2.853,909,2.658,910,4.487,915,2.466,917,3.435,918,3.221,920,2.671,923,3.968,925,2.523,927,2.523,928,2.466,929,2.466,931,2.523,932,2.466,934,1.124,935,2.571,936,2.059,937,1.026,940,1.474,941,1.853,954,1.309,956,3.221,958,2.059,959,1.853,960,1.699,961,2.059,962,2.059,963,2.059,964,3.221,965,1.576,966,1.576,967,2.059,968,2.059,969,1.699,970,2.059,971,2.059,972,2.059,973,2.059,974,1.576,975,1.576,976,1.576,977,1.853,978,2.059,979,1.576,980,2.059,981,2.059,982,2.059,983,1.576,984,3.221,985,2.059,986,4.261,1027,1.853,1037,1.853,1065,1.853,1066,1.853,1069,2.168,1294,2.466,1304,3.57,1305,2.059,1383,1.853,1725,1.853,1726,2.059,1852,2.059,1947,1.853,1953,1.576,2035,3.221,2036,3.221,2041,2.059,2042,2.059,2060,2.059,2061,2.059,2062,2.059,2063,2.059,2064,1.853,2065,2.059,2066,3.221,2067,3.968,2068,3.221,2069,2.059,2071,2.899,2072,2.899,2073,2.059,2074,3.968,2075,2.899,2076,1.853,2077,2.059,2078,1.853,2079,3.221,2080,1.699,2081,2.059,2082,2.059,2239,2.059,2240,2.059,2241,3.221,2304,6.304,2305,6.304,2306,2.059,2307,2.372,2308,4.571,2309,3.711,2310,4.571,2311,5.17,2312,2.372,2313,4.571,2314,3.711,2315,2.372,2316,2.372,2317,2.372,2318,2.372,2319,2.372,2320,2.372,2321,2.372,2322,2.372,2323,2.372,2324,2.372,2325,2.372,2326,2.372,2327,2.059,2328,2.059,2329,2.372,2330,3.711,2331,3.711,2332,2.372,2333,2.372,2334,2.372,2335,2.372,2336,2.372,2337,2.372,2338,2.372,2339,2.372,2340,2.372,2341,2.372,2342,2.372,2343,2.372,2344,2.372,2345,2.372,2346,3.711,2347,3.711,2348,3.711,2349,2.372,2350,3.711,2351,3.711,2352,3.711,2353,3.711,2354,3.711,2355,3.711,2356,3.221,2357,3.711,2358,3.711,2359,3.711,2360,3.711,2361,2.372,2362,2.372,2363,2.372,2364,2.372,2365,2.372,2366,2.372,2367,2.059,2368,3.711,2369,2.372,2370,2.372,2371,2.372,2372,2.372,2373,2.372,2374,2.372,2375,2.372,2376,2.372,2377,2.372,2378,2.372,2379,2.372,2380,3.711,2381,2.372]],["title/guards/MyCerfsResolver.html",[614,2.608,641,1.776]],["body/guards/MyCerfsResolver.html",[0,1.388,1,2.518,3,0.155,4,0.136,5,0.136,7,0.235,13,0.797,39,0.567,42,1.642,43,0.412,45,0.44,46,0.015,47,0.356,48,0.275,49,0.412,56,0.567,62,1.234,64,2.5,111,0.377,112,0.321,113,1.617,117,1.101,120,1.612,121,2.066,122,2.5,123,2.792,124,1.612,130,1.612,131,1.188,132,1.436,137,1.436,138,1.746,141,0.009,165,2.149,166,2.066,167,0.199,168,0.011,169,1.074,170,1.388,178,1.191,225,1.746,281,0.011,282,0.009,319,1.551,345,1.551,579,0.944,609,3.049,614,4.067,615,3.175,642,2.161,644,2.101,647,2.922,648,3.375,649,3.49,651,2.792,652,2.792,653,1.466,714,2.066,993,5.277,994,2.5,995,2.066,997,3.728,999,4.148,1000,4.148,1001,4.148,1002,4.148,1003,3.733,1004,4.148,1005,4.148,1006,4.148,1007,4.148,1008,4.148,1348,4.148,1349,4.148]],["title/directives/NewFocusInput.html",[495,1.053,544,1.053]],["body/directives/NewFocusInput.html",[3,0.18,4,0.158,5,0.158,7,0.274,8,1.088,13,0.876,39,0.659,43,0.505,45,0.4,46,0.015,47,0.323,48,0.325,49,0.374,56,0.659,72,1.548,111,0.274,112,0.374,141,0.01,167,0.18,168,0.01,281,0.012,282,0.01,290,1.491,291,2.021,301,2.861,495,1.804,541,1.608,544,1.804,545,2.1,683,2.93,1283,2.765,2327,6.682,2328,7.019,2382,4.826,2383,7.517,2384,5.56,2385,5.56,2386,5.56,2387,6.728,2388,5.56]],["title/components/ProfileComponent.html",[97,0.38,533,1.014]],["body/components/ProfileComponent.html",[3,0.173,4,0.11,5,0.11,7,0.19,8,0.86,12,2.668,13,0.692,32,5.114,39,0.458,42,1.755,43,0.477,45,0.278,46,0.015,47,0.38,48,0.273,49,0.26,56,0.721,72,1.692,97,0.634,101,1.357,111,0.322,112,0.26,131,0.961,132,1.161,137,1.597,138,1.943,141,0.007,167,0.125,168,0.007,169,0.678,170,0.794,189,2.154,196,0.971,218,4.038,226,1.036,274,2.299,281,0.01,282,0.007,283,1.076,284,1.597,285,1.254,286,1.471,287,1.161,288,1.254,290,1.036,291,2.446,292,1.794,294,1.66,301,2.491,304,2.258,332,1.866,337,2.109,368,4.615,492,1.118,493,1.725,494,1.725,495,1.036,496,2.124,497,1.254,498,1.254,499,1.036,500,1.254,501,1.036,502,1.254,503,0.998,504,1.254,505,1.036,506,1.254,507,1.036,508,1.725,509,1.076,510,1.972,511,1.254,512,1.076,513,1.254,514,1.036,515,1.254,516,1.036,517,1.254,518,1.076,519,1.036,520,1.254,521,0.961,522,1.254,523,1.036,524,1.254,525,1.036,526,1.254,527,1.036,528,1.254,529,1.036,530,1.254,531,0.998,532,1.254,533,1.69,534,1.254,535,1.036,536,1.254,537,0.998,538,1.254,539,1.076,540,1.118,541,1.118,542,1.036,543,1.254,544,1.036,545,1.207,546,1.254,564,3.808,565,2.022,579,0.764,636,3.303,644,1.948,653,1.273,661,3.355,690,5.683,714,1.671,803,4.748,1070,4.353,1113,3.808,1301,4.615,1457,4.038,1511,3.019,1718,4.153,2389,3.355,2390,6.078,2391,5.317,2392,3.865,2393,3.865,2394,3.865,2395,3.865,2396,3.865,2397,3.865,2398,3.865,2399,3.865,2400,3.865,2401,3.865,2402,3.865,2403,3.865,2404,3.865,2405,3.865,2406,5.317,2407,5.317,2408,5.317,2409,3.865]],["title/injectables/RequestCache.html",[0,0.807,770,2.812]],["body/injectables/RequestCache.html",[0,1.064,2,2.175,3,0.121,4,0.106,5,0.106,7,0.183,8,0.838,12,2.092,13,0.674,43,0.484,45,0.463,46,0.015,47,0.374,48,0.315,49,0.433,55,1.851,56,0.803,60,3.668,62,0.961,72,1.794,111,0.345,112,0.25,113,1.679,114,2.312,117,0.858,120,1.748,124,1.256,127,1.764,128,2.175,129,2.473,130,2.366,131,0.925,135,4.28,141,0.007,165,1.307,166,1.256,167,0.121,168,0.007,178,0.838,180,3.556,183,1.851,191,2.312,196,0.946,198,2.24,202,2.473,210,5.022,214,2.907,219,2.907,222,3.764,223,1.162,226,0.998,232,2.792,251,2.859,265,3.442,281,0.009,282,0.007,312,1.307,313,1.208,325,2.666,337,2.055,371,2.343,677,2.907,750,3.231,770,3.71,773,4.557,782,5.022,942,2.666,977,4.046,1272,3.71,1403,2.666,1474,2.907,1670,3.231,1991,2.907,2125,4.046,2190,4.654,2214,2.907,2410,5.73,2411,2.907,2412,5.958,2413,5.18,2414,5.18,2415,3.722,2416,3.722,2417,5.958,2418,5.18,2419,3.722,2420,5.18,2421,3.722,2422,3.722,2423,3.722,2424,3.722,2425,3.722,2426,3.722,2427,4.046,2428,3.231,2429,3.722,2430,5.958,2431,3.722,2432,3.722,2433,3.722,2434,3.722,2435,3.722,2436,5.958,2437,3.722,2438,6.442,2439,3.722,2440,3.722,2441,3.722,2442,3.722,2443,3.722,2444,3.722,2445,3.722,2446,5.18,2447,3.722,2448,5.18,2449,3.722,2450,3.722,2451,3.722,2452,3.722,2453,3.722,2454,3.722,2455,3.722,2456,3.722,2457,3.722,2458,3.722,2459,5.18,2460,3.722,2461,3.722,2462,3.722,2463,3.722,2464,3.722,2465,3.722,2466,6.772,2467,3.722,2468,3.722,2469,3.722,2470,3.722,2471,3.722,2472,3.722]],["title/interfaces/Response.html",[134,1.494,135,2.608]],["body/interfaces/Response.html",[0,0.88,1,0.929,3,0.093,4,0.081,5,0.081,6,2.236,7,0.141,8,0.693,9,2.484,10,2.484,11,2.484,12,2.143,20,2.484,21,2.484,24,2.484,27,2.484,28,2.484,29,2.484,32,2.236,37,2.484,38,2.484,41,3.347,42,1.377,46,0.015,47,0.355,48,0.274,49,0.431,50,1.901,51,2.484,52,1.647,53,3.146,55,2.554,56,0.339,57,2.484,58,1.901,60,3.721,61,2.484,62,1.472,64,2.686,65,2.484,67,2.484,69,2.484,74,2.484,76,2.484,78,2.236,81,2.484,84,2.686,86,2.131,90,2.484,92,2.484,95,2.484,98,2.484,100,2.484,101,1.015,111,0.336,112,0.192,113,0.685,114,1.778,115,2.236,116,2.484,117,0.66,118,2.236,119,2.484,120,0.966,121,1.238,122,2.241,123,1.672,124,0.966,125,1.58,126,2.484,127,1.356,128,1.672,129,1.901,130,0.966,131,0.712,132,0.86,133,3.678,134,1.089,135,2.846,136,4.372,137,1.925,138,2.23,139,3.146,140,4.948,141,0.011,142,4.011,143,1.778,144,2.484,145,2.236,146,2.661,147,2.484,148,2.236,149,2.322,150,2.236,151,2.484,152,2.484,153,2.484,154,2.484,155,2.484,156,1.901,157,2.05,158,2.365,159,2.484,160,2.484,161,2.484,162,2.484,163,2.484,164,2.484,165,1.005,166,0.966,167,0.093,168,0.005,169,0.502,170,0.588,171,2.484,172,2.484,173,2.484,174,2.484,175,2.484,176,2.484,177,2.05,178,1.295,179,4.457,180,3.925,181,2.484,182,5.561,183,2.835,184,2.236,185,2.484,186,2.484,187,2.484,188,2.365,189,0.767,190,2.484,191,1.778,192,2.484,193,2.484,194,5.561,195,3.678,196,0.783,197,2.484,198,1.853,199,3.77,200,5.299,201,2.484,202,1.901,203,2.236,204,2.484,205,5.561,206,3.719,207,3.719,208,2.661,209,2.661,210,3.068,211,2.484,212,2.484,213,2.484,214,2.236,215,2.484,216,1.672,217,2.05,218,1.901,219,2.236,220,2.484,221,4.948,222,3.567,223,1.338,224,2.236,225,1.565,226,1.637,227,2.236,228,2.484,229,2.484,230,2.484,231,2.05,232,1.63,233,2.846,234,3.719,235,2.484,236,4.457,237,2.484,238,2.484,239,2.484,240,1.356,241,2.484,242,2.484,243,2.484,244,2.484,245,2.131,246,2.236,247,2.484,248,2.484,249,3.719,250,2.484,251,1.58,252,2.484,253,2.05,254,2.484,255,2.484,256,2.05,257,2.484,258,2.484,259,3.719,260,2.484,261,4.457,262,2.484,263,4.457,264,2.484,265,3.411,266,2.484,267,2.236,268,2.484,269,4.948,270,3.719,271,4.011,272,1.901,273,2.484,274,1.238,275,2.05,276,3.792,277,3.719,278,2.484,279,2.484,280,2.484,281,0.008,282,0.005,814,1.901]],["title/interfaces/RouteStorageObject.html",[134,1.494,2172,2.812]],["body/interfaces/RouteStorageObject.html",[3,0.1,4,0.088,5,0.088,7,0.152,8,1.064,12,1.882,45,0.222,46,0.015,48,0.203,52,0.966,56,0.636,62,1.168,72,0.858,84,2.367,86,2.25,97,0.298,101,1.244,111,0.152,134,2.041,137,2.096,141,0.006,146,2.81,156,2.046,158,1.7,167,0.1,168,0.005,170,1.293,178,1.24,188,2.497,195,2.206,198,1.956,202,2.046,217,2.206,223,2.124,225,2.713,231,4.232,233,3.006,251,1.7,253,2.206,281,0.008,282,0.008,312,1.081,319,2.311,371,1.393,478,2.406,487,2.406,521,0.766,565,1.611,578,4.188,579,0.609,580,2.046,594,3.91,608,1.913,609,1.275,610,2.206,624,1.913,628,2.406,631,3.84,632,5.14,644,0.826,647,2.946,653,0.737,670,2.206,714,1.332,814,2.046,946,4.188,960,4.232,969,4.232,1048,2.406,1050,2.046,1074,2.406,1079,4.616,1104,4.559,1401,3.84,1403,4.508,1463,3.24,1470,3.562,1711,3.24,1882,2.406,2053,2.406,2080,3.84,2092,2.406,2093,2.406,2094,2.406,2095,2.674,2096,2.674,2097,2.674,2101,2.674,2103,5.129,2104,2.674,2109,2.674,2110,2.674,2111,2.674,2112,2.674,2113,2.674,2114,2.674,2115,5.712,2117,2.674,2118,2.674,2119,2.674,2120,5.464,2122,2.674,2123,2.674,2124,2.674,2125,2.406,2126,2.674,2127,2.406,2128,2.674,2129,3.927,2130,2.674,2131,3.927,2132,5.129,2133,4.917,2134,2.674,2135,2.674,2136,2.674,2137,5.712,2138,2.674,2139,2.674,2140,3.927,2141,2.406,2142,2.674,2143,2.674,2145,6.057,2146,2.674,2148,2.674,2150,2.674,2151,3.927,2153,2.674,2154,2.674,2155,2.674,2156,4.654,2157,2.674,2158,2.674,2159,2.674,2160,2.674,2161,5.904,2164,2.674,2165,2.674,2166,3.927,2167,3.927,2168,3.927,2169,3.927,2170,3.927,2171,3.534,2172,4.232,2173,5.464,2174,2.674,2175,4.654,2176,3.927,2177,4.654,2178,2.674,2179,2.674,2180,2.674,2181,2.674,2182,4.654,2183,2.674,2184,4.654,2185,2.674,2186,2.674,2187,2.674,2188,2.674,2189,2.674,2190,2.406,2191,2.674,2192,2.674,2193,2.674,2194,2.674,2195,2.674,2196,2.674,2197,2.674,2198,2.674,2199,2.674,2200,3.927,2201,2.674,2202,2.406,2203,2.674,2204,3.927,2205,2.674,2206,3.927,2207,2.674,2208,2.674,2209,2.674,2210,2.674,2211,2.674,2212,2.674,2213,2.674,2214,2.406,2215,2.674,2216,2.674,2217,3.927,2218,2.674,2219,3.927,2220,5.129,2221,2.674,2222,3.927,2223,2.674,2224,2.674,2225,2.674,2226,2.674,2227,2.674,2228,2.674,2229,2.674]],["title/components/SettingsComponent.html",[97,0.38,535,1.053]],["body/components/SettingsComponent.html",[3,0.197,4,0.134,5,0.134,7,0.233,13,0.791,39,0.796,43,0.409,46,0.015,47,0.39,56,0.56,72,1.315,97,0.65,101,1.328,111,0.233,112,0.318,141,0.009,167,0.153,168,0.008,189,2.195,196,1.11,226,1.266,281,0.011,282,0.009,283,1.315,284,1.826,285,1.533,286,1.797,287,1.419,288,1.533,290,1.266,291,2.482,292,2.05,294,1.897,301,2.699,382,4.746,492,1.366,493,1.972,494,1.972,495,1.266,496,2.302,497,1.533,498,1.533,499,1.266,500,1.533,501,1.266,502,1.533,503,1.219,504,1.533,505,1.266,506,1.533,507,1.266,508,1.972,509,1.315,510,2.18,511,1.533,512,1.315,513,1.533,514,1.266,515,1.533,516,1.266,517,1.533,518,1.315,519,1.266,520,1.533,521,1.174,522,1.533,523,1.266,524,1.533,525,1.266,526,1.533,527,1.266,528,1.533,529,1.266,530,1.533,531,1.219,532,1.533,533,1.219,534,1.533,535,1.902,536,1.533,537,1.219,538,1.533,539,1.315,540,1.366,541,1.366,542,1.266,543,1.533,544,1.266,545,1.475,546,1.533,2473,4.1,2474,4.723,2475,6.076,2476,4.723,2477,4.723,2478,6.076,2479,6.076]],["title/components/SignupComponent.html",[97,0.38,537,1.014]],["body/components/SignupComponent.html",[3,0.133,4,0.077,5,0.077,7,0.133,8,0.664,12,1.742,13,0.535,39,0.321,42,1.486,43,0.471,45,0.295,46,0.015,47,0.379,48,0.293,49,0.276,52,1.561,56,0.589,72,1.144,97,0.48,101,0.981,111,0.293,112,0.276,132,0.813,137,1.491,138,1.501,139,2.74,141,0.005,167,0.133,168,0.007,169,0.475,170,0.844,178,1.054,188,2.267,189,2.062,196,0.75,209,1.681,223,2.096,225,2.381,226,1.486,272,3.682,281,0.009,282,0.005,283,0.754,284,1.234,285,0.878,286,1.03,287,0.813,288,0.878,290,0.726,291,2.37,292,1.386,294,1.282,301,2.109,304,1.581,312,1.442,313,2.115,317,3.877,320,3.059,332,1.945,337,1.629,348,1.224,384,1.581,387,1.681,388,1.581,392,2.4,397,1.681,398,1.798,412,1.938,427,2.942,429,2.74,433,1.681,447,3.208,456,1.798,465,2.942,481,2.349,492,0.783,493,1.333,494,1.333,495,1.331,496,1.798,497,0.878,498,0.878,499,0.726,500,0.878,501,0.726,502,0.878,503,0.699,504,0.878,505,0.726,506,0.878,507,0.726,508,1.333,509,0.754,510,1.611,511,0.878,512,0.754,513,0.878,514,0.726,515,0.878,516,0.726,517,0.878,518,0.754,519,0.726,520,0.878,521,0.673,522,0.878,523,0.726,524,0.878,525,0.726,526,0.878,527,0.726,528,0.878,529,0.726,530,0.878,531,0.699,532,0.878,533,0.699,534,0.878,535,0.726,536,0.878,537,1.431,538,0.878,539,0.754,540,0.783,541,0.783,542,1.331,543,0.878,544,0.726,545,0.845,546,0.878,553,1.798,579,0.535,602,1.681,636,2.552,637,3.958,644,1.748,653,1.188,668,1.798,683,1.563,702,5.022,704,3.795,709,2.114,711,3.706,714,1.17,774,2.552,812,1.798,1068,2.942,1069,1.581,1096,2.729,1113,1.938,1265,1.416,1333,1.938,1437,2.114,1438,3.565,1439,3.565,1440,2.349,1441,3.565,1442,2.349,1443,4.309,1444,4.309,1446,2.349,1449,2.349,1451,2.349,1452,2.349,1457,3.298,1458,2.349,1459,2.349,1460,2.349,1461,2.349,1462,3.565,1463,1.938,1464,2.114,1465,4.811,1466,2.349,1467,2.349,1468,4.811,1469,2.349,1470,3.298,1471,2.349,1472,4.309,1473,4.309,1474,2.114,1475,2.349,1476,2.349,1477,2.349,1478,2.349,1479,3.565,1480,3.565,1481,3.565,1482,4.309,1483,4.309,1484,2.349,1485,3.208,1486,3.565,1487,2.349,1488,2.114,1489,2.349,1490,2.349,1491,4.811,1492,4.309,1493,2.349,1494,2.349,1495,2.349,1496,2.349,1497,2.349,1498,4.811,1499,2.349,1500,2.349,1501,2.349,1502,3.877,1503,2.349,1504,2.349,1505,2.349,1506,2.349,1507,2.349,1508,2.349,1509,2.349,1510,2.349,1511,3.208,1512,2.349,1513,2.349,1514,2.349,1515,2.349,1516,2.349,1517,2.349,1671,2.114,1720,5.445,1724,3.565,1725,2.114,1729,2.349,1730,2.349,1731,2.349,1732,2.349,1733,2.349,1734,2.349,1735,2.349,1736,2.349,1737,2.349,1738,2.349,1739,1.938,1740,2.349,1741,2.349,1742,2.349,1743,2.349,2480,2.706,2481,2.706,2482,2.706,2483,2.706,2484,2.706,2485,2.706,2486,2.706,2487,2.706,2488,2.706,2489,2.706,2490,2.706,2491,2.706,2492,4.107,2493,5.542,2494,4.107,2495,4.107,2496,4.107,2497,4.107,2498,2.706]],["title/components/TagsDialog.html",[97,0.38,539,1.093]],["body/components/TagsDialog.html",[3,0.132,4,0.076,5,0.076,7,0.132,8,0.658,39,0.317,43,0.274,45,0.192,46,0.014,47,0.32,48,0.183,49,0.18,72,0.744,84,2.881,97,0.477,101,0.974,111,0.2,112,0.18,141,0.005,146,2.527,167,0.087,168,0.005,180,3.445,183,3.948,189,2.036,191,3.421,196,0.743,199,3.445,226,0.717,233,3.658,274,3.185,281,0.007,282,0.005,283,0.744,284,1.222,285,0.867,287,0.803,288,0.867,290,0.717,291,2.36,294,1.27,316,3.178,332,1.428,337,3.117,350,1.928,420,5.334,449,4.147,492,0.773,493,1.32,494,1.32,495,0.717,496,1.787,497,0.867,498,0.867,499,0.717,500,0.867,501,0.717,502,0.867,503,0.69,504,0.867,505,0.717,506,0.867,507,0.717,508,1.32,509,0.744,510,1.923,511,0.867,512,0.744,513,0.867,514,0.717,515,0.867,516,0.717,517,0.867,518,0.744,519,0.717,520,0.867,521,0.664,522,0.867,523,0.717,524,0.867,525,0.717,526,0.867,527,0.717,528,0.867,529,0.717,530,0.867,531,0.69,532,0.867,533,0.69,534,0.867,535,0.717,536,0.867,537,0.69,538,0.867,539,1.533,540,1.714,541,0.773,542,0.717,543,0.867,544,0.717,545,0.834,546,0.867,677,4.876,683,1.548,878,3.55,937,1.156,1030,3.532,1173,1.475,1204,4.147,1214,4.876,1223,3.27,1224,1.475,1254,3.039,1277,2.914,1278,3.178,1283,1.329,1284,1.561,1285,1.561,1287,4.643,1296,3.532,1354,2.088,1356,3.532,1358,1.776,1401,2.914,1470,3.658,1559,3.532,1683,3.178,1684,3.944,1711,4.79,1717,3.532,2058,6.253,2133,3.178,2141,4.301,2367,3.532,2499,4.276,2500,2.673,2501,2.673,2502,5.506,2503,4.069,2504,6.242,2505,4.069,2506,4.069,2507,5.506,2508,4.069,2509,2.673,2510,4.069,2511,4.069,2512,4.069,2513,4.069,2514,4.069,2515,6.688,2516,5.506,2517,6.989,2518,6.242,2519,4.069,2520,4.069,2521,6.989,2522,4.069,2523,4.069,2524,4.069,2525,4.069,2526,4.069,2527,4.069,2528,4.069,2529,5.506,2530,5.506,2531,4.069,2532,4.069,2533,6.242,2534,5.506,2535,4.069,2536,5.506,2537,6.242,2538,4.069,2539,4.069,2540,5.506,2541,4.069,2542,4.069,2543,7.493,2544,4.069,2545,4.069,2546,4.069,2547,4.069,2548,7.677,2549,7.594,2550,7.204,2551,4.069,2552,4.069,2553,5.506,2554,4.069,2555,4.069,2556,2.673,2557,4.069,2558,6.242,2559,4.069,2560,4.069,2561,4.069,2562,4.069,2563,4.069,2564,4.069,2565,4.069,2566,5.506,2567,4.069,2568,4.069,2569,4.069,2570,5.506,2571,4.069,2572,4.069,2573,4.069,2574,2.673,2575,2.673]],["title/interceptors/TokenInterceptor.html",[763,2.439,2576,2.812]],["body/interceptors/TokenInterceptor.html",[0,1.36,3,0.176,4,0.154,5,0.154,7,0.267,13,0.861,43,0.364,45,0.389,46,0.015,47,0.314,48,0.297,49,0.364,56,0.641,111,0.352,112,0.364,113,1.711,117,1.247,125,3.652,127,2.564,141,0.01,167,0.176,168,0.01,177,4.739,178,1.07,196,1.209,232,2.518,281,0.012,282,0.01,585,3.361,596,4.697,653,1.295,765,3.866,767,3.361,768,4.396,772,4.396,773,4.627,774,4.441,775,4.948,777,3.595,780,3.595,781,4.396,791,3.595,792,3.595,796,3.875,1365,4.697,1366,5.744,1367,4.697,1368,4.697,1369,4.697,1370,4.226,2576,4.739,2577,5.744,2578,5.411,2579,5.411,2580,5.411,2581,5.411]],["title/classes/User.html",[12,1.378,168,0.007]],["body/classes/User.html",[3,0.168,4,0.147,5,0.147,7,0.255,8,1.042,12,2.263,39,0.615,43,0.517,45,0.373,46,0.015,47,0.438,48,0.357,49,0.349,52,1.748,141,0.009,167,0.168,168,0.009,209,3.221,216,4.495,274,2.242,275,3.714,281,0.012,282,0.009,332,1.82,337,2.057,350,3.324,663,4.501,683,3.099,835,2.713,837,3.124,842,4.688,845,4.688,855,3.67,1283,2.579,1926,4.05,2582,4.501,2583,5.185,2584,5.185,2585,7.338,2586,5.185,2587,5.185,2588,5.185,2589,5.185,2590,5.185,2591,5.185,2592,5.185,2593,5.185]],["title/coverage.html",[2594,4.665]],["body/coverage.html",[0,1.386,1,1.073,5,0.094,6,3.721,12,1.161,42,0.887,46,0.015,48,0.214,62,0.854,97,0.769,101,0.654,128,1.932,130,1.116,134,2.325,135,2.197,141,0.006,168,0.013,196,0.604,281,0.009,282,0.006,283,0.921,289,2.871,305,1.567,371,3.766,495,1.277,499,0.887,501,0.887,503,0.854,505,0.887,507,0.887,509,0.921,512,0.921,514,0.887,516,0.887,518,0.921,519,0.887,521,0.822,523,0.887,525,0.887,527,0.887,529,0.887,531,0.854,533,0.854,535,0.887,537,0.854,539,0.921,542,0.887,544,0.887,559,2.197,560,2.197,561,2.054,580,2.197,583,2.583,611,2.369,614,2.197,615,2.197,617,1.932,618,1.932,619,1.932,620,1.932,622,2.369,624,2.054,626,2.197,641,3.37,643,2.871,680,3.721,723,2.583,763,4.023,764,3.412,765,4.157,766,3.721,767,4.023,770,2.369,813,2.783,815,3.721,817,2.369,820,3.941,821,3.721,836,3.721,894,2.369,899,2.871,993,3.721,994,3.723,1009,2.583,1010,2.871,1083,6.387,1161,3.721,1313,3.263,1315,2.871,1320,3.412,1347,2.871,1352,2.871,1353,2.871,1354,3.721,1363,2.369,1364,2.871,1417,2.871,1420,2.583,1437,3.721,1518,2.369,1519,2.871,1529,2.871,1663,2.369,1664,3.721,1665,3.721,1678,2.583,1685,2.871,1686,2.871,1687,2.871,1694,2.871,1744,2.583,1745,2.871,1805,2.871,1815,2.871,1819,2.871,1886,2.871,1890,3.721,1933,2.369,1936,4,1937,2.871,1938,2.871,1955,2.871,1956,2.871,1966,2.871,2064,2.583,2092,3.721,2093,3.721,2172,2.369,2230,2.871,2231,2.871,2245,2.583,2246,2.871,2304,2.871,2305,2.871,2306,2.871,2382,2.871,2389,2.871,2410,3.721,2411,3.721,2427,2.583,2473,2.871,2499,2.871,2576,2.369,2577,2.871,2582,2.871,2594,2.871,2595,3.307,2596,3.307,2597,3.307,2598,4.764,2599,4.764,2600,7.596,2601,7.596,2602,7.116,2603,6.476,2604,3.307,2605,3.307,2606,3.307,2607,3.307,2608,6.11,2609,2.871,2610,4.764,2611,6.11,2612,4.764,2613,3.307,2614,4.764,2615,3.307,2616,4.764,2617,4.764,2618,3.307,2619,3.307,2620,2.871,2621,3.307,2622,3.307,2623,3.307,2624,3.307,2625,3.307,2626,2.871,2627,2.871,2628,4.135,2629,2.871,2630,4.135,2631,2.871,2632,2.871,2633,3.307]],["title/dependencies.html",[550,3.14,2634,3.27]],["body/dependencies.html",[46,0.015,112,0.364,117,1.525,133,4.739,141,0.01,158,2.986,281,0.012,282,0.01,320,2.986,460,4.697,550,3.595,570,4.739,571,4.739,579,1.069,592,4.226,593,4.226,692,4.697,719,5.169,720,4.697,937,2.34,1069,3.161,1227,4.226,1383,4.226,1391,4.697,1392,4.697,1396,4.697,1398,4.697,1739,3.875,2127,4.226,2635,8.006,2636,5.411,2637,6.617,2638,5.411,2639,5.411,2640,5.411,2641,5.411,2642,5.411,2643,5.411,2644,5.411,2645,5.411,2646,4.697,2647,5.411,2648,5.411,2649,5.411,2650,5.411,2651,5.411,2652,5.411,2653,5.411,2654,5.411,2655,5.411,2656,5.411,2657,5.411,2658,5.411,2659,5.411,2660,5.411,2661,5.411,2662,5.411,2663,5.411,2664,5.411,2665,5.411,2666,5.411]],["title/index.html",[7,0.161,1281,2.555,2667,3.27]],["body/index.html",[4,0.155,46,0.012,47,0.318,97,0.695,141,0.01,145,4.269,149,3.38,158,3.963,189,1.465,196,0.998,256,3.915,281,0.012,282,0.01,565,2.86,711,3.017,942,3.915,959,4.269,1292,6.233,1679,5.609,1684,3.915,1718,4.269,1739,5.649,2171,4.269,2202,4.269,2356,4.744,2646,6.233,2668,6.658,2669,5.466,2670,5.466,2671,5.466,2672,6.658,2673,7.661,2674,5.466,2675,5.466,2676,5.466,2677,5.466,2678,5.466,2679,5.466,2680,5.466,2681,7.661,2682,5.466,2683,5.466,2684,5.466,2685,5.466,2686,5.466,2687,4.744,2688,6.658,2689,6.658,2690,7.474,2691,5.466,2692,6.658,2693,6.658,2694,5.466,2695,5.466,2696,5.466,2697,5.466,2698,7.181,2699,5.466]],["title/modules.html",[549,3.14]],["body/modules.html",[46,0.013,141,0.011,281,0.013,282,0.011,548,4.143,549,3.643,562,4.143,571,5.156,604,4.143,1376,4.143,2700,7.2,2701,7.2,2702,7.803,2703,7.2,2704,7.2]],["title/overview.html",[2705,4.665]],["body/overview.html",[2,2.561,46,0.015,141,0.008,251,2.419,281,0.01,282,0.008,283,2.09,284,1.317,492,1.268,499,1.737,501,1.737,503,1.673,505,1.737,507,1.737,509,1.804,512,1.804,514,1.737,516,1.737,518,1.804,519,1.737,521,1.611,523,1.737,525,1.737,527,1.737,529,1.737,531,1.673,533,1.673,535,1.737,537,1.673,539,1.804,541,1.268,542,1.737,544,1.737,547,2.561,548,5.566,549,2.561,550,2.912,551,3.424,552,3.424,553,2.912,554,2.912,555,3.805,556,3.805,557,3.805,558,3.805,559,4.305,560,4.305,561,4.025,562,5.211,563,4.521,564,3.139,565,2.293,604,4.987,608,2.723,642,1.983,814,2.912,835,2.293,1314,3.139,1370,3.424,1372,3.805,1373,3.805,1374,3.805,1375,3.805,1376,4.987,1728,3.805,1991,3.424,2705,3.805,2706,5.788,2707,4.383,2708,4.383,2709,4.383]],["title/routes.html",[608,3.339]],["body/routes.html",[46,0.013,141,0.012,281,0.013,282,0.012,608,4.013]],["title/miscellaneous/typealiases.html",[2710,2.342,2711,4.726]],["body/miscellaneous/typealiases.html",[7,0.305,46,0.013,48,0.35,141,0.011,281,0.013,282,0.011,332,2.519,337,2.847,855,3.962,1114,6.229,1320,4.44,1420,4.843,2620,5.381,2710,4.44,2712,6.199,2713,6.199,2714,6.199,2715,6.199]],["title/miscellaneous/variables.html",[2710,2.342,2716,4.102]],["body/miscellaneous/variables.html",[7,0.229,46,0.015,48,0.351,50,3.093,52,0.994,128,3.517,141,0.008,196,0.85,223,2.409,225,1.701,281,0.011,282,0.008,312,2.737,313,2.53,350,2.206,583,4.702,602,4.648,603,5.359,680,3.636,723,4.702,724,4.041,746,5.225,764,5.052,765,3.898,766,3.636,767,3.74,783,5.844,812,4.971,878,2.206,1104,4.538,1363,3.334,1518,3.334,1663,3.334,1664,3.636,1665,4.702,1678,4.702,1679,3.636,1680,4.041,1681,5.225,1682,4.041,1683,3.636,1684,3.334,2410,3.636,2411,4.702,2427,4.702,2428,4.041,2576,3.334,2609,4.041,2626,4.041,2627,4.041,2628,6.123,2629,4.041,2630,4.041,2631,5.225,2632,5.225,2687,5.225,2710,3.334,2716,4.041,2717,4.655,2718,6.02,2719,4.655,2720,4.655,2721,4.655,2722,4.655,2723,4.655,2724,4.655,2725,4.655,2726,4.655,2727,4.655,2728,4.655,2729,4.655,2730,6.02,2731,6.02,2732,6.02,2733,6.02,2734,6.02,2735,6.02,2736,4.655,2737,4.655,2738,4.655]]],"invertedIndex":[["",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["0.0",{"_index":1241,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["0.04",{"_index":2062,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["0.1.7",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1242,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["0.2.6",{"_index":2651,"title":{},"body":{"dependencies.html":{}}}],["0.5.23",{"_index":2654,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":2648,"title":{},"body":{"dependencies.html":{}}}],["0.6s",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["0.9.9",{"_index":2644,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2617,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2618,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2613,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2619,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2625,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2615,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":2624,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["0/58",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2611,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["003366",{"_index":2363,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["003d79",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["08",{"_index":947,"title":{},"body":{"components/CerfListComponent.html":{}}}],["0px",{"_index":1233,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["1",{"_index":198,"title":{"interfaces/CanComponentDeactivate-1.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["1.0.5",{"_index":2656,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["1.compute.amazonaws.com:3000",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/3",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["100",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["100px",{"_index":2364,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["100vh",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["11",{"_index":2709,"title":{},"body":{"overview.html":{}}}],["120px",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["144c83",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["15",{"_index":1728,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{}}}],["16px",{"_index":1305,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/MyCerfsComponent.html":{}}}],["16t02:22:57.000z",{"_index":948,"title":{},"body":{"components/CerfListComponent.html":{}}}],["185287",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["18px",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["1a237e",{"_index":1736,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["2",{"_index":251,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"overview.html":{}}}],["2.1.0",{"_index":2643,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2652,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2650,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2367,"title":{},"body":{"components/MyCerfsComponent.html":{},"components/TagsDialog.html":{}}}],["200",{"_index":1673,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["2000",{"_index":1279,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["2018",{"_index":946,"title":{},"body":{"components/CerfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["21",{"_index":2559,"title":{},"body":{"components/TagsDialog.html":{}}}],["215",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":2707,"title":{},"body":{"overview.html":{}}}],["238",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["240px",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["24px",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["250ms",{"_index":2377,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["3",{"_index":1991,"title":{},"body":{"components/MrfListComponent.html":{},"injectables/RequestCache.html":{},"overview.html":{}}}],["3/12",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2560,"title":{},"body":{"components/TagsDialog.html":{}}}],["300",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["30000",{"_index":2428,"title":{},"body":{"injectables/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["31",{"_index":2564,"title":{},"body":{"components/TagsDialog.html":{}}}],["32",{"_index":2373,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["32px",{"_index":2241,"title":{},"body":{"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["33",{"_index":2606,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":2375,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["3rd",{"_index":1378,"title":{},"body":{"modules/CoreModule.html":{}}}],["3s",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":2706,"title":{},"body":{"overview.html":{}}}],["400",{"_index":2443,"title":{},"body":{"injectables/RequestCache.html":{}}}],["48px",{"_index":2240,"title":{},"body":{"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["5",{"_index":236,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["50px",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["54",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5b6d1fbfdf9a7b34033f945c",{"_index":1885,"title":{},"body":{"injectables/MemberService.html":{}}}],["5b6d2054f176363426fe5b93",{"_index":1884,"title":{},"body":{"injectables/MemberService.html":{}}}],["5b74e046245fad079ec5ced4",{"_index":945,"title":{},"body":{"components/CerfListComponent.html":{}}}],["5e5f60",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["6",{"_index":2708,"title":{},"body":{"overview.html":{}}}],["6.0.8",{"_index":2671,"title":{},"body":{"index.html":{}}}],["6.2.3",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2660,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":2657,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":2659,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["636566",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["654c1d4a769a",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["6b7378",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["6c6d6e",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":2184,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["7.0.0",{"_index":2639,"title":{},"body":{"dependencies.html":{}}}],["7.2.12",{"_index":2635,"title":{},"body":{"dependencies.html":{}}}],["7.3.6",{"_index":2637,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2497,"title":{},"body":{"components/SignupComponent.html":{}}}],["70px",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["75",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["75.us",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75px",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1370,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"overview.html":{}}}],["80px",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["8px",{"_index":2059,"title":{},"body":{"components/MrfListComponent.html":{}}}],["9ea374",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/MrfSecretaryComponent.html":{}}}],["_administration.component.scss",{"_index":1229,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["_cerflist.component.scss",{"_index":939,"title":{},"body":{"components/CerfListComponent.html":{}}}],["_clubs.component.scss",{"_index":1332,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["_divisions.component.scss",{"_index":1433,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["_faqs.component.scss",{"_index":1535,"title":{},"body":{"components/FAQsComponent.html":{}}}],["_id",{"_index":837,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"classes/User.html":{}}}],["_location",{"_index":2313,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["_login.component.scss",{"_index":1707,"title":{},"body":{"components/LoginComponent.html":{}}}],["_mrf",{"_index":1946,"title":{},"body":{"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfSecretaryComponent.html":{}}}],["_mrflist.component.scss",{"_index":2012,"title":{},"body":{"components/MrfListComponent.html":{}}}],["_my",{"_index":2331,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["_settings.component.scss",{"_index":2479,"title":{},"body":{"components/SettingsComponent.html":{}}}],["_signup.component.scss",{"_index":1481,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["_traditionally_",{"_index":2209,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["a.fellowship",{"_index":1148,"title":{},"body":{"injectables/CerfService.html":{}}}],["a.leadership",{"_index":1146,"title":{},"body":{"injectables/CerfService.html":{}}}],["a.service",{"_index":1144,"title":{},"body":{"injectables/CerfService.html":{}}}],["a:hover",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["abc123",{"_index":1658,"title":{},"body":{"components/FAQsComponent.html":{}}}],["aboard",{"_index":1216,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["absolute",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/MyCerfsComponent.html":{}}}],["abstract",{"_index":2587,"title":{},"body":{"classes/User.html":{}}}],["abstractcontrol",{"_index":1068,"title":{},"body":{"injectables/CerfService.html":{},"directives/EqualValidator.html":{},"injectables/MrfService.html":{},"components/SignupComponent.html":{}}}],["ac",{"_index":1565,"title":{},"body":{"components/FAQsComponent.html":{}}}],["accent",{"_index":2068,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["access",{"_index":216,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ClubAdministrationComponent.html":{},"classes/Member.html":{},"interfaces/Response.html":{},"classes/User.html":{}}}],["access_token",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"directives/EqualValidator.html":{}}}],["according",{"_index":212,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["accounts",{"_index":2435,"title":{},"body":{"injectables/RequestCache.html":{}}}],["action",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"interfaces/Response.html":{}}}],["actions",{"_index":1189,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["activatedroute",{"_index":935,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["activatedroutesnapshot",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/ExitGuard.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"interfaces/RouteStorageObject.html":{}}}],["active",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["actual_component",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["ad",{"_index":2522,"title":{},"body":{"components/TagsDialog.html":{}}}],["adapt",{"_index":1081,"title":{},"body":{"injectables/CerfService.html":{}}}],["adapt(item",{"_index":1763,"title":{},"body":{"classes/Maker.html":{}}}],["adapter",{"_index":1755,"title":{},"body":{"classes/Maker.html":{}}}],["add",{"_index":940,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["addattendee",{"_index":1012,"title":{},"body":{"injectables/CerfService.html":{}}}],["addattendee(name",{"_index":1029,"title":{},"body":{"injectables/CerfService.html":{}}}],["added",{"_index":2357,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["addmember",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["addmember(first",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["address",{"_index":1203,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["addtomrf",{"_index":1013,"title":{},"body":{"injectables/CerfService.html":{}}}],["adipiscing",{"_index":1542,"title":{},"body":{"components/FAQsComponent.html":{}}}],["admin",{"_index":1931,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["administration",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["administration'},{'name",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["administration.component.css",{"_index":1228,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["administration.component.css,./_administration.component.scss",{"_index":1162,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["administration.component.html",{"_index":1163,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["administrative",{"_index":2518,"title":{},"body":{"components/TagsDialog.html":{}}}],["administrator",{"_index":2030,"title":{},"body":{"components/MrfListComponent.html":{}}}],["advisorattended",{"_index":1922,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["advisors",{"_index":1199,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["again",{"_index":220,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["alert",{"_index":1741,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["aliases",{"_index":2712,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["aliquam",{"_index":1547,"title":{},"body":{"components/FAQsComponent.html":{}}}],["allowed",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["already",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["although",{"_index":2539,"title":{},"body":{"components/TagsDialog.html":{}}}],["alumni",{"_index":1212,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["amet",{"_index":1540,"title":{},"body":{"components/FAQsComponent.html":{}}}],["amount",{"_index":2553,"title":{},"body":{"components/TagsDialog.html":{}}}],["amountraised",{"_index":882,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["amountspent",{"_index":883,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["angular",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Maker.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1227,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2636,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{}}}],["angular/common",{"_index":1383,"title":{},"body":{"modules/CoreModule.html":{},"components/MyCerfsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/compiler",{"_index":2638,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"modules/MaterialsModule.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1391,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1069,"title":{},"body":{"injectables/CerfService.html":{},"modules/CoreModule.html":{},"directives/EqualValidator.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2641,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":937,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"modules/MaterialsModule.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"components/TagsDialog.html":{},"dependencies.html":{}}}],["angular/material/theming",{"_index":2063,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["angular/platform",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"components/InfoDialog.html":{},"modules/MaterialsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"guards/ExitGuard.html":{},"components/LoginComponent.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1225,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["animate('225ms",{"_index":1238,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["animation",{"_index":2082,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["animations",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["another",{"_index":1711,"title":{},"body":{"components/LoginComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["ante",{"_index":1648,"title":{},"body":{"components/FAQsComponent.html":{}}}],["anything",{"_index":2437,"title":{},"body":{"injectables/RequestCache.html":{}}}],["anyways",{"_index":2178,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["api",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Maker.html":{},"interfaces/Response.html":{}}}],["api.service",{"_index":1063,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MemberService.html":{},"injectables/MrfService.html":{}}}],["apis",{"_index":1761,"title":{},"body":{"classes/Maker.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DivisionsComponent.html":{},"injectables/MemberService.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["apiservice.getclubs().subscribe",{"_index":2022,"title":{},"body":{"components/MrfListComponent.html":{}}}],["apiservice.getdivisions().subscribe",{"_index":2021,"title":{},"body":{"components/MrfListComponent.html":{}}}],["app",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"index.html":{}}}],["app.component",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":792,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["app/modules",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["app/modules/app",{"_index":1386,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcomponent",{"_index":283,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1368,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["applies",{"_index":2568,"title":{},"body":{"components/TagsDialog.html":{}}}],["applyfilter",{"_index":906,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["applyfilter(filtervalue",{"_index":915,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["appmodule",{"_index":548,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":604,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":2000,"title":{},"body":{"components/MrfListComponent.html":{}}}],["arcu",{"_index":1604,"title":{},"body":{"components/FAQsComponent.html":{}}}],["arial",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["around",{"_index":2139,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["arr",{"_index":1154,"title":{},"body":{"injectables/CerfService.html":{}}}],["arr[index].member",{"_index":1156,"title":{},"body":{"injectables/CerfService.html":{}}}],["arr[index]['attendee_id",{"_index":1155,"title":{},"body":{"injectables/CerfService.html":{}}}],["array",{"_index":230,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["artifacts",{"_index":2682,"title":{},"body":{"index.html":{}}}],["asobservable",{"_index":1095,"title":{},"body":{"injectables/CerfService.html":{}}}],["assessment",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["assignment",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["assume",{"_index":2123,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["attach",{"_index":960,"title":{},"body":{"components/CerfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["attendance",{"_index":1077,"title":{},"body":{"injectables/CerfService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["attendee",{"_index":1114,"title":{},"body":{"injectables/CerfService.html":{},"miscellaneous/typealiases.html":{}}}],["attendee.member",{"_index":1150,"title":{},"body":{"injectables/CerfService.html":{}}}],["attendee_id",{"_index":881,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["attendees",{"_index":838,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["attending",{"_index":2526,"title":{},"body":{"components/TagsDialog.html":{}}}],["attribute",{"_index":1459,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["attribute('reverse",{"_index":1452,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["attribute('validateequal",{"_index":1454,"title":{},"body":{"directives/EqualValidator.html":{}}}],["auctor",{"_index":1623,"title":{},"body":{"components/FAQsComponent.html":{}}}],["augue",{"_index":1627,"title":{},"body":{"components/FAQsComponent.html":{}}}],["august",{"_index":2003,"title":{},"body":{"components/MrfListComponent.html":{}}}],["auth",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{}}}],["auth.getuser",{"_index":2013,"title":{},"body":{"components/MrfListComponent.html":{}}}],["auth0/angular",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authentication",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Response.html":{}}}],["authguard",{"_index":624,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["authlinks",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["author",{"_index":839,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/MyCerfsComponent.html":{}}}],["authorization",{"_index":2580,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authorize",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":42,"title":{"injectables/AuthService.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"guards/MembersResolver.html":{},"components/MrfListComponent.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authservice.getuser",{"_index":1071,"title":{},"body":{"injectables/CerfService.html":{}}}],["auto",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{}}}],["automatically",{"_index":959,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{},"index.html":{}}}],["available",{"_index":2704,"title":{},"body":{"modules.html":{}}}],["back",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["backend",{"_index":1681,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["backend.ts",{"_index":1665,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend.ts:8",{"_index":1666,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["background",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["backgroundcolor",{"_index":2069,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["bar",{"_index":2074,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["base",{"_index":2137,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["base[baseproperty",{"_index":2217,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["base[baseproperty].tostring",{"_index":2225,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["baseproperty",{"_index":2211,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["baseurl",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basically",{"_index":2158,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["bearer",{"_index":2581,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["before",{"_index":1406,"title":{},"body":{"modules/CoreModule.html":{}}}],["behaves",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CerfService.html":{},"injectables/MrfService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["behaviorsubject(undefined",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["berkeley",{"_index":1837,"title":{},"body":{"injectables/MemberService.html":{}}}],["beta.24",{"_index":2640,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2042,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["bezier(0.4",{"_index":1240,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["binded",{"_index":1106,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["birthday",{"_index":1208,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["bit",{"_index":2056,"title":{},"body":{"components/MrfListComponent.html":{}}}],["blacklistedroutes",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["blandit",{"_index":1632,"title":{},"body":{"components/FAQsComponent.html":{}}}],["blank",{"_index":2342,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["blankcerf",{"_index":1014,"title":{},"body":{"injectables/CerfService.html":{}}}],["block",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["board",{"_index":1214,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/TagsDialog.html":{}}}],["boardmeetings",{"_index":1891,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["body",{"_index":1671,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["bold",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{}}}],["boolean",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["bootstrap",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["both",{"_index":2133,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["bottom",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["break",{"_index":2222,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["browse",{"_index":2702,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"components/InfoDialog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialsModule.html":{}}}],["browseranimationsmodule",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialsModule.html":{}}}],["browsermodule",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["bugger",{"_index":2118,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["build",{"_index":2681,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1026,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["bust",{"_index":211,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["button",{"_index":1304,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/MyCerfsComponent.html":{}}}],["button:hover",{"_index":1735,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["c",{"_index":1451,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["c.root.get(this.validateequal",{"_index":1469,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["c.value",{"_index":1466,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["c7d6ee",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["cache",{"_index":210,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["cache.init(auth.getuserobservable",{"_index":793,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cache.put(request",{"_index":811,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cache.service",{"_index":790,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cache.service.ts",{"_index":2411,"title":{},"body":{"injectables/RequestCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.service.ts:12",{"_index":2424,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:13",{"_index":2426,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:14",{"_index":2425,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:16",{"_index":2421,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:22",{"_index":2419,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:39",{"_index":2423,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cache.service.ts:56",{"_index":2416,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cached",{"_index":2438,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cached.lastread",{"_index":2441,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cachedresponse",{"_index":797,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":764,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["caching",{"_index":1853,"title":{},"body":{"injectables/MemberService.html":{}}}],["call",{"_index":1050,"title":{},"body":{"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["calls",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["campus",{"_index":2507,"title":{},"body":{"components/TagsDialog.html":{}}}],["canactivate",{"_index":610,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["canactivate(route",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canattach",{"_index":2179,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["cancel",{"_index":1361,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["cancomponentdeactivate",{"_index":813,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/ExitGuard.html":{},"guards/MrfDeactivateGuard.html":{},"coverage.html":{}}}],["candeactivate",{"_index":633,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/ExitGuard.html":{},"guards/MrfDeactivateGuard.html":{}}}],["candeactivate(component",{"_index":818,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/ExitGuard.html":{},"guards/MrfDeactivateGuard.html":{}}}],["case",{"_index":969,"title":{},"body":{"components/CerfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["catch",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RequestCache.html":{}}}],["catcherror",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{}}}],["catcherror(err",{"_index":1003,"title":{},"body":{"guards/CerfNavResolver.html":{},"interceptors/ErrorInterceptor.html":{},"guards/MyCerfsResolver.html":{}}}],["categories",{"_index":840,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["caught",{"_index":1527,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cell",{"_index":2368,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["center",{"_index":1725,"title":{},"body":{"components/LoginComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["centering",{"_index":2048,"title":{},"body":{"components/MrfListComponent.html":{}}}],["century",{"_index":2071,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["cerf",{"_index":62,"title":{"classes/Cerf.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"modules/CoreModule.html":{},"classes/Maker.html":{},"classes/Mrf.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["cerf'},{'name",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["cerf(\"new\",\"new",{"_index":1072,"title":{},"body":{"injectables/CerfService.html":{}}}],["cerf(response.result",{"_index":1088,"title":{},"body":{"injectables/CerfService.html":{}}}],["cerf.model",{"_index":1751,"title":{},"body":{"classes/Maker.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["cerf/:id",{"_index":631,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["cerf/mrf/member/club",{"_index":2458,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cerfcomponent",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["cerfdata",{"_index":897,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["cerfform",{"_index":1011,"title":{},"body":{"injectables/CerfService.html":{}}}],["cerfid",{"_index":2471,"title":{},"body":{"injectables/RequestCache.html":{}}}],["cerflist",{"_index":900,"title":{},"body":{"components/CerfListComponent.html":{}}}],["cerflist'},{'name",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["cerflist.component.css",{"_index":938,"title":{},"body":{"components/CerfListComponent.html":{}}}],["cerflist.component.css,./_cerflist.component.scss",{"_index":901,"title":{},"body":{"components/CerfListComponent.html":{}}}],["cerflist.component.html",{"_index":902,"title":{},"body":{"components/CerfListComponent.html":{}}}],["cerflistcomponent",{"_index":501,"title":{"components/CerfListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["cerflistentry",{"_index":894,"title":{"classes/CerfListEntry.html":{}},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"coverage.html":{}}}],["cerfmaker",{"_index":1747,"title":{},"body":{"classes/Maker.html":{}}}],["cerfmaker(item",{"_index":1748,"title":{},"body":{"classes/Maker.html":{}}}],["cerfnavresolver",{"_index":615,"title":{"guards/CerfNavResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{},"coverage.html":{}}}],["cerfs",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MyCerfsComponent.html":{},"injectables/RequestCache.html":{}}}],["cerfs'},{'name",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["cerfs.component.css",{"_index":2330,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.css,./_my",{"_index":2307,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.html",{"_index":2309,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.scss",{"_index":2308,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts",{"_index":2306,"title":{},"body":{"components/MyCerfsComponent.html":{},"coverage.html":{}}}],["cerfs.component.ts:21",{"_index":2322,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:22",{"_index":2325,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:23",{"_index":2326,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:24",{"_index":2315,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:26",{"_index":2324,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:27",{"_index":2321,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:28",{"_index":2323,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:29",{"_index":2314,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:38",{"_index":2320,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:45",{"_index":2319,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:62",{"_index":2316,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:70",{"_index":2317,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs.component.ts:74",{"_index":2318,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["cerfs/my",{"_index":2305,"title":{},"body":{"components/MyCerfsComponent.html":{},"coverage.html":{}}}],["cerfservice",{"_index":1009,"title":{"injectables/CerfService.html":{}},"body":{"injectables/CerfService.html":{},"coverage.html":{}}}],["cerfurl",{"_index":824,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["certain",{"_index":2552,"title":{},"body":{"components/TagsDialog.html":{}}}],["chair",{"_index":841,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MyCerfsComponent.html":{}}}],["chair_id",{"_index":1117,"title":{},"body":{"injectables/CerfService.html":{}}}],["change",{"_index":942,"title":{},"body":{"components/CerfListComponent.html":{},"components/MrfListComponent.html":{},"injectables/RequestCache.html":{},"index.html":{}}}],["changecerfstatus",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["changecerfstatus(id",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["charity",{"_index":2546,"title":{},"body":{"components/TagsDialog.html":{}}}],["charset=utf",{"_index":1369,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["check",{"_index":2356,"title":{},"body":{"components/MyCerfsComponent.html":{},"index.html":{}}}],["checking",{"_index":1460,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["child(even",{"_index":2076,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["child(odd",{"_index":2078,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["chris",{"_index":1205,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["circle",{"_index":2548,"title":{},"body":{"components/TagsDialog.html":{}}}],["class",{"_index":168,"title":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"classes/Maker.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"classes/User.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":835,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"classes/Maker.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["cli",{"_index":2646,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clickrow",{"_index":907,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["clickrow(row",{"_index":918,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["clone",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["close",{"_index":1277,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["club",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["club's",{"_index":2556,"title":{},"body":{"components/TagsDialog.html":{}}}],["club'},{'name",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["club.html",{"_index":1345,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["club/administration",{"_index":1196,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["club\\'s",{"_index":2575,"title":{},"body":{"components/TagsDialog.html":{}}}],["club_id",{"_index":842,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{},"classes/User.html":{}}}],["clubadministrationcomponent",{"_index":503,"title":{"components/ClubAdministrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["clubid",{"_index":1286,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{}}}],["clubidpipe",{"_index":559,"title":{"pipes/ClubIDPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ClubIDPipe.html":{},"coverage.html":{},"overview.html":{}}}],["clubs",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/MrfListComponent.html":{},"interfaces/Response.html":{},"components/TagsDialog.html":{}}}],["clubs'},{'name",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["clubs.component.css",{"_index":1331,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["clubs.component.css,./_clubs.component.scss",{"_index":1321,"title":{},"body":{"components/ClubsComponent.html":{}}}],["clubs.component.html",{"_index":1322,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["clubs[i].name",{"_index":2039,"title":{},"body":{"components/MrfListComponent.html":{}}}],["clubscomponent",{"_index":505,"title":{"components/ClubsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["clubsresolver",{"_index":622,"title":{"guards/ClubsResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ClubsResolver.html":{},"coverage.html":{}}}],["clud_id",{"_index":1806,"title":{},"body":{"classes/Member.html":{}}}],["cluster_appmodule",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1372,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":1373,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1375,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1374,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cnhlogo",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["coachcare/datepicker",{"_index":1396,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["code",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"classes/Member.html":{},"components/MrfListComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["coercive",{"_index":2131,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["collapsed",{"_index":1237,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["color",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":2077,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["color($backgroundcolor",{"_index":2073,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["color($primary",{"_index":2380,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["color_lens",{"_index":2358,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["colorpickermodule",{"_index":1397,"title":{},"body":{"modules/CoreModule.html":{}}}],["column",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MyCerfsComponent.html":{}}}],["comments",{"_index":843,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["committee",{"_index":2528,"title":{},"body":{"components/TagsDialog.html":{}}}],["commodo",{"_index":1611,"title":{},"body":{"components/FAQsComponent.html":{}}}],["commonmodule",{"_index":1382,"title":{},"body":{"modules/CoreModule.html":{}}}],["communications",{"_index":1892,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["community",{"_index":2504,"title":{},"body":{"components/TagsDialog.html":{}}}],["compare",{"_index":2115,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare.hasownproperty(baseproperty",{"_index":2215,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare[baseproperty",{"_index":2220,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare[baseproperty].tostring",{"_index":2226,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compareobjects",{"_index":2098,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["compareobjects(base",{"_index":2114,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["comparison",{"_index":2132,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["comparrison",{"_index":2213,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["completed",{"_index":2511,"title":{},"body":{"components/TagsDialog.html":{}}}],["component",{"_index":97,"title":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"index.html":{}}}],["component.candeactivate",{"_index":819,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/ExitGuard.html":{}}}],["component.currenttab",{"_index":264,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["component.mrfform",{"_index":262,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["component.mrfform.getrawvalue",{"_index":260,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["component_template",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["components",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"overview.html":{}}}],["concatenator",{"_index":1122,"title":{},"body":{"injectables/CerfService.html":{}}}],["concatmap",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["concern",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["condimentum",{"_index":1592,"title":{},"body":{"components/FAQsComponent.html":{}}}],["config",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":226,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["confirmdialogcomponent",{"_index":507,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["confirmmessage",{"_index":1357,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmpassword",{"_index":1482,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["confirm{{confirmmessage",{"_index":1362,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["congue",{"_index":1618,"title":{},"body":{"components/FAQsComponent.html":{}}}],["consectetur",{"_index":1541,"title":{},"body":{"components/FAQsComponent.html":{}}}],["consequat",{"_index":1630,"title":{},"body":{"components/FAQsComponent.html":{}}}],["console.error(error",{"_index":1716,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"error",{"_index":1004,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["console.log(\"trying",{"_index":2201,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(data",{"_index":246,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{}}}],["console.log(e",{"_index":1471,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["console.log(err",{"_index":1524,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(error",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(event.body",{"_index":1523,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(i",{"_index":1262,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["console.log(id",{"_index":1084,"title":{},"body":{"injectables/CerfService.html":{}}}],["console.log(json.stringify(log",{"_index":808,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(overridehours",{"_index":1152,"title":{},"body":{"injectables/CerfService.html":{}}}],["console.log(res",{"_index":208,"title":{},"body":{"injectables/ApiService.html":{},"components/ClubAdministrationComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"interfaces/Response.html":{}}}],["console.log(res.result",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(response",{"_index":1857,"title":{},"body":{"injectables/MemberService.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{}}}],["console.log(result",{"_index":1258,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["console.log(row",{"_index":1253,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["console.log(state.url",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(this.cerf",{"_index":1160,"title":{},"body":{"injectables/CerfService.html":{}}}],["console.log(this.cerfform.value",{"_index":1093,"title":{},"body":{"injectables/CerfService.html":{}}}],["console.log(this.members",{"_index":1245,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["console.log(this.mrf",{"_index":2303,"title":{},"body":{"injectables/MrfService.html":{}}}],["console.log(this.storedroutes[route.routeconfig.path",{"_index":2197,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["const",{"_index":232,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"classes/User.html":{}}}],["constructor(@attribute('validateequal",{"_index":1461,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["constructor(_id",{"_index":854,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["constructor(apiservice",{"_index":995,"title":{},"body":{"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DivisionsComponent.html":{},"injectables/MemberService.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"guards/MyCerfsResolver.html":{}}}],["constructor(auth",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(dialogref",{"_index":1358,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["constructor(http",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["constructor(memberservice",{"_index":1172,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"guards/MembersResolver.html":{}}}],["constructor(name",{"_index":2583,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{}}}],["constructor(public",{"_index":1283,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"directives/NewFocusInput.html":{},"components/TagsDialog.html":{},"classes/User.html":{}}}],["constructor(renderer",{"_index":2384,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["constructor(route",{"_index":2312,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["constructor(router",{"_index":911,"title":{},"body":{"components/CerfListComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfSecretaryComponent.html":{}}}],["constructor(validateequal",{"_index":1447,"title":{},"body":{"directives/EqualValidator.html":{}}}],["consume",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["consuming",{"_index":1757,"title":{},"body":{"classes/Maker.html":{}}}],["contact",{"_index":844,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["container",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["contenttypeinterceptor",{"_index":1363,"title":{"interceptors/ContentTypeInterceptor.html":{}},"body":{"interceptors/ContentTypeInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":2631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuing",{"_index":2510,"title":{},"body":{"components/TagsDialog.html":{}}}],["contributes",{"_index":2516,"title":{},"body":{"components/TagsDialog.html":{}}}],["control",{"_index":1467,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["convallis",{"_index":1600,"title":{},"body":{"components/FAQsComponent.html":{}}}],["core",{"_index":2649,"title":{},"body":{"dependencies.html":{}}}],["core/authentication/auth.service",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"guards/MembersResolver.html":{},"components/MrfListComponent.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{}}}],["core/core.module",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["core/data/data.service",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{}}}],["core/guards/auth.guard",{"_index":625,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/cerf",{"_index":616,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/clubs",{"_index":623,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/members",{"_index":612,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/mrf",{"_index":621,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/reuse",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["core/http",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"guards/MembersResolver.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["core/models/member.model",{"_index":1847,"title":{},"body":{"injectables/MemberService.html":{}}}],["core/services",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"pipes/MemberIDPipe.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["core/utils/clubid.pipe",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["core/utils/divisionid.pipe",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["core/utils/memberid.pipe",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["core/utils/newfocusinput",{"_index":1384,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/utils/request",{"_index":789,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["coremodule",{"_index":562,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corrections",{"_index":1516,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["coverage",{"_index":2594,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cras",{"_index":1645,"title":{},"body":{"components/FAQsComponent.html":{}}}],["create",{"_index":1121,"title":{},"body":{"injectables/CerfService.html":{}}}],["created",{"_index":2350,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["createnewcerf",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["createnewcerf(data",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["createreactiveform",{"_index":1015,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["createreactiveform(model",{"_index":1034,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["credentials",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{}}}],["css",{"_index":2081,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["cubic",{"_index":1239,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["curabitur",{"_index":1562,"title":{},"body":{"components/FAQsComponent.html":{}}}],["curr",{"_index":2155,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["curr.routeconfig",{"_index":2208,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["curr.routeconfig.path",{"_index":2200,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["current",{"_index":233,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["current.format('m",{"_index":241,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["currentclub",{"_index":1970,"title":{},"body":{"components/MrfListComponent.html":{}}}],["currentdivision",{"_index":1971,"title":{},"body":{"components/MrfListComponent.html":{}}}],["currentmember",{"_index":2412,"title":{},"body":{"injectables/RequestCache.html":{}}}],["currentstate",{"_index":826,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["currenttab",{"_index":1972,"title":{},"body":{"components/MrfListComponent.html":{}}}],["cursor",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["d8dbbe",{"_index":2242,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["dapibus",{"_index":1635,"title":{},"body":{"components/FAQsComponent.html":{}}}],["darn",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"modules/CoreModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{}}}],["data).pipe(tap(res",{"_index":207,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["data._id",{"_index":206,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["data.month",{"_index":248,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["data.service.ts",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["data.year",{"_index":247,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["data[header",{"_index":971,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["database",{"_index":1517,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["dataindex",{"_index":1293,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DivisionsComponent.html":{}}}],["dataservice",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{}}}],["date",{"_index":877,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"components/MyCerfsComponent.html":{}}}],["date(data.time.start",{"_index":970,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["date(meeting.date).toisostring",{"_index":2300,"title":{},"body":{"injectables/MrfService.html":{}}}],["date.now",{"_index":2448,"title":{},"body":{"injectables/RequestCache.html":{}}}],["date:'shortdate",{"_index":2349,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["date:\\'shortdate",{"_index":2381,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["day",{"_index":1288,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["dbe5eb",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["dboard",{"_index":1927,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["dcm",{"_index":1893,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["dd",{"_index":2282,"title":{},"body":{"injectables/MrfService.html":{}}}],["deactivate.guard",{"_index":627,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["deactivate.guard.ts",{"_index":821,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate.guard.ts:14",{"_index":1934,"title":{},"body":{"guards/MrfDeactivateGuard.html":{}}}],["deactivate.guard.ts:18",{"_index":1935,"title":{},"body":{"guards/MrfDeactivateGuard.html":{}}}],["december",{"_index":2007,"title":{},"body":{"components/MrfListComponent.html":{}}}],["declarations",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["decoration",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["decorators",{"_index":928,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"directives/EqualValidator.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["deep",{"_index":1740,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["default",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DivisionsComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defaulthours",{"_index":1141,"title":{},"body":{"injectables/CerfService.html":{}}}],["defaulthours.fellowship",{"_index":1151,"title":{},"body":{"injectables/CerfService.html":{}}}],["defaulthours.fellowship)).map(attendee",{"_index":1149,"title":{},"body":{"injectables/CerfService.html":{}}}],["defaulthours.leadership",{"_index":1147,"title":{},"body":{"injectables/CerfService.html":{}}}],["defaulthours.service",{"_index":1145,"title":{},"body":{"injectables/CerfService.html":{}}}],["defaultifempty",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{}}}],["defaults",{"_index":980,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["definitely",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["delay",{"_index":785,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["delete",{"_index":1474,"title":{},"body":{"directives/EqualValidator.html":{},"injectables/RequestCache.html":{},"components/SignupComponent.html":{}}}],["delete_outline",{"_index":2036,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["deletecerf",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{}}}],["deletecerf(id",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["deleteclub",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteclub(id",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["deletedivision",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["deletedivision(id",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["deletemrfstate",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["dematerialize",{"_index":788,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["dependencies",{"_index":550,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":2555,"title":{},"body":{"components/TagsDialog.html":{}}}],["description",{"_index":1048,"title":{},"body":{"injectables/CerfService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["descriptions",{"_index":2503,"title":{},"body":{"components/TagsDialog.html":{}}}],["detachedroutehandle",{"_index":2145,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["detail",{"_index":1308,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["determine",{"_index":2212,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["determines",{"_index":2153,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["determining",{"_index":2167,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["dev",{"_index":2675,"title":{},"body":{"index.html":{}}}],["development",{"_index":1684,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/TagsDialog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["dialog'},{'name",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["dialog.component.css",{"_index":1355,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.html",{"_index":1356,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TagsDialog.html":{}}}],["dialog.component.ts",{"_index":1354,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":2501,"title":{},"body":{"components/TagsDialog.html":{}}}],["dialog.component.ts:12",{"_index":1359,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":1360,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:8",{"_index":2500,"title":{},"body":{"components/TagsDialog.html":{}}}],["dialog.html",{"_index":1688,"title":{},"body":{"components/InfoDialog.html":{}}}],["dialog.ts",{"_index":1687,"title":{},"body":{"components/InfoDialog.html":{},"coverage.html":{}}}],["dialog.ts:11",{"_index":1693,"title":{},"body":{"components/InfoDialog.html":{}}}],["dialog.ts:12",{"_index":1690,"title":{},"body":{"components/InfoDialog.html":{}}}],["dialog.ts:14",{"_index":1691,"title":{},"body":{"components/InfoDialog.html":{}}}],["dialog/confirm",{"_index":1353,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog/info",{"_index":1686,"title":{},"body":{"components/InfoDialog.html":{},"coverage.html":{}}}],["dialognewclub",{"_index":509,"title":{"components/DialogNewClub.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["dialognewmember",{"_index":512,"title":{"components/DialogNewMember.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":1254,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1256,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["diam",{"_index":1552,"title":{},"body":{"components/FAQsComponent.html":{}}}],["direction",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":495,"title":{"directives/EqualValidator.html":{},"directives/NewFocusInput.html":{}},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{}}}],["directives",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2680,"title":{},"body":{"index.html":{}}}],["directly",{"_index":252,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["directory",{"_index":2684,"title":{},"body":{"index.html":{}}}],["dirtywrite",{"_index":2413,"title":{},"body":{"injectables/RequestCache.html":{}}}],["dirtywrite(req",{"_index":2415,"title":{},"body":{"injectables/RequestCache.html":{}}}],["dispatchnewcerf",{"_index":1016,"title":{},"body":{"injectables/CerfService.html":{}}}],["dispatchupdate",{"_index":1017,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["display",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["displayedcolumns",{"_index":903,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["dist",{"_index":2683,"title":{},"body":{"index.html":{}}}],["distmrfs",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["district",{"_index":274,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Member.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"components/TagsDialog.html":{},"classes/User.html":{}}}],["district'},{'name",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["district.component.css",{"_index":1945,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district.component.css,./_mrf",{"_index":1939,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district.component.html",{"_index":1941,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district.component.scss",{"_index":1940,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district.component.ts",{"_index":1938,"title":{},"body":{"components/MrfDistrictComponent.html":{},"coverage.html":{}}}],["district.component.ts:12",{"_index":1944,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district.component.ts:13",{"_index":1943,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["district/mrf",{"_index":1937,"title":{},"body":{"components/MrfDistrictComponent.html":{},"coverage.html":{}}}],["districtmrfs",{"_index":635,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["division",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["division'},{'name",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["division.component.css",{"_index":1962,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division.component.css,./_mrf",{"_index":1957,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division.component.html",{"_index":1959,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division.component.scss",{"_index":1958,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division.component.ts",{"_index":1956,"title":{},"body":{"components/MrfDivisionComponent.html":{},"coverage.html":{}}}],["division.component.ts:12",{"_index":1961,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division.component.ts:13",{"_index":1960,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["division/mrf",{"_index":1955,"title":{},"body":{"components/MrfDivisionComponent.html":{},"coverage.html":{}}}],["division_id",{"_index":845,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"classes/User.html":{}}}],["divisional",{"_index":2570,"title":{},"body":{"components/TagsDialog.html":{}}}],["divisionid",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"pipes/DivisionIDPipe.html":{},"interfaces/Response.html":{}}}],["divisionid=this.user.division_id",{"_index":279,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["divisionidpipe",{"_index":560,"title":{"pipes/DivisionIDPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/DivisionIDPipe.html":{},"coverage.html":{},"overview.html":{}}}],["divisionmrfs",{"_index":634,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["divisions",{"_index":276,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"interfaces/Response.html":{}}}],["divisions'},{'name",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["divisions.component.css",{"_index":1432,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions.component.css,./_divisions.component.scss",{"_index":1421,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions.component.html",{"_index":1422,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["divisions[i].name",{"_index":2038,"title":{},"body":{"components/MrfListComponent.html":{}}}],["divisionscomponent",{"_index":514,"title":{"components/DivisionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["divmrfs",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["divname",{"_index":1346,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["documentation",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1105,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["doing",{"_index":2508,"title":{},"body":{"components/TagsDialog.html":{}}}],["dolor",{"_index":1538,"title":{},"body":{"components/FAQsComponent.html":{}}}],["dom",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["don't",{"_index":2436,"title":{},"body":{"injectables/RequestCache.html":{}}}],["done",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{}}}],["donec",{"_index":1608,"title":{},"body":{"components/FAQsComponent.html":{}}}],["down",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["draft",{"_index":2353,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["drawer",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["driver",{"_index":885,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["drivers",{"_index":846,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["dues",{"_index":2557,"title":{},"body":{"components/TagsDialog.html":{}}}],["dui",{"_index":1641,"title":{},"body":{"components/FAQsComponent.html":{}}}],["duis",{"_index":1555,"title":{},"body":{"components/FAQsComponent.html":{}}}],["duration",{"_index":1278,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/TagsDialog.html":{}}}],["dynamic",{"_index":2642,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1468,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["e.errors['validateequal",{"_index":1475,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["e.g",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"injectables/MrfService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/TagsDialog.html":{}}}],["e.seterrors",{"_index":1478,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["e.seterrors(null",{"_index":1477,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["e.value",{"_index":1472,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["e2e",{"_index":2695,"title":{},"body":{"index.html":{}}}],["each",{"_index":2122,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["ease",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/MyCerfsComponent.html":{}}}],["eboard",{"_index":1215,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["ec2",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eceff1",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["edituserdata(firstname",{"_index":1484,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["effect",{"_index":1052,"title":{},"body":{"injectables/CerfService.html":{}}}],["efficitur",{"_index":1614,"title":{},"body":{"components/FAQsComponent.html":{}}}],["egestas",{"_index":1642,"title":{},"body":{"components/FAQsComponent.html":{}}}],["eleifend",{"_index":1620,"title":{},"body":{"components/FAQsComponent.html":{}}}],["element",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["elementref",{"_index":2328,"title":{},"body":{"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{}}}],["elements",{"_index":963,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["elementum",{"_index":1593,"title":{},"body":{"components/FAQsComponent.html":{}}}],["elevation",{"_index":2051,"title":{},"body":{"components/MrfListComponent.html":{}}}],["elit",{"_index":1543,"title":{},"body":{"components/FAQsComponent.html":{}}}],["email",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"components/SignupComponent.html":{}}}],["email/password",{"_index":1712,"title":{},"body":{"components/LoginComponent.html":{}}}],["emits",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"interfaces/Response.html":{},"index.html":{}}}],["endpoint",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["enough",{"_index":962,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["ensure",{"_index":1109,"title":{},"body":{"injectables/CerfService.html":{}}}],["enter",{"_index":2492,"title":{},"body":{"components/SignupComponent.html":{}}}],["entry",{"_index":2446,"title":{},"body":{"injectables/RequestCache.html":{}}}],["entrycomponents",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":2589,"title":{},"body":{"classes/User.html":{}}}],["env/api_config",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["environment",{"_index":2628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1470,"title":{},"body":{"directives/EqualValidator.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["equalvalidator",{"_index":542,"title":{"directives/EqualValidator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["erat",{"_index":1558,"title":{},"body":{"components/FAQsComponent.html":{}}}],["eros",{"_index":1580,"title":{},"body":{"components/FAQsComponent.html":{}}}],["error",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{}}}],["error('coremodule",{"_index":1409,"title":{},"body":{"modules/CoreModule.html":{}}}],["error=>console.error(error",{"_index":1511,"title":{},"body":{"directives/EqualValidator.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["errorinterceptor",{"_index":1518,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":2444,"title":{},"body":{"injectables/RequestCache.html":{}}}],["est",{"_index":1655,"title":{},"body":{"components/FAQsComponent.html":{}}}],["et",{"_index":1550,"title":{},"body":{"components/FAQsComponent.html":{}}}],["etiam",{"_index":1637,"title":{},"body":{"components/FAQsComponent.html":{}}}],["eu",{"_index":1577,"title":{},"body":{"components/FAQsComponent.html":{}}}],["eu.pellentesque",{"_index":1659,"title":{},"body":{"components/FAQsComponent.html":{}}}],["euismod",{"_index":1598,"title":{},"body":{"components/FAQsComponent.html":{}}}],["even",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["event",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/MyCerfsComponent.html":{},"components/TagsDialog.html":{}}}],["event\",this.user.club_id,this.user.division_id",{"_index":1073,"title":{},"body":{"injectables/CerfService.html":{}}}],["event.body",{"_index":807,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["events",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/TagsDialog.html":{}}}],["examples",{"_index":2523,"title":{},"body":{"components/TagsDialog.html":{}}}],["excel",{"_index":2655,"title":{},"body":{"dependencies.html":{}}}],["except",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{}}}],["execute",{"_index":2692,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2467,"title":{},"body":{"injectables/RequestCache.html":{}}}],["exitguard",{"_index":817,"title":{"guards/ExitGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/ExitGuard.html":{},"coverage.html":{}}}],["expanded",{"_index":1311,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["expandeddetail",{"_index":1312,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["expandedmember",{"_index":1164,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["expired",{"_index":2450,"title":{},"body":{"injectables/RequestCache.html":{}}}],["expiredentry.lastread",{"_index":2452,"title":{},"body":{"injectables/RequestCache.html":{}}}],["explicit",{"_index":258,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["export",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["exports",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialsModule.html":{},"overview.html":{}}}],["extends",{"_index":895,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["extralist",{"_index":1973,"title":{},"body":{"components/MrfListComponent.html":{}}}],["f2e18b",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/MrfSecretaryComponent.html":{}}}],["f5f5f5",{"_index":1310,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["f7a749bdc1b0",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["fa",{"_index":1930,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["facilisis",{"_index":1612,"title":{},"body":{"components/FAQsComponent.html":{}}}],["fact",{"_index":2453,"title":{},"body":{"injectables/RequestCache.html":{}}}],["faculty",{"_index":1200,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["fake",{"_index":1680,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fakebackendinterceptor",{"_index":1663,"title":{"interceptors/FakeBackendInterceptor.html":{}},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fakebackendprovider",{"_index":1678,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":225,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/TagsDialog.html":{}}}],["faqs",{"_index":638,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FAQsComponent.html":{}}}],["faqs'},{'name",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["faqs.component.css",{"_index":1534,"title":{},"body":{"components/FAQsComponent.html":{}}}],["faqs.component.css,./_faqs.component.scss",{"_index":1530,"title":{},"body":{"components/FAQsComponent.html":{}}}],["faqs.component.html",{"_index":1531,"title":{},"body":{"components/FAQsComponent.html":{}}}],["faqscomponent",{"_index":516,"title":{"components/FAQsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["fbfbfb",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["february",{"_index":1998,"title":{},"body":{"components/MrfListComponent.html":{}}}],["felis",{"_index":1634,"title":{},"body":{"components/FAQsComponent.html":{}}}],["fellowship",{"_index":880,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["fermentum",{"_index":1569,"title":{},"body":{"components/FAQsComponent.html":{}}}],["fetch",{"_index":1049,"title":{},"body":{"injectables/CerfService.html":{}}}],["fetches",{"_index":1053,"title":{},"body":{"injectables/CerfService.html":{}}}],["fetchmembers",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["ffe5e5",{"_index":1742,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ffffff",{"_index":1737,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["figure",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["files",{"_index":2678,"title":{},"body":{"index.html":{}}}],["filter",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{}}}],["filtermembers",{"_index":1820,"title":{},"body":{"injectables/MemberService.html":{}}}],["filtermembers(value",{"_index":1828,"title":{},"body":{"injectables/MemberService.html":{}}}],["filtervalue",{"_index":917,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["filtervalue.tolowercase",{"_index":979,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["filtervalue.trim",{"_index":976,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["finds",{"_index":2119,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["finibus",{"_index":1654,"title":{},"body":{"components/FAQsComponent.html":{}}}],["first",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["firstname",{"_index":1488,"title":{},"body":{"directives/EqualValidator.html":{},"injectables/MemberService.html":{},"components/SignupComponent.html":{}}}],["fixed",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":2686,"title":{},"body":{"index.html":{}}}],["flex",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["flexlayoutmodule",{"_index":1390,"title":{},"body":{"modules/CoreModule.html":{}}}],["flow",{"_index":2040,"title":{},"body":{"components/MrfListComponent.html":{}}}],["font",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["footer",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["forcing",{"_index":2047,"title":{},"body":{"components/MrfListComponent.html":{}}}],["forgot",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{}}}],["forkjoin",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["form",{"_index":1045,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["form.get('hoursperattendee').value",{"_index":1142,"title":{},"body":{"injectables/CerfService.html":{}}}],["form.getrawvalue",{"_index":1140,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["formarray",{"_index":1065,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{}}}],["formbuilder",{"_index":1027,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{}}}],["formcontrol",{"_index":1064,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["formgroup",{"_index":1037,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{}}}],["forms",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["formsmodule",{"_index":1388,"title":{},"body":{"modules/CoreModule.html":{}}}],["forwardref",{"_index":1441,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["found",{"_index":1838,"title":{},"body":{"injectables/MemberService.html":{}}}],["four",{"_index":2565,"title":{},"body":{"components/TagsDialog.html":{}}}],["frequency",{"_index":1198,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["fringilla",{"_index":1560,"title":{},"body":{"components/FAQsComponent.html":{}}}],["fromeventreport",{"_index":1932,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["function",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"injectables/CerfService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["function.tostring",{"_index":2224,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["functions",{"_index":2223,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["fundraised",{"_index":847,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["fundraiser",{"_index":2542,"title":{},"body":{"components/TagsDialog.html":{}}}],["fundraising",{"_index":1894,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["funds",{"_index":2547,"title":{},"body":{"components/TagsDialog.html":{}}}],["further",{"_index":2697,"title":{},"body":{"index.html":{}}}],["future",{"_index":2151,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["future.routeconfig",{"_index":2204,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["future.routeconfig.path",{"_index":2206,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["gate",{"_index":1842,"title":{},"body":{"injectables/MemberService.html":{}}}],["general",{"_index":2527,"title":{},"body":{"components/TagsDialog.html":{}}}],["generate",{"_index":1292,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"index.html":{}}}],["generatecerf",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated",{"_index":2669,"title":{},"body":{"index.html":{}}}],["generating",{"_index":2341,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["get($theme",{"_index":2067,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["get(req",{"_index":2418,"title":{},"body":{"injectables/RequestCache.html":{}}}],["getaccess",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcerf",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{}}}],["getcerf(id",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getcerfform",{"_index":1018,"title":{},"body":{"injectables/CerfService.html":{}}}],["getcerffromform",{"_index":1019,"title":{},"body":{"injectables/CerfService.html":{}}}],["getcerffromform(form",{"_index":1043,"title":{},"body":{"injectables/CerfService.html":{}}}],["getclubs",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{}}}],["getclubs(divisionid",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getcode",{"_index":1168,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["getcode(i",{"_index":1178,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["getdivisions",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getgetmrfformstate",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgetmrftabstate",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{}}}],["getisreverse",{"_index":1455,"title":{},"body":{"directives/EqualValidator.html":{}}}],["getmembercode",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/ClubAdministrationComponent.html":{}}}],["getmembercode(id",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getmembercode(row",{"_index":1180,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["getmembers",{"_index":1821,"title":{},"body":{"injectables/MemberService.html":{}}}],["getmrf",{"_index":2248,"title":{},"body":{"injectables/MrfService.html":{}}}],["getmrfbydate",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["getmrfbydate(year",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["getmrfform",{"_index":2249,"title":{},"body":{"injectables/MrfService.html":{}}}],["getmrfformstate",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getmrffromform",{"_index":2250,"title":{},"body":{"injectables/MrfService.html":{}}}],["getmrffromform(form",{"_index":2257,"title":{},"body":{"injectables/MrfService.html":{}}}],["getmrflist",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getmrftabstate",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getmycerflist",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getnamefromid",{"_index":1822,"title":{},"body":{"injectables/MemberService.html":{}}}],["getnamefromid(_id",{"_index":1831,"title":{},"body":{"injectables/MemberService.html":{}}}],["getpendingcerfs",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["getregistrationcode",{"_index":1823,"title":{},"body":{"injectables/MemberService.html":{}}}],["getregistrationcode(_id",{"_index":1833,"title":{},"body":{"injectables/MemberService.html":{}}}],["getters",{"_index":1098,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["getting",{"_index":1281,"title":{"index.html":{}},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["gettingcode",{"_index":1165,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["getuser",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserobservable",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserobservable(refresh",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["ghpages",{"_index":2647,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{},"index.html":{}}}],["goals",{"_index":1895,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["goes",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["going",{"_index":2156,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["golden",{"_index":1841,"title":{},"body":{"injectables/MemberService.html":{}}}],["gothic",{"_index":2072,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["governor",{"_index":2573,"title":{},"body":{"components/TagsDialog.html":{}}}],["grab",{"_index":1338,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["grad_year",{"_index":1209,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["graph",{"_index":2703,"title":{},"body":{"modules.html":{}}}],["graphics",{"_index":1219,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["gravida",{"_index":1566,"title":{},"body":{"components/FAQsComponent.html":{}}}],["greater",{"_index":2563,"title":{},"body":{"components/TagsDialog.html":{}}}],["guard",{"_index":641,"title":{"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/ExitGuard.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/ExitGuard.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"overview.html":{}}}],["h1",{"_index":2361,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["h2",{"_index":2239,"title":{},"body":{"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["h3",{"_index":2362,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["handing",{"_index":2461,"title":{},"body":{"injectables/RequestCache.html":{}}}],["handle",{"_index":2161,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["handler",{"_index":215,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["handles",{"_index":2340,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["header",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["headers",{"_index":1366,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["height",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["hello",{"_index":2406,"title":{},"body":{"components/ProfileComponent.html":{}}}],["help",{"_index":2698,"title":{},"body":{"index.html":{}}}],["helper",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["hendrerit",{"_index":1575,"title":{},"body":{"components/FAQsComponent.html":{}}}],["here",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["hidden",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{}}}],["hint",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/TagsDialog.html":{}}}],["horizontal",{"_index":2045,"title":{},"body":{"components/MrfListComponent.html":{}}}],["host",{"_index":1738,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["hostbinding",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["hosted",{"_index":2543,"title":{},"body":{"components/TagsDialog.html":{}}}],["hours",{"_index":1075,"title":{},"body":{"injectables/CerfService.html":{}}}],["hoursperattendee",{"_index":848,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["html",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["htmlcontent",{"_index":1689,"title":{},"body":{"components/InfoDialog.html":{}}}],["http",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2677,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":783,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{}}}],["httpclientmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["httpconfig",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpconfig.baseurl",{"_index":244,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["httpconfig.schemelessurl",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":780,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":775,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders().set('content",{"_index":1367,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":781,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["httpparams().set('status",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["httprequest",{"_index":773,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/RequestCache.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":782,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/RequestCache.html":{}}}],["https://blog.florimondmanca.com/consuming",{"_index":1760,"title":{},"body":{"classes/Maker.html":{}}}],["https://github.com/angular/material2/issues/9966",{"_index":972,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["https://itnext.io/dont",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["https://medium.com/@joshblf/dynamic",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["https://stackoverflow.com/questions/41280471/how",{"_index":2164,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["https://stackoverflow.com/questions/46722868/sticky",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["iaculis",{"_index":1576,"title":{},"body":{"components/FAQsComponent.html":{}}}],["iadapt",{"_index":1762,"title":{},"body":{"classes/Maker.html":{}}}],["icon",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/MyCerfsComponent.html":{}}}],["icons",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/FAQsComponent.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["identifiable",{"_index":1099,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["identifier",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["if(!divisionid",{"_index":278,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(!nextstate",{"_index":828,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["if(!res",{"_index":1351,"title":{},"body":{"guards/ClubsResolver.html":{}}}],["if(!res.success",{"_index":1508,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["if(!route.routeconfig",{"_index":2196,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(!this",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(!this.auth.isloggedin",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(!this.loggedin",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!this.member",{"_index":2432,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(!this.memberregistrationmode",{"_index":1266,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["if(!this.user",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(!token",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!user",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(!value",{"_index":1866,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(_id",{"_index":1883,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(access.club",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["if(access.district",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["if(access.division",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["if(action",{"_index":221,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(canattach",{"_index":2181,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(curr.routeconfig",{"_index":2203,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(curr.routeconfig.path",{"_index":2205,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(event",{"_index":809,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["if(event.body.success",{"_index":1522,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["if(future.routeconfig.path",{"_index":2199,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(member",{"_index":1876,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(req.method",{"_index":2468,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(req.url.indexof(\"/events",{"_index":2470,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(req.url.indexof(\"/submit",{"_index":2463,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(request.method",{"_index":794,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(res.error",{"_index":1275,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["if(res.success",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{}}}],["if(res['success",{"_index":1001,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["if(response",{"_index":1858,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(response.status",{"_index":2442,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(response.success",{"_index":1879,"title":{},"body":{"injectables/MemberService.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{}}}],["if(result",{"_index":1257,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["if(state.url",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(state.url=='/cerfs",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(state.url=='/login",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(state.url=='/mrfs",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(success",{"_index":1715,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.cache.get(req.url",{"_index":2457,"title":{},"body":{"injectables/RequestCache.html":{}}}],["if(this.cerflist",{"_index":953,"title":{},"body":{"components/CerfListComponent.html":{}}}],["if(this.cerfs",{"_index":2337,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["if(this.cerfurl.test(currentstate.url",{"_index":832,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["if(this.display",{"_index":2026,"title":{},"body":{"components/MrfListComponent.html":{}}}],["if(this.extralist",{"_index":2020,"title":{},"body":{"components/MrfListComponent.html":{}}}],["if(this.isloggedin",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.list",{"_index":964,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["if(this.mrfformstate",{"_index":268,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(this.mrftabstate",{"_index":266,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["if(this.mrfurl.test(currentstate.url",{"_index":829,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["if(this.mrfview",{"_index":2343,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["if(this.pagination",{"_index":973,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["if(this.pendingcerfs",{"_index":951,"title":{},"body":{"components/CerfListComponent.html":{}}}],["if(this.roster",{"_index":1854,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(this.roster.length==0",{"_index":1865,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(this.roster.map(member",{"_index":1873,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(this.roster===undefined",{"_index":1867,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(this.routestostore.indexof(route.routeconfig.path",{"_index":2174,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["if(token",{"_index":2578,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["if(user",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["if(user.access.club",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(value.password",{"_index":1503,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["if(x>0",{"_index":1496,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["img",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["imperdiet",{"_index":1582,"title":{},"body":{"components/FAQsComponent.html":{}}}],["implement",{"_index":2165,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["implements",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"pipes/ClubIDPipe.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"pipes/DivisionIDPipe.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"pipes/MemberIDPipe.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{}}}],["important",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["imported",{"_index":1400,"title":{},"body":{"modules/CoreModule.html":{}}}],["importedevents",{"_index":1896,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["imports",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialsModule.html":{}}}],["improvements",{"_index":891,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["include",{"_index":2524,"title":{},"body":{"components/TagsDialog.html":{}}}],["incorrect",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":2110,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["indicating",{"_index":2140,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["indication",{"_index":1710,"title":{},"body":{"components/LoginComponent.html":{}}}],["inefficient",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["infodialog",{"_index":518,"title":{"components/InfoDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":2031,"title":{},"body":{"components/MrfListComponent.html":{}}}],["init",{"_index":2414,"title":{},"body":{"injectables/RequestCache.html":{}}}],["init(member",{"_index":2420,"title":{},"body":{"injectables/RequestCache.html":{}}}],["initial",{"_index":1101,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["initiative",{"_index":2515,"title":{},"body":{"components/TagsDialog.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CerfService.html":{},"injectables/MemberService.html":{},"injectables/MrfService.html":{},"injectables/RequestCache.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/CerfService.html":{},"injectables/MemberService.html":{},"injectables/MrfService.html":{},"injectables/RequestCache.html":{},"overview.html":{}}}],["inline",{"_index":2369,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["input",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["inputs",{"_index":909,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["inputted",{"_index":254,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["instanceof",{"_index":810,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["instantiate",{"_index":1404,"title":{},"body":{"modules/CoreModule.html":{}}}],["instead",{"_index":1096,"title":{},"body":{"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DivisionsComponent.html":{},"components/SignupComponent.html":{}}}],["intends",{"_index":2159,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["interacting",{"_index":2532,"title":{},"body":{"components/TagsDialog.html":{}}}],["intercept",{"_index":768,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":772,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":763,"title":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.ts",{"_index":767,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:15",{"_index":776,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptor.ts:25",{"_index":779,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptor.ts:7",{"_index":1365,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor.ts:8",{"_index":1520,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:9",{"_index":771,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptors",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptors/cache",{"_index":766,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors/content",{"_index":1364,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{},"coverage.html":{}}}],["interceptors/error",{"_index":1519,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors/fake",{"_index":1664,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors/index.ts",{"_index":2609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors/token",{"_index":2577,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["interclub",{"_index":2551,"title":{},"body":{"components/TagsDialog.html":{}}}],["interface",{"_index":134,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"guards/ExitGuard.html":{},"classes/Maker.html":{},"guards/MrfDeactivateGuard.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["interfaces",{"_index":814,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"overview.html":{}}}],["international",{"_index":2517,"title":{},"body":{"components/TagsDialog.html":{}}}],["ipsum",{"_index":1537,"title":{},"body":{"components/FAQsComponent.html":{}}}],["isdatacorrect",{"_index":1497,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["isexpanded=false",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["isformunlocked",{"_index":1494,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["islighttheme",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["isloggedin",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["isreverse",{"_index":1446,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["it'll",{"_index":1337,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["it's",{"_index":1407,"title":{},"body":{"modules/CoreModule.html":{}}}],["item",{"_index":1750,"title":{},"body":{"classes/Maker.html":{}}}],["item._id",{"_index":1764,"title":{},"body":{"classes/Maker.html":{}}}],["item.attendees",{"_index":1774,"title":{},"body":{"classes/Maker.html":{}}}],["item.author",{"_index":1769,"title":{},"body":{"classes/Maker.html":{}}}],["item.categories",{"_index":1781,"title":{},"body":{"classes/Maker.html":{}}}],["item.chair",{"_index":1770,"title":{},"body":{"classes/Maker.html":{}}}],["item.club_id",{"_index":1765,"title":{},"body":{"classes/Maker.html":{}}}],["item.comments",{"_index":1779,"title":{},"body":{"classes/Maker.html":{}}}],["item.contact",{"_index":1772,"title":{},"body":{"classes/Maker.html":{}}}],["item.division_id",{"_index":1766,"title":{},"body":{"classes/Maker.html":{}}}],["item.drivers",{"_index":1778,"title":{},"body":{"classes/Maker.html":{}}}],["item.fundraised",{"_index":1777,"title":{},"body":{"classes/Maker.html":{}}}],["item.hoursperattendee",{"_index":1775,"title":{},"body":{"classes/Maker.html":{}}}],["item.kfamattendance",{"_index":1780,"title":{},"body":{"classes/Maker.html":{}}}],["item.location",{"_index":1771,"title":{},"body":{"classes/Maker.html":{}}}],["item.name",{"_index":1767,"title":{},"body":{"classes/Maker.html":{}}}],["item.overridehours",{"_index":1776,"title":{},"body":{"classes/Maker.html":{}}}],["item.status",{"_index":1782,"title":{},"body":{"classes/Maker.html":{}}}],["item.tags",{"_index":1773,"title":{},"body":{"classes/Maker.html":{}}}],["item.time",{"_index":1768,"title":{},"body":{"classes/Maker.html":{}}}],["items",{"_index":2370,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["january",{"_index":1997,"title":{},"body":{"components/MrfListComponent.html":{}}}],["js",{"_index":2127,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"dependencies.html":{}}}],["json",{"_index":1301,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ProfileComponent.html":{}}}],["july",{"_index":2002,"title":{},"body":{"components/MrfListComponent.html":{}}}],["june",{"_index":2001,"title":{},"body":{"components/MrfListComponent.html":{}}}],["justify",{"_index":2041,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["justo",{"_index":1570,"title":{},"body":{"components/FAQsComponent.html":{}}}],["jwt",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["jwthelperservice",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["k",{"_index":2549,"title":{},"body":{"components/TagsDialog.html":{}}}],["k/kiwanis",{"_index":2554,"title":{},"body":{"components/TagsDialog.html":{}}}],["karma",{"_index":2694,"title":{},"body":{"index.html":{}}}],["key",{"_index":1463,"title":{},"body":{"directives/EqualValidator.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["keys",{"_index":2111,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["kfam",{"_index":1076,"title":{},"body":{"injectables/CerfService.html":{}}}],["kfamattendance",{"_index":849,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["kfamreport",{"_index":1897,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["kfh",{"_index":1929,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["kiwanis",{"_index":1204,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"components/TagsDialog.html":{}}}],["label",{"_index":2034,"title":{},"body":{"components/MrfListComponent.html":{}}}],["labels",{"_index":2359,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["lacinia",{"_index":1588,"title":{},"body":{"components/FAQsComponent.html":{}}}],["lacus",{"_index":1615,"title":{},"body":{"components/FAQsComponent.html":{}}}],["lam",{"_index":1206,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["laoreet",{"_index":1656,"title":{},"body":{"components/FAQsComponent.html":{}}}],["last",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"interfaces/Response.html":{}}}],["lastname",{"_index":1485,"title":{},"body":{"directives/EqualValidator.html":{},"injectables/MemberService.html":{},"components/SignupComponent.html":{}}}],["lastname).pipe(tap((response",{"_index":1878,"title":{},"body":{"injectables/MemberService.html":{}}}],["lastread",{"_index":2447,"title":{},"body":{"injectables/RequestCache.html":{}}}],["lato",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["layout",{"_index":1392,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["leadership",{"_index":879,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["leave",{"_index":217,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["left",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["legend",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"overview.html":{}}}],["leo",{"_index":1636,"title":{},"body":{"components/FAQsComponent.html":{}}}],["less",{"_index":1683,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/TagsDialog.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["levels",{"_index":2590,"title":{},"body":{"classes/User.html":{}}}],["libero",{"_index":1589,"title":{},"body":{"components/FAQsComponent.html":{}}}],["libraries",{"_index":1380,"title":{},"body":{"modules/CoreModule.html":{}}}],["library_books",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["lieutenant",{"_index":2572,"title":{},"body":{"components/TagsDialog.html":{}}}],["ligula",{"_index":1546,"title":{},"body":{"components/FAQsComponent.html":{}}}],["limited",{"_index":2525,"title":{},"body":{"components/TagsDialog.html":{}}}],["line",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["link.icon",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["link.text",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["linkdeco",{"_index":1729,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["linkdeco:hover",{"_index":1730,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["links",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":240,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"interfaces/Response.html":{}}}],["list.length",{"_index":243,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["literal",{"_index":855,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"directives/EqualValidator.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"classes/MrfReuseStrategy.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1882,"title":{},"body":{"injectables/MemberService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["loadcerf",{"_index":1020,"title":{},"body":{"injectables/CerfService.html":{}}}],["loadcerf(id",{"_index":1046,"title":{},"body":{"injectables/CerfService.html":{}}}],["loaded",{"_index":1405,"title":{},"body":{"modules/CoreModule.html":{}}}],["loading",{"_index":1051,"title":{},"body":{"injectables/CerfService.html":{}}}],["loadmrf",{"_index":2094,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"interfaces/RouteStorageObject.html":{}}}],["loadmrf(year",{"_index":2259,"title":{},"body":{"injectables/MrfService.html":{}}}],["loads",{"_index":1054,"title":{},"body":{"injectables/CerfService.html":{}}}],["loadtooltip",{"_index":1169,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["loadtooltip(row",{"_index":1182,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["loaduserfromtoken",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["lobortis",{"_index":1551,"title":{},"body":{"components/FAQsComponent.html":{}}}],["local",{"_index":1082,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["localhost",{"_index":2408,"title":{},"body":{"components/ProfileComponent.html":{}}}],["localstorage",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('access_token",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["localstorage.getitem(tokenname",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(tokenname",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(tokenname",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":850,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MyCerfsComponent.html":{}}}],["log",{"_index":803,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["log[\"response",{"_index":806,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["log[\"url",{"_index":804,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["logform",{"_index":1021,"title":{},"body":{"injectables/CerfService.html":{}}}],["logged",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggedin",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["logging",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["logic",{"_index":943,"title":{},"body":{"components/CerfListComponent.html":{}}}],["login",{"_index":636,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["login'},{'name",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["login(email",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1706,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css,./_login.component.scss",{"_index":1695,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1696,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":519,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["logout",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["loop",{"_index":2210,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["loops",{"_index":2229,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["lorem",{"_index":1536,"title":{},"body":{"components/FAQsComponent.html":{}}}],["lowercase",{"_index":981,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["ltg",{"_index":1926,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"classes/User.html":{}}}],["luctus",{"_index":1621,"title":{},"body":{"components/FAQsComponent.html":{}}}],["maecenas",{"_index":1653,"title":{},"body":{"components/FAQsComponent.html":{}}}],["magna",{"_index":1638,"title":{},"body":{"components/FAQsComponent.html":{}}}],["mailing",{"_index":1290,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["main",{"_index":267,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Response.html":{}}}],["make",{"_index":1080,"title":{},"body":{"injectables/CerfService.html":{},"modules/CoreModule.html":{}}}],["maker",{"_index":1744,"title":{"classes/Maker.html":{}},"body":{"classes/Maker.html":{},"coverage.html":{}}}],["malesuada",{"_index":1650,"title":{},"body":{"components/FAQsComponent.html":{}}}],["manner",{"_index":1759,"title":{},"body":{"classes/Maker.html":{}}}],["map",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["mapidtoclub",{"_index":1824,"title":{},"body":{"injectables/MemberService.html":{}}}],["mapidtoclub(_id",{"_index":1835,"title":{},"body":{"injectables/MemberService.html":{}}}],["mapidtodivision",{"_index":1825,"title":{},"body":{"injectables/MemberService.html":{}}}],["mapidtodivision(_id",{"_index":1839,"title":{},"body":{"injectables/MemberService.html":{}}}],["march",{"_index":1999,"title":{},"body":{"components/MrfListComponent.html":{}}}],["margin",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["marginbottom",{"_index":1733,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["marginleft",{"_index":2498,"title":{},"body":{"components/SignupComponent.html":{}}}],["marginright",{"_index":1732,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["margins",{"_index":2049,"title":{},"body":{"components/MrfListComponent.html":{}}}],["massa",{"_index":1607,"title":{},"body":{"components/FAQsComponent.html":{}}}],["masthead",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["mat_dialog_data",{"_index":1224,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["matautocompletemodule",{"_index":1804,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matbuttonmodule",{"_index":1789,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matcardmodule",{"_index":1786,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["match",{"_index":2495,"title":{},"body":{"components/SignupComponent.html":{}}}],["matcheckboxmodule",{"_index":1797,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matchedpass",{"_index":1483,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["matches",{"_index":982,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["matching",{"_index":281,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1394,"title":{},"body":{"modules/CoreModule.html":{}}}],["matdialog",{"_index":1173,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["matdialogmodule",{"_index":1796,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matdialogref",{"_index":1223,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["matdividermodule",{"_index":1795,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["material",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["materialize",{"_index":787,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["materialsmodule",{"_index":1376,"title":{"modules/MaterialsModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/MaterialsModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1803,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matformfieldmodule",{"_index":1784,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matgridlistmodule",{"_index":1787,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["maticonmodule",{"_index":1785,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matinputmodule",{"_index":1788,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matlistmodule",{"_index":1800,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matmomentdatemodule",{"_index":1395,"title":{},"body":{"modules/CoreModule.html":{}}}],["matpaginator",{"_index":927,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["matpaginatormodule",{"_index":1794,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matprogressspinnermodule",{"_index":1798,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matselectmodule",{"_index":1791,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matsidenavmodule",{"_index":1799,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matsnackbar",{"_index":1175,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["matsnackbarmodule",{"_index":1802,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["matsort",{"_index":931,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["matsortable",{"_index":936,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["matsortmodule",{"_index":1793,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["mattabledatasource",{"_index":925,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["mattabledatasource(this.cerflist",{"_index":955,"title":{},"body":{"components/CerfListComponent.html":{}}}],["mattabledatasource(this.cerfs",{"_index":2338,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["mattabledatasource(this.clubs",{"_index":1340,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["mattabledatasource(this.divisions",{"_index":1436,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["mattabledatasource(this.members",{"_index":1248,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["mattabledatasource(this.mockdata.members",{"_index":1249,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["mattabledatasource(this.mrflist",{"_index":2024,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mattablemodule",{"_index":1792,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["mattis",{"_index":1651,"title":{},"body":{"components/FAQsComponent.html":{}}}],["mattoolbarmodule",{"_index":1801,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["mattooltipmodule",{"_index":1790,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["mauris",{"_index":1628,"title":{},"body":{"components/FAQsComponent.html":{}}}],["max",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["maxage",{"_index":2427,"title":{},"body":{"injectables/RequestCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximus",{"_index":1572,"title":{},"body":{"components/FAQsComponent.html":{}}}],["md",{"_index":2537,"title":{},"body":{"components/TagsDialog.html":{}}}],["meeting",{"_index":1197,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["meeting.date",{"_index":2299,"title":{},"body":{"injectables/MrfService.html":{}}}],["meetings",{"_index":1287,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{},"components/TagsDialog.html":{}}}],["member",{"_index":130,"title":{"classes/Member.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["member'},{'name",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["member._id",{"_index":1272,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"injectables/MemberService.html":{},"injectables/RequestCache.html":{}}}],["member.email",{"_index":1864,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.email.tolowercase().indexof(value.tolowercase",{"_index":1872,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.html",{"_index":1282,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["member.model",{"_index":1753,"title":{},"body":{"classes/Maker.html":{}}}],["member.name",{"_index":1870,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.name.first",{"_index":1862,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.name.last",{"_index":1863,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.name.tolowercase()).indexof(value.tolowercase",{"_index":1874,"title":{},"body":{"injectables/MemberService.html":{}}}],["member.name.tolowercase().indexof(value.tolowercase",{"_index":1871,"title":{},"body":{"injectables/MemberService.html":{}}}],["memberid",{"_index":1816,"title":{},"body":{"pipes/MemberIDPipe.html":{}}}],["memberidpipe",{"_index":561,"title":{"pipes/MemberIDPipe.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"pipes/MemberIDPipe.html":{},"coverage.html":{},"overview.html":{}}}],["memberregistrationmode",{"_index":1166,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["memberrs",{"_index":2562,"title":{},"body":{"components/TagsDialog.html":{}}}],["members",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/TagsDialog.html":{}}}],["memberservice",{"_index":305,"title":{"injectables/MemberService.html":{}},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"coverage.html":{}}}],["membership",{"_index":2540,"title":{},"body":{"components/TagsDialog.html":{}}}],["membersresolver",{"_index":611,"title":{"guards/MembersResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/MembersResolver.html":{},"coverage.html":{}}}],["menu",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":786,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["message",{"_index":1674,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["metadata",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"pipes/MemberIDPipe.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["method",{"_index":2135,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["methods",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["metro",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["metus",{"_index":1629,"title":{},"body":{"components/FAQsComponent.html":{}}}],["middle",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["milesfrom",{"_index":886,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["milesto",{"_index":887,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["min",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{}}}],["minheight",{"_index":1234,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["minimum",{"_index":2558,"title":{},"body":{"components/TagsDialog.html":{}}}],["miscellaneous",{"_index":2710,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["mockdata",{"_index":1167,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["model",{"_index":1036,"title":{},"body":{"injectables/CerfService.html":{},"classes/Maker.html":{},"injectables/MrfService.html":{}}}],["model.author.name.first",{"_index":1119,"title":{},"body":{"injectables/CerfService.html":{}}}],["model.author.name.last",{"_index":1120,"title":{},"body":{"injectables/CerfService.html":{}}}],["model.chair._id",{"_index":1118,"title":{},"body":{"injectables/CerfService.html":{}}}],["model.contact",{"_index":1125,"title":{},"body":{"injectables/CerfService.html":{}}}],["model.location",{"_index":1124,"title":{},"body":{"injectables/CerfService.html":{}}}],["model.name",{"_index":1116,"title":{},"body":{"injectables/CerfService.html":{}}}],["models",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"interfaces/Response.html":{}}}],["module",{"_index":547,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["modules",{"_index":549,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialsModule.html":{},"modules.html":{},"overview.html":{}}}],["mollis",{"_index":1624,"title":{},"body":{"components/FAQsComponent.html":{}}}],["moment",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MrfService.html":{},"interfaces/Response.html":{},"dependencies.html":{}}}],["moment().month",{"_index":235,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["moment().set('month",{"_index":237,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["moment().subtract(1",{"_index":238,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["money",{"_index":2545,"title":{},"body":{"components/TagsDialog.html":{}}}],["month",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["month).pipe(tap(response",{"_index":2267,"title":{},"body":{"injectables/MrfService.html":{}}}],["months",{"_index":1974,"title":{},"body":{"components/MrfListComponent.html":{}}}],["months[row.month",{"_index":2033,"title":{},"body":{"components/MrfListComponent.html":{}}}],["moral",{"_index":2535,"title":{},"body":{"components/TagsDialog.html":{}}}],["morbi",{"_index":1590,"title":{},"body":{"components/FAQsComponent.html":{}}}],["more",{"_index":256,"title":{},"body":{"injectables/ApiService.html":{},"components/MrfListComponent.html":{},"interfaces/Response.html":{},"index.html":{}}}],["move",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{}}}],["moved",{"_index":2404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["mrf",{"_index":101,"title":{"classes/Mrf.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Mrf.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{}}}],["mrf'},{'name",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["mrf.model",{"_index":1752,"title":{},"body":{"classes/Maker.html":{}}}],["mrf/:year/:month",{"_index":632,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["mrfcomponent",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mrfdeactivateguard",{"_index":626,"title":{"guards/MrfDeactivateGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{},"coverage.html":{}}}],["mrfdistrictcomponent",{"_index":523,"title":{"components/MrfDistrictComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mrfdistrictresolver",{"_index":619,"title":{"guards/MrfDistrictResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"coverage.html":{}}}],["mrfdivisioncomponent",{"_index":525,"title":{"components/MrfDivisionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mrfdivisionresolver",{"_index":618,"title":{"guards/MrfDivisionResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"coverage.html":{}}}],["mrfform",{"_index":2247,"title":{},"body":{"injectables/MrfService.html":{}}}],["mrfformstate",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["mrflist",{"_index":1967,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{}}}],["mrflist'},{'name",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["mrflist.component.css",{"_index":2011,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflist.component.css,./_mrflist.component.scss",{"_index":1968,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflist.component.html",{"_index":1969,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflistcomponent",{"_index":527,"title":{"components/MrfListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mrflistcomponent.district",{"_index":2016,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflistcomponent.division",{"_index":2018,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflistcomponent.none",{"_index":2019,"title":{},"body":{"components/MrfListComponent.html":{}}}],["mrflistentry",{"_index":1933,"title":{"classes/MrfListEntry.html":{}},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"coverage.html":{}}}],["mrfpendingcerfresolver",{"_index":620,"title":{"guards/MrfPendingCerfResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"coverage.html":{}}}],["mrfresolver",{"_index":2189,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["mrfreusestrategy",{"_index":580,"title":{"classes/MrfReuseStrategy.html":{}},"body":{"modules/AppModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["mrfs",{"_index":245,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"interfaces/Response.html":{}}}],["mrfsecretarycomponent",{"_index":529,"title":{"components/MrfSecretaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mrfsecretaryresolver",{"_index":617,"title":{"guards/MrfSecretaryResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"coverage.html":{}}}],["mrfservice",{"_index":2245,"title":{"injectables/MrfService.html":{}},"body":{"injectables/MrfService.html":{},"coverage.html":{}}}],["mrfstate",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["mrftabstate",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["mrfurl",{"_index":822,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["mrfview",{"_index":2310,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["much",{"_index":2366,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["multi",{"_index":812,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"directives/EqualValidator.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["mycerfs",{"_index":629,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mycerfscomponent",{"_index":531,"title":{"components/MyCerfsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["mycerfsresolver",{"_index":614,"title":{"guards/MyCerfsResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{},"coverage.html":{}}}],["nam",{"_index":1597,"title":{},"body":{"components/FAQsComponent.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"index.html":{}}}],["nasty",{"_index":2117,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["nav",{"_index":2044,"title":{},"body":{"components/MrfListComponent.html":{}}}],["navfrommrf",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["navigate",{"_index":2676,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":1951,"title":{},"body":{"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{}}}],["nec",{"_index":1594,"title":{},"body":{"components/FAQsComponent.html":{}}}],["need",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestCache.html":{},"components/TagsDialog.html":{}}}],["neque",{"_index":1587,"title":{},"body":{"components/FAQsComponent.html":{}}}],["nested",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["new",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcerf",{"_index":2311,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["newclub",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["newclub(name",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["newdivision",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["newdivision(name",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["newfocusinput",{"_index":544,"title":{"directives/NewFocusInput.html":{}},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["newlyfocus",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["newmember",{"_index":1170,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"injectables/MemberService.html":{}}}],["newmember(firstname",{"_index":1843,"title":{},"body":{"injectables/MemberService.html":{}}}],["next",{"_index":774,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/SignupComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":796,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(request).pipe(map(event",{"_index":1521,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request).pipe(tap(event",{"_index":802,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["next.handle(request.clone",{"_index":2579,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["nextdcmdate",{"_index":1925,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["nextstate",{"_index":827,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["ng",{"_index":1739,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng_validators",{"_index":1439,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["ngafterviewinit",{"_index":908,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["ngform",{"_index":2329,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["ngmodule",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialsModule.html":{}}}],["ngoninit",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{}}}],["nguyet",{"_index":1201,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["ngx",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nhi",{"_index":1217,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["nibh",{"_index":1563,"title":{},"body":{"components/FAQsComponent.html":{}}}],["nisi",{"_index":1633,"title":{},"body":{"components/FAQsComponent.html":{}}}],["nisl",{"_index":1581,"title":{},"body":{"components/FAQsComponent.html":{}}}],["non",{"_index":1559,"title":{},"body":{"components/FAQsComponent.html":{},"components/TagsDialog.html":{}}}],["non.donec",{"_index":1661,"title":{},"body":{"components/FAQsComponent.html":{}}}],["none",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{},"components/SignupComponent.html":{}}}],["note",{"_index":2129,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["nothing",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["notification",{"_index":941,"title":{},"body":{"components/CerfListComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["notifications_none",{"_index":2037,"title":{},"body":{"components/MrfListComponent.html":{}}}],["november",{"_index":2006,"title":{},"body":{"components/MrfListComponent.html":{}}}],["nowrap",{"_index":1727,"title":{},"body":{"components/LoginComponent.html":{},"components/MrfListComponent.html":{}}}],["npm",{"_index":2658,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"classes/MrfReuseStrategy.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["nulla",{"_index":1574,"title":{},"body":{"components/FAQsComponent.html":{}}}],["numattendees",{"_index":893,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["number",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"components/TagsDialog.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":2588,"title":{},"body":{"classes/User.html":{}}}],["numboard",{"_index":1923,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["numduespaid",{"_index":1898,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["numguests",{"_index":1921,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["numkiwanis",{"_index":1920,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["nummembers",{"_index":1918,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["numnonhomemembers",{"_index":1919,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["nunc",{"_index":1619,"title":{},"body":{"components/FAQsComponent.html":{}}}],["object",{"_index":1104,"title":{},"body":{"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"interfaces/RouteStorageObject.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this.cerf",{"_index":1159,"title":{},"body":{"injectables/CerfService.html":{}}}],["object.assign(this.mrf",{"_index":2302,"title":{},"body":{"injectables/MrfService.html":{}}}],["object.keys(e.errors).length",{"_index":1476,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["objects",{"_index":231,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["observable",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{}}}],["observable|promise|boolean",{"_index":816,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/ExitGuard.html":{},"guards/MrfDeactivateGuard.html":{}}}],["october",{"_index":2005,"title":{},"body":{"components/MrfListComponent.html":{}}}],["odio",{"_index":1622,"title":{},"body":{"components/FAQsComponent.html":{}}}],["of(cachedresponse",{"_index":799,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["of(false",{"_index":270,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["of(new",{"_index":1672,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["of(null",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["of(null).pipe(mergemap",{"_index":1667,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["of(this.roster",{"_index":1855,"title":{},"body":{"injectables/MemberService.html":{}}}],["offered",{"_index":2169,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["officer",{"_index":2591,"title":{},"body":{"classes/User.html":{}}}],["oldest",{"_index":234,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["oldest.format('m",{"_index":242,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["once",{"_index":2514,"title":{},"body":{"components/TagsDialog.html":{}}}],["one",{"_index":1401,"title":{},"body":{"modules/CoreModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["oninit",{"_index":1457,"title":{},"body":{"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["online",{"_index":1717,"title":{},"body":{"components/LoginComponent.html":{},"components/TagsDialog.html":{}}}],["onnoclick",{"_index":1284,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["onto",{"_index":2050,"title":{},"body":{"components/MrfListComponent.html":{}}}],["open_in_new",{"_index":2035,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["opendivision",{"_index":1423,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["opendivision(row",{"_index":1428,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["operation",{"_index":2520,"title":{},"body":{"components/TagsDialog.html":{}}}],["option",{"_index":249,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["optional",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["orci",{"_index":1646,"title":{},"body":{"components/FAQsComponent.html":{}}}],["org",{"_index":892,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["organization",{"_index":2512,"title":{},"body":{"components/TagsDialog.html":{}}}],["ornare",{"_index":1626,"title":{},"body":{"components/FAQsComponent.html":{}}}],["otherwise",{"_index":2227,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["out",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["outlog",{"_index":2409,"title":{},"body":{"components/ProfileComponent.html":{}}}],["overflow",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{}}}],["overlap",{"_index":2593,"title":{},"body":{"classes/User.html":{}}}],["overlay",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["overlaycontainer",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["overlaymodule",{"_index":1393,"title":{},"body":{"modules/CoreModule.html":{}}}],["override",{"_index":1074,"title":{},"body":{"injectables/CerfService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["overridehours",{"_index":851,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["overridehours.foreach((attendee",{"_index":1153,"title":{},"body":{"injectables/CerfService.html":{}}}],["overview",{"_index":2705,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2634,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["pagination",{"_index":910,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["paginator",{"_index":904,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["paid",{"_index":1030,"title":{},"body":{"injectables/CerfService.html":{},"components/TagsDialog.html":{}}}],["pairwise",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["palette",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":1079,"title":{},"body":{"injectables/CerfService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{}}}],["params",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["parentmodule",{"_index":1402,"title":{},"body":{"modules/CoreModule.html":{}}}],["partial",{"_index":896,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{}}}],["party",{"_index":1379,"title":{},"body":{"modules/CoreModule.html":{}}}],["pass",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["pass\").subscribe",{"_index":2402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass).subscribe(res",{"_index":1514,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["password",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["password).pipe(map((res:any",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwords",{"_index":2494,"title":{},"body":{"components/SignupComponent.html":{}}}],["passwordsmatch",{"_index":1498,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["past",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["patch",{"_index":2469,"title":{},"body":{"injectables/RequestCache.html":{}}}],["patches",{"_index":2459,"title":{},"body":{"injectables/RequestCache.html":{}}}],["path",{"_index":628,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["paths",{"_index":2112,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["pattern",{"_index":1756,"title":{},"body":{"classes/Maker.html":{}}}],["pay",{"_index":1296,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/TagsDialog.html":{}}}],["pay_date",{"_index":1210,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["pellentesque",{"_index":1578,"title":{},"body":{"components/FAQsComponent.html":{}}}],["pendingcerfs",{"_index":630,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{}}}],["people",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["permission",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["persist",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["pharetra",{"_index":1585,"title":{},"body":{"components/FAQsComponent.html":{}}}],["phasellus",{"_index":1609,"title":{},"body":{"components/FAQsComponent.html":{}}}],["phone",{"_index":1202,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["picker",{"_index":1398,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":1313,"title":{"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{}},"body":{"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{},"coverage.html":{}}}],["pipe(delay(500",{"_index":1676,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipe(dematerialize",{"_index":1677,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipe(materialize",{"_index":1675,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipes",{"_index":1314,"title":{},"body":{"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1318,"title":{},"body":{"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{}}}],["place",{"_index":1682,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["placerat",{"_index":1616,"title":{},"body":{"components/FAQsComponent.html":{}}}],["pointer",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["porta",{"_index":1657,"title":{},"body":{"components/FAQsComponent.html":{}}}],["portal",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"index.html":{}}}],["porttitor",{"_index":1561,"title":{},"body":{"components/FAQsComponent.html":{}}}],["position",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MyCerfsComponent.html":{}}}],["post",{"_index":1670,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"injectables/RequestCache.html":{}}}],["posuere",{"_index":1617,"title":{},"body":{"components/FAQsComponent.html":{}}}],["predicatable",{"_index":257,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["present",{"_index":2550,"title":{},"body":{"components/TagsDialog.html":{}}}],["presidentattended",{"_index":1924,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["previously",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["primary",{"_index":2066,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["probably",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["prod",{"_index":2685,"title":{},"body":{"index.html":{}}}],["production",{"_index":2687,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["profile.component.css",{"_index":2390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":2391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":533,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":2668,"title":{},"body":{"index.html":{}}}],["promotes",{"_index":2534,"title":{},"body":{"components/TagsDialog.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"classes/User.html":{}}}],["property",{"_index":2214,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{}}}],["pros/cons",{"_index":1097,"title":{},"body":{"injectables/CerfService.html":{}}}],["protractor",{"_index":2696,"title":{},"body":{"index.html":{}}}],["provide",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/EqualValidator.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":791,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["providedin",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/ExitGuard.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["provider",{"_index":1458,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["providers",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"directives/EqualValidator.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["ptp",{"_index":1928,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["public",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"components/InfoDialog.html":{},"classes/Member.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"directives/NewFocusInput.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"classes/User.html":{}}}],["publish",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["purus",{"_index":1549,"title":{},"body":{"components/FAQsComponent.html":{}}}],["push",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["put",{"_index":2125,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{}}}],["put(req",{"_index":2422,"title":{},"body":{"injectables/RequestCache.html":{}}}],["pwa/local",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["quam",{"_index":1586,"title":{},"body":{"components/FAQsComponent.html":{}}}],["queryparams",{"_index":2187,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["quis",{"_index":1545,"title":{},"body":{"components/FAQsComponent.html":{}}}],["quis.maecenas",{"_index":1662,"title":{},"body":{"components/FAQsComponent.html":{}}}],["quisque",{"_index":1605,"title":{},"body":{"components/FAQsComponent.html":{}}}],["radius",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["raised",{"_index":1734,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["raises",{"_index":2544,"title":{},"body":{"components/TagsDialog.html":{}}}],["rawcerf",{"_index":1139,"title":{},"body":{"injectables/CerfService.html":{}}}],["rawcerf.attendees",{"_index":1157,"title":{},"body":{"injectables/CerfService.html":{}}}],["rawcerf.attendees.filter(a",{"_index":1143,"title":{},"body":{"injectables/CerfService.html":{}}}],["rawcerf.overridehours",{"_index":1158,"title":{},"body":{"injectables/CerfService.html":{}}}],["rawmrf",{"_index":2297,"title":{},"body":{"injectables/MrfService.html":{}}}],["rawmrf.boardmeetings.foreach(meeting",{"_index":2301,"title":{},"body":{"injectables/MrfService.html":{}}}],["rawmrf.meetings.foreach(meeting",{"_index":2298,"title":{},"body":{"injectables/MrfService.html":{}}}],["re",{"_index":2455,"title":{},"body":{"injectables/RequestCache.html":{}}}],["reactive",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["reactiveformsmodule",{"_index":1389,"title":{},"body":{"modules/CoreModule.html":{}}}],["read",{"_index":2456,"title":{},"body":{"injectables/RequestCache.html":{}}}],["reading",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["readme",{"_index":2699,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":898,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"components/MrfListComponent.html":{}}}],["reads",{"_index":2454,"title":{},"body":{"injectables/RequestCache.html":{}}}],["recruitment",{"_index":2541,"title":{},"body":{"components/TagsDialog.html":{}}}],["recursively",{"_index":2218,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["red",{"_index":1743,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["red_icon",{"_index":2371,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["redirectto",{"_index":639,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["references",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["reflect",{"_index":1515,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["refresh",{"_index":218,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{}}}],["refreshview",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["regexp('/cerf",{"_index":825,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["regexp('/mrf",{"_index":823,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["registration",{"_index":272,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/ClubAdministrationComponent.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{}}}],["related",{"_index":2519,"title":{},"body":{"components/TagsDialog.html":{}}}],["relative",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":2202,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{}}}],["remember",{"_index":2538,"title":{},"body":{"components/TagsDialog.html":{}}}],["remove",{"_index":977,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{},"injectables/RequestCache.html":{}}}],["removefrommrf",{"_index":1022,"title":{},"body":{"injectables/CerfService.html":{}}}],["removes",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["renderer",{"_index":2383,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["renderer2",{"_index":2327,"title":{},"body":{"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{}}}],["renew_date",{"_index":1211,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["repeatedly",{"_index":2513,"title":{},"body":{"components/TagsDialog.html":{}}}],["replace",{"_index":1195,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["replaysubject",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["report",{"_index":2346,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["reports",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/MyCerfsComponent.html":{}}}],["req",{"_index":2417,"title":{},"body":{"injectables/RequestCache.html":{}}}],["req.url",{"_index":2445,"title":{},"body":{"injectables/RequestCache.html":{}}}],["req.url.indexof(\"/confirm",{"_index":2464,"title":{},"body":{"injectables/RequestCache.html":{}}}],["req.url.split(\"/\").pop",{"_index":2472,"title":{},"body":{"injectables/RequestCache.html":{}}}],["req.url.split(\"/\").splice",{"_index":2465,"title":{},"body":{"injectables/RequestCache.html":{}}}],["req.urlwithparams",{"_index":2439,"title":{},"body":{"injectables/RequestCache.html":{}}}],["request",{"_index":777,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["request.headers.append('content",{"_index":1371,"title":{},"body":{"interceptors/ContentTypeInterceptor.html":{}}}],["request.method",{"_index":1669,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith",{"_index":1668,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.substring(61",{"_index":805,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["requestcache",{"_index":770,"title":{"injectables/RequestCache.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"injectables/RequestCache.html":{},"coverage.html":{}}}],["requests",{"_index":219,"title":{},"body":{"injectables/ApiService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["require",{"_index":2632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["res",{"_index":1265,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/MrfListComponent.html":{},"components/SignupComponent.html":{}}}],["res.error",{"_index":1510,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["res.result",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DivisionsComponent.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{}}}],["res.success",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["res:any",{"_index":1270,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["res['result",{"_index":1002,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["reset",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["resetdata",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/ProfileComponent.html":{},"interfaces/Response.html":{}}}],["resolve",{"_index":609,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/MembersResolver.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"interfaces/RouteStorageObject.html":{}}}],["resolve(route",{"_index":997,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/MembersResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["resolveddata",{"_index":1942,"title":{},"body":{"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{}}}],["resolver",{"_index":1953,"title":{},"body":{"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{}}}],["resolver.guard",{"_index":613,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolver.guard.ts",{"_index":994,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/MembersResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"coverage.html":{}}}],["resolver.guard.ts:10",{"_index":2243,"title":{},"body":{"guards/MrfSecretaryResolver.html":{}}}],["resolver.guard.ts:11",{"_index":1348,"title":{},"body":{"guards/ClubsResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["resolver.guard.ts:12",{"_index":1887,"title":{},"body":{"guards/MembersResolver.html":{}}}],["resolver.guard.ts:13",{"_index":2244,"title":{},"body":{"guards/MrfSecretaryResolver.html":{}}}],["resolver.guard.ts:14",{"_index":1349,"title":{},"body":{"guards/ClubsResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["resolver.guard.ts:15",{"_index":1888,"title":{},"body":{"guards/MembersResolver.html":{}}}],["resolver.guard.ts:20",{"_index":2090,"title":{},"body":{"guards/MrfPendingCerfResolver.html":{}}}],["resolver.guard.ts:23",{"_index":2091,"title":{},"body":{"guards/MrfPendingCerfResolver.html":{}}}],["resolver.guard.ts:29",{"_index":996,"title":{},"body":{"guards/CerfNavResolver.html":{}}}],["resolver.guard.ts:32",{"_index":998,"title":{},"body":{"guards/CerfNavResolver.html":{}}}],["resolver.guard.ts:35",{"_index":1964,"title":{},"body":{"guards/MrfDivisionResolver.html":{}}}],["resolver.guard.ts:38",{"_index":1965,"title":{},"body":{"guards/MrfDivisionResolver.html":{}}}],["resolver.guard.ts:43",{"_index":1949,"title":{},"body":{"guards/MrfDistrictResolver.html":{}}}],["resolver.guard.ts:46",{"_index":1950,"title":{},"body":{"guards/MrfDistrictResolver.html":{}}}],["respective",{"_index":2571,"title":{},"body":{"components/TagsDialog.html":{}}}],["response",{"_index":135,"title":{"interfaces/Response.html":{}},"body":{"injectables/ApiService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["response.mycerfs",{"_index":2333,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["response.result",{"_index":1087,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MemberService.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{}}}],["response.result.map(member",{"_index":1861,"title":{},"body":{"injectables/MemberService.html":{}}}],["response.success",{"_index":1859,"title":{},"body":{"injectables/MemberService.html":{}}}],["result",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.lastname).subscribe(res",{"_index":1260,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["results",{"_index":282,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":2099,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["retrieve(route",{"_index":2143,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["retrieving",{"_index":1005,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["return",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/Maker.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["returned",{"_index":2228,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["returning",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["returns",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["reused",{"_index":2154,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["reverse",{"_index":1443,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["rgb(176",{"_index":2372,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["rgba(0",{"_index":2061,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["rhoncus",{"_index":1613,"title":{},"body":{"components/FAQsComponent.html":{}}}],["right",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"components/SignupComponent.html":{}}}],["risus",{"_index":1591,"title":{},"body":{"components/FAQsComponent.html":{}}}],["root",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/ExitGuard.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["root'},{'name",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["roster",{"_index":1291,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"classes/Member.html":{},"injectables/MemberService.html":{}}}],["route",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.params",{"_index":2183,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.queryparams",{"_index":2185,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.routeconfig",{"_index":2180,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.routeconfig.path",{"_index":2113,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routeconfig",{"_index":2188,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routed",{"_index":1408,"title":{},"body":{"modules/CoreModule.html":{}}}],["router",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"directives/EqualValidator.html":{},"guards/ExitGuard.html":{},"components/LoginComponent.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"components/ProfileComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["router.navigate(['/login",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routereusestrategy",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routermodule",{"_index":607,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":640,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerreusestrategy",{"_index":250,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["routerstatesnapshot",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CanComponentDeactivate-1.html":{},"guards/CerfNavResolver.html":{},"guards/ClubsResolver.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["routes",{"_index":608,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"overview.html":{},"routes.html":{}}}],["routesrecognized",{"_index":999,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["routestorageobject",{"_index":2172,"title":{"interfaces/RouteStorageObject.html":{}},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["routestorageobjects",{"_index":2109,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routestostore",{"_index":2095,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routing",{"_index":255,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["routing.module",{"_index":1387,"title":{},"body":{"modules/CoreModule.html":{}}}],["routing.module.ts",{"_index":606,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":920,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["row):hover",{"_index":1309,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row._id",{"_index":985,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["row._id)]['code']=res.result",{"_index":1273,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["row.access",{"_index":1300,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row.alumni",{"_index":1298,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row.cerf_author",{"_index":2351,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["row.chair_id",{"_index":2347,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["row.club_id",{"_index":1299,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{}}}],["row.email",{"_index":1295,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row.labels",{"_index":2360,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["row.name",{"_index":1294,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["row.pay_date",{"_index":1297,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row.position",{"_index":1302,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row.time.start",{"_index":2348,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["row.year",{"_index":1303,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{}}}],["row::after",{"_index":2079,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["row:hover",{"_index":2060,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["row:hover::after",{"_index":2378,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["row:not(.member",{"_index":1307,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["row:nth",{"_index":2075,"title":{},"body":{"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["run",{"_index":2673,"title":{},"body":{"index.html":{}}}],["running",{"_index":2688,"title":{},"body":{"index.html":{}}}],["rutrum",{"_index":1647,"title":{},"body":{"components/FAQsComponent.html":{}}}],["rxjs",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/CerfListComponent.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"guards/ClubsResolver.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"guards/ClubsResolver.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"guards/MyCerfsResolver.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["safehtml",{"_index":1692,"title":{},"body":{"components/InfoDialog.html":{}}}],["same",{"_index":2141,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["sans",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["sapien",{"_index":1584,"title":{},"body":{"components/FAQsComponent.html":{}}}],["save",{"_index":253,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["savemrf",{"_index":2096,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["scaffolding",{"_index":2679,"title":{},"body":{"index.html":{}}}],["scaley(0",{"_index":2376,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["scaley(1",{"_index":2379,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["scelerisque",{"_index":1556,"title":{},"body":{"components/FAQsComponent.html":{}}}],["schemelessurl",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1486,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["school's",{"_index":2509,"title":{},"body":{"components/TagsDialog.html":{}}}],["school\\'s",{"_index":2574,"title":{},"body":{"components/TagsDialog.html":{}}}],["se",{"_index":2533,"title":{},"body":{"components/TagsDialog.html":{}}}],["search",{"_index":986,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["searchmember",{"_index":1826,"title":{},"body":{"injectables/MemberService.html":{}}}],["searchmember(value",{"_index":1845,"title":{},"body":{"injectables/MemberService.html":{}}}],["secretary",{"_index":275,"title":{},"body":{"injectables/ApiService.html":{},"components/MrfSecretaryComponent.html":{},"interfaces/Response.html":{},"classes/User.html":{}}}],["secretary'},{'name",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["secretary.component.css",{"_index":2236,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["secretary.component.css,./_mrf",{"_index":2232,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["secretary.component.html",{"_index":2234,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["secretary.component.scss",{"_index":2233,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["secretary.component.ts",{"_index":2231,"title":{},"body":{"components/MrfSecretaryComponent.html":{},"coverage.html":{}}}],["secretary.component.ts:12",{"_index":2235,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["secretary/mrf",{"_index":2230,"title":{},"body":{"components/MrfSecretaryComponent.html":{},"coverage.html":{}}}],["sed",{"_index":1544,"title":{},"body":{"components/FAQsComponent.html":{}}}],["see",{"_index":2080,"title":{},"body":{"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["selecting",{"_index":1306,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["selector",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["self",{"_index":1464,"title":{},"body":{"directives/EqualValidator.html":{},"components/MrfListComponent.html":{},"components/SignupComponent.html":{}}}],["sem",{"_index":1625,"title":{},"body":{"components/FAQsComponent.html":{}}}],["semper",{"_index":1573,"title":{},"body":{"components/FAQsComponent.html":{}}}],["sendcredentials",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendcredentials(email",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendrequest",{"_index":769,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["sendrequest(request",{"_index":778,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["separate",{"_index":2057,"title":{},"body":{"components/MrfListComponent.html":{}}}],["september",{"_index":2004,"title":{},"body":{"components/MrfListComponent.html":{}}}],["serif",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":2674,"title":{},"body":{"index.html":{}}}],["server",{"_index":2672,"title":{},"body":{"index.html":{}}}],["service",{"_index":878,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"modules/CoreModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"components/TagsDialog.html":{},"miscellaneous/variables.html":{}}}],["service's",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["services",{"_index":1385,"title":{},"body":{"modules/CoreModule.html":{}}}],["serving",{"_index":2505,"title":{},"body":{"components/TagsDialog.html":{}}}],["setcerf",{"_index":1023,"title":{},"body":{"injectables/CerfService.html":{}}}],["setcerf(cerf",{"_index":1057,"title":{},"body":{"injectables/CerfService.html":{}}}],["setcerffromform(cerf",{"_index":1107,"title":{},"body":{"injectables/CerfService.html":{}}}],["setdatacorrect(x",{"_index":1495,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["setmrf",{"_index":2251,"title":{},"body":{"injectables/MrfService.html":{}}}],["setmrf(mrf",{"_index":2261,"title":{},"body":{"injectables/MrfService.html":{}}}],["setmrfstate",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["setmrfstate(component",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["setters",{"_index":1108,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["settings",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["settings.component.css",{"_index":2478,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.css,./_settings.component.scss",{"_index":2474,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":2475,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":535,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["sheet",{"_index":2046,"title":{},"body":{"components/MrfListComponent.html":{}}}],["shouldattach",{"_index":2100,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["shouldattach(route",{"_index":2146,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["shoulddetach",{"_index":2101,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["shoulddetach(route",{"_index":2148,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["shouldreuseroute",{"_index":2102,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["shouldreuseroute(curr",{"_index":2150,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["show",{"_index":2032,"title":{},"body":{"components/MrfListComponent.html":{}}}],["showclubs",{"_index":1975,"title":{},"body":{"components/MrfListComponent.html":{}}}],["showclubs(row",{"_index":1982,"title":{},"body":{"components/MrfListComponent.html":{}}}],["showdivisions",{"_index":1976,"title":{},"body":{"components/MrfListComponent.html":{}}}],["side",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"injectables/CerfService.html":{}}}],["sidenav",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["signin",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["signup",{"_index":637,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["signup(code",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefined",{"_index":2484,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup({value",{"_index":1501,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":1480,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["signup.component.css,./_signup.component.scss",{"_index":2480,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":1479,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":537,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":229,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["sit",{"_index":1539,"title":{},"body":{"components/FAQsComponent.html":{}}}],["size",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["skipself",{"_index":1381,"title":{},"body":{"modules/CoreModule.html":{}}}],["sms_failed",{"_index":2354,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["snackbar",{"_index":1174,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["snapshot",{"_index":2173,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["social",{"_index":2530,"title":{},"body":{"components/TagsDialog.html":{}}}],["socially",{"_index":2531,"title":{},"body":{"components/TagsDialog.html":{}}}],["solid",{"_index":2374,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["sollicitudin",{"_index":1606,"title":{},"body":{"components/FAQsComponent.html":{}}}],["someone",{"_index":2124,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["something",{"_index":1207,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["sort",{"_index":905,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"modules/CoreModule.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"components/FAQsComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"modules/MaterialsModule.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"index.html":{}}}],["space",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["span",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/MyCerfsComponent.html":{}}}],["spec\\.ts",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":214,"title":{},"body":{"injectables/ApiService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["specific",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{},"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["specified",{"_index":958,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["split",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"interfaces/Response.html":{}}}],["src/.../api_config.ts",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cerf.component.ts",{"_index":2713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../clubs.component.ts",{"_index":2714,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../divisions.component.ts",{"_index":2715,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fake",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/authentication/auth.service.ts",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/auth.service.ts:17",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:19",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:20",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:22",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:30",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:42",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:46",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:62",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:68",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:78",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:87",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:91",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/auth.service.ts:95",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/core.module.ts",{"_index":1377,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:10",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:15",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/cerf",{"_index":993,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{},"coverage.html":{}}}],["src/app/core/guards/clubs",{"_index":1347,"title":{},"body":{"guards/ClubsResolver.html":{},"coverage.html":{}}}],["src/app/core/guards/exit.guard.ts",{"_index":815,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/ExitGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/exit.guard.ts:11",{"_index":1528,"title":{},"body":{"guards/ExitGuard.html":{}}}],["src/app/core/guards/members",{"_index":1886,"title":{},"body":{"guards/MembersResolver.html":{},"coverage.html":{}}}],["src/app/core/guards/mrf",{"_index":820,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"coverage.html":{}}}],["src/app/core/guards/reuse",{"_index":2092,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["src/app/core/http",{"_index":765,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ContentTypeInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/cerf.model.ts",{"_index":836,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"coverage.html":{}}}],["src/app/core/models/cerf.model.ts:10",{"_index":875,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:11",{"_index":859,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:12",{"_index":861,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:13",{"_index":870,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:14",{"_index":864,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:15",{"_index":874,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:16",{"_index":858,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:17",{"_index":868,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:22",{"_index":872,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:28",{"_index":867,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:3",{"_index":856,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:33",{"_index":866,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:38",{"_index":863,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:44",{"_index":869,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:48",{"_index":860,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:49",{"_index":873,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:53",{"_index":987,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:55",{"_index":988,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:56",{"_index":990,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:57",{"_index":991,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:58",{"_index":992,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:59",{"_index":989,"title":{},"body":{"classes/CerfListEntry.html":{}}}],["src/app/core/models/cerf.model.ts:6",{"_index":857,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:7",{"_index":871,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:8",{"_index":862,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/cerf.model.ts:9",{"_index":865,"title":{},"body":{"classes/Cerf.html":{}}}],["src/app/core/models/index.ts",{"_index":1745,"title":{},"body":{"classes/Maker.html":{},"coverage.html":{}}}],["src/app/core/models/index.ts:15",{"_index":1749,"title":{},"body":{"classes/Maker.html":{}}}],["src/app/core/models/member.model.ts",{"_index":1805,"title":{},"body":{"classes/Member.html":{},"coverage.html":{}}}],["src/app/core/models/member.model.ts:10",{"_index":1811,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:2",{"_index":1807,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:4",{"_index":1808,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:5",{"_index":1814,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:6",{"_index":1813,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:7",{"_index":1810,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:8",{"_index":1812,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/member.model.ts:9",{"_index":1809,"title":{},"body":{"classes/Member.html":{}}}],["src/app/core/models/mrf.model.ts",{"_index":1890,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"coverage.html":{}}}],["src/app/core/models/mrf.model.ts:10",{"_index":1915,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:11",{"_index":1916,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:12",{"_index":1914,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:13",{"_index":1907,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:14",{"_index":1910,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:15",{"_index":1909,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:16",{"_index":1912,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:18",{"_index":1902,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:19",{"_index":1905,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:20",{"_index":1904,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:21",{"_index":1908,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:22",{"_index":1911,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:26",{"_index":2083,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:28",{"_index":2084,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:29",{"_index":2086,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:3",{"_index":1900,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:30",{"_index":2087,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:31",{"_index":2089,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:32",{"_index":2085,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:33",{"_index":2088,"title":{},"body":{"classes/MrfListEntry.html":{}}}],["src/app/core/models/mrf.model.ts:5",{"_index":1901,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:6",{"_index":1903,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:7",{"_index":1906,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:8",{"_index":1917,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/mrf.model.ts:9",{"_index":1913,"title":{},"body":{"classes/Mrf.html":{}}}],["src/app/core/models/user.model.ts",{"_index":2582,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts:3",{"_index":2584,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/user.model.ts:4",{"_index":2585,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/models/user.model.ts:5",{"_index":2586,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["src/app/core/services/api.service.ts:100",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:104",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:114",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:120",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:126",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:133",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:140",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:145",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:150",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:156",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:160",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:164",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:171",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:177",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:182",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:22",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:28",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:30",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:31",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:32",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:34",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:40",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:43",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:48",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:55",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:60",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:66",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:80",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:88",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/cerf.service.ts",{"_index":1010,"title":{},"body":{"injectables/CerfService.html":{},"coverage.html":{}}}],["src/app/core/services/cerf.service.ts:100",{"_index":1032,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:104",{"_index":1056,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:108",{"_index":1031,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:11",{"_index":1061,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:115",{"_index":1035,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:12",{"_index":1062,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:13",{"_index":1028,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:136",{"_index":1055,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:140",{"_index":1044,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:20",{"_index":1033,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:46",{"_index":1047,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:56",{"_index":1039,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:60",{"_index":1040,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:64",{"_index":1041,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:68",{"_index":1042,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:77",{"_index":1058,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:87",{"_index":1038,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:92",{"_index":1059,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/cerf.service.ts:96",{"_index":1060,"title":{},"body":{"injectables/CerfService.html":{}}}],["src/app/core/services/member.service.ts",{"_index":1819,"title":{},"body":{"injectables/MemberService.html":{},"coverage.html":{}}}],["src/app/core/services/member.service.ts:11",{"_index":1827,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:17",{"_index":1830,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:34",{"_index":1829,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:50",{"_index":1846,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:60",{"_index":1832,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:70",{"_index":1844,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:77",{"_index":1834,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:88",{"_index":1836,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/member.service.ts:93",{"_index":1840,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/core/services/mrf.service.ts",{"_index":2246,"title":{},"body":{"injectables/MrfService.html":{},"coverage.html":{}}}],["src/app/core/services/mrf.service.ts:13",{"_index":2263,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:14",{"_index":2264,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:15",{"_index":2252,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:22",{"_index":2260,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:29",{"_index":2254,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:33",{"_index":2255,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:37",{"_index":2256,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:45",{"_index":2262,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:53",{"_index":2253,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/services/mrf.service.ts:76",{"_index":2258,"title":{},"body":{"injectables/MrfService.html":{}}}],["src/app/core/utils/clubid.pipe.ts",{"_index":1315,"title":{},"body":{"pipes/ClubIDPipe.html":{},"coverage.html":{}}}],["src/app/core/utils/clubid.pipe.ts:9",{"_index":1317,"title":{},"body":{"pipes/ClubIDPipe.html":{}}}],["src/app/core/utils/divisionid.pipe.ts",{"_index":1417,"title":{},"body":{"pipes/DivisionIDPipe.html":{},"coverage.html":{}}}],["src/app/core/utils/divisionid.pipe.ts:9",{"_index":1418,"title":{},"body":{"pipes/DivisionIDPipe.html":{}}}],["src/app/core/utils/memberid.pipe.ts",{"_index":1815,"title":{},"body":{"pipes/MemberIDPipe.html":{},"coverage.html":{}}}],["src/app/core/utils/memberid.pipe.ts:9",{"_index":1817,"title":{},"body":{"pipes/MemberIDPipe.html":{}}}],["src/app/core/utils/newfocusinput.ts",{"_index":2382,"title":{},"body":{"directives/NewFocusInput.html":{},"coverage.html":{}}}],["src/app/core/utils/newfocusinput.ts:6",{"_index":2385,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["src/app/core/utils/newfocusinput.ts:7",{"_index":2387,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["src/app/core/utils/newfocusinput.ts:9",{"_index":2386,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["src/app/core/utils/request",{"_index":2410,"title":{},"body":{"injectables/RequestCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/administration/administration.component.ts",{"_index":1161,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"coverage.html":{}}}],["src/app/modules/administration/administration.component.ts:110",{"_index":1176,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:121",{"_index":1186,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:126",{"_index":1185,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:131",{"_index":1177,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:137",{"_index":1187,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:144",{"_index":1183,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:149",{"_index":1184,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:162",{"_index":1179,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:167",{"_index":1181,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:195",{"_index":1416,"title":{},"body":{"components/DialogNewMember.html":{}}}],["src/app/modules/administration/administration.component.ts:196",{"_index":1413,"title":{},"body":{"components/DialogNewMember.html":{}}}],["src/app/modules/administration/administration.component.ts:198",{"_index":1415,"title":{},"body":{"components/DialogNewMember.html":{}}}],["src/app/modules/administration/administration.component.ts:202",{"_index":1414,"title":{},"body":{"components/DialogNewMember.html":{}}}],["src/app/modules/administration/administration.component.ts:29",{"_index":1194,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:30",{"_index":1188,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:32",{"_index":1221,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:33",{"_index":1222,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:34",{"_index":1192,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:35",{"_index":1190,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:37",{"_index":1193,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:38",{"_index":1191,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/administration/administration.component.ts:40",{"_index":1220,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["src/app/modules/app",{"_index":605,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/modules/cerf/cerf.component.ts",{"_index":2620,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/cerf/tags",{"_index":2499,"title":{},"body":{"components/TagsDialog.html":{},"coverage.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts",{"_index":899,"title":{},"body":{"components/CerfListComponent.html":{},"coverage.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:16",{"_index":924,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:17",{"_index":926,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:19",{"_index":930,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:20",{"_index":933,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:22",{"_index":914,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:23",{"_index":913,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:24",{"_index":912,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:47",{"_index":922,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:56",{"_index":921,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:73",{"_index":916,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/cerflist/cerflist.component.ts:81",{"_index":919,"title":{},"body":{"components/CerfListComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts",{"_index":1320,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/clubs/clubs.component.ts:20",{"_index":1328,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:21",{"_index":1330,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:22",{"_index":1329,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:24",{"_index":1323,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:33",{"_index":1326,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:37",{"_index":1325,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:40",{"_index":1327,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:47",{"_index":1324,"title":{},"body":{"components/ClubsComponent.html":{}}}],["src/app/modules/clubs/clubs.component.ts:67",{"_index":1410,"title":{},"body":{"components/DialogNewClub.html":{}}}],["src/app/modules/clubs/clubs.component.ts:69",{"_index":1412,"title":{},"body":{"components/DialogNewClub.html":{}}}],["src/app/modules/clubs/clubs.component.ts:73",{"_index":1411,"title":{},"body":{"components/DialogNewClub.html":{}}}],["src/app/modules/confirm",{"_index":1352,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["src/app/modules/divisions/divisions.component.ts",{"_index":1420,"title":{},"body":{"components/DivisionsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/divisions/divisions.component.ts:23",{"_index":1430,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:24",{"_index":1431,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:25",{"_index":1424,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:34",{"_index":1427,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:38",{"_index":1426,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:42",{"_index":1425,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/divisions/divisions.component.ts:47",{"_index":1429,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["src/app/modules/faqs/faqs.component.ts",{"_index":1529,"title":{},"body":{"components/FAQsComponent.html":{},"coverage.html":{}}}],["src/app/modules/faqs/faqs.component.ts:12",{"_index":1533,"title":{},"body":{"components/FAQsComponent.html":{}}}],["src/app/modules/faqs/faqs.component.ts:8",{"_index":1532,"title":{},"body":{"components/FAQsComponent.html":{}}}],["src/app/modules/info",{"_index":1685,"title":{},"body":{"components/InfoDialog.html":{},"coverage.html":{}}}],["src/app/modules/login/login.component.ts",{"_index":1694,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/login/login.component.ts:11",{"_index":1699,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:16",{"_index":1704,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:17",{"_index":1703,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:18",{"_index":1705,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:20",{"_index":1700,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:24",{"_index":1702,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/materials.module.ts",{"_index":1783,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["src/app/modules/mrf",{"_index":1936,"title":{},"body":{"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfSecretaryComponent.html":{},"coverage.html":{}}}],["src/app/modules/mrf/mrf.component.ts",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts",{"_index":1966,"title":{},"body":{"components/MrfListComponent.html":{},"coverage.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:17",{"_index":1989,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:19",{"_index":1990,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:20",{"_index":1996,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:22",{"_index":2008,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:23",{"_index":1985,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:24",{"_index":1993,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:25",{"_index":1992,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:26",{"_index":1995,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:27",{"_index":1988,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:28",{"_index":1987,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:30",{"_index":1994,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:31",{"_index":1986,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:33",{"_index":2009,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:34",{"_index":2010,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:36",{"_index":1978,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:38",{"_index":1977,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:63",{"_index":1981,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:69",{"_index":1980,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:74",{"_index":1979,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:80",{"_index":1984,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/mrflist/mrflist.component.ts:84",{"_index":1983,"title":{},"body":{"components/MrfListComponent.html":{}}}],["src/app/modules/my",{"_index":2304,"title":{},"body":{"components/MyCerfsComponent.html":{},"coverage.html":{}}}],["src/app/modules/profile/profile.component.ts",{"_index":2389,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/modules/profile/profile.component.ts:11",{"_index":2392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/profile/profile.component.ts:15",{"_index":2397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/profile/profile.component.ts:16",{"_index":2396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/profile/profile.component.ts:18",{"_index":2394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/profile/profile.component.ts:22",{"_index":2393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/profile/profile.component.ts:37",{"_index":2395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2473,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/modules/settings/settings.component.ts:12",{"_index":2477,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:8",{"_index":2476,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/signup/signup.component.ts",{"_index":1437,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/modules/signup/signup.component.ts:17",{"_index":1448,"title":{},"body":{"directives/EqualValidator.html":{}}}],["src/app/modules/signup/signup.component.ts:18",{"_index":1453,"title":{},"body":{"directives/EqualValidator.html":{}}}],["src/app/modules/signup/signup.component.ts:19",{"_index":1456,"title":{},"body":{"directives/EqualValidator.html":{}}}],["src/app/modules/signup/signup.component.ts:23",{"_index":1450,"title":{},"body":{"directives/EqualValidator.html":{}}}],["src/app/modules/signup/signup.component.ts:51",{"_index":2481,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:55",{"_index":2488,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:56",{"_index":2486,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:57",{"_index":2491,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:58",{"_index":2487,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:59",{"_index":2489,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:60",{"_index":2490,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:63",{"_index":2482,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:91",{"_index":2483,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/signup/signup.component.ts:95",{"_index":2485,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/environments/api_config.ts",{"_index":2626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":876,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["started",{"_index":2667,"title":{"index.html":{}},"body":{}}],["state",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"components/ClubAdministrationComponent.html":{},"guards/ClubsResolver.html":{},"components/DialogNewMember.html":{},"guards/MembersResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["state('collapsed",{"_index":1231,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["state('expanded",{"_index":1235,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["state.url",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url=='/signup",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1746,"title":{},"body":{"classes/Maker.html":{},"components/MrfListComponent.html":{}}}],["status",{"_index":852,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{}}}],["stop",{"_index":1852,"title":{},"body":{"injectables/MemberService.html":{},"components/MyCerfsComponent.html":{}}}],["storage",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["store",{"_index":2103,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["store(route",{"_index":2160,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["stored",{"_index":2171,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{}}}],["storedroute",{"_index":2176,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["storedroutes",{"_index":2097,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["storedroutes.snapshot",{"_index":2186,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["strategy",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["strategy.ts",{"_index":2093,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["strategy.ts:107",{"_index":2116,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:20",{"_index":2108,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:22",{"_index":2106,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:24",{"_index":2107,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:25",{"_index":2105,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:27",{"_index":2149,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:33",{"_index":2162,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:38",{"_index":2147,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:62",{"_index":2163,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:66",{"_index":2144,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strategy.ts:78",{"_index":2152,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["strengths",{"_index":889,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["strict",{"_index":2134,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["string",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/InfoDialog.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":1526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["style",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{}}}],["style({height",{"_index":1232,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["styles",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{}}}],["subcomponents",{"_index":1100,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["submissiontime",{"_index":1899,"title":{},"body":{"classes/Mrf.html":{},"classes/MrfListEntry.html":{},"injectables/MrfService.html":{}}}],["submit",{"_index":222,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/LoginComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["submit/confirm",{"_index":2462,"title":{},"body":{"injectables/RequestCache.html":{}}}],["submitcerf",{"_index":1024,"title":{},"body":{"injectables/CerfService.html":{}}}],["submitdone",{"_index":2496,"title":{},"body":{"components/SignupComponent.html":{}}}],["submitlogin",{"_index":1698,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitlogin(undefined",{"_index":1701,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitlogin({value",{"_index":1708,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitted",{"_index":2355,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["success",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/MrfListComponent.html":{},"interfaces/Response.html":{}}}],["summary",{"_index":888,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["support",{"_index":2700,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1399,"title":{},"body":{"modules/CoreModule.html":{}}}],["suscipit",{"_index":1602,"title":{},"body":{"components/FAQsComponent.html":{}}}],["suspendisse",{"_index":1568,"title":{},"body":{"components/FAQsComponent.html":{}}}],["svg",{"_index":2701,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":968,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["switch(typeof",{"_index":2216,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["sync",{"_index":1110,"title":{},"body":{"injectables/CerfService.html":{}}}],["t",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{},"classes/Maker.html":{},"interfaces/Response.html":{}}}],["tab",{"_index":2054,"title":{},"body":{"components/MrfListComponent.html":{}}}],["table",{"_index":2064,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{},"coverage.html":{}}}],["table_cell",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2043,"title":{},"body":{"components/MrfListComponent.html":{}}}],["tag",{"_index":2502,"title":{},"body":{"components/TagsDialog.html":{}}}],["tagged",{"_index":2521,"title":{},"body":{"components/TagsDialog.html":{}}}],["tags",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["tagsdialog",{"_index":539,"title":{"components/TagsDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"coverage.html":{},"overview.html":{}}}],["take",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CerfNavResolver.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["taking",{"_index":2365,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["tap",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"injectables/MemberService.html":{},"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"guards/MyCerfsResolver.html":{},"interfaces/Response.html":{}}}],["tap(res",{"_index":1006,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["technology",{"_index":1213,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["tells",{"_index":2136,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["tellus",{"_index":1639,"title":{},"body":{"components/FAQsComponent.html":{}}}],["template",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["templateurl",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["tempor",{"_index":1610,"title":{},"body":{"components/FAQsComponent.html":{}}}],["tempus",{"_index":1649,"title":{},"body":{"components/FAQsComponent.html":{}}}],["test",{"_index":2691,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2690,"title":{},"body":{"index.html":{}}}],["text",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["text:'event",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["text:'monthly",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["theme",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["theme($theme",{"_index":2065,"title":{},"body":{"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["there's",{"_index":961,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["thing",{"_index":2128,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.apiservice.addmember(firstname",{"_index":1877,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.changecerfstatus(this.cerf._id",{"_index":1112,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.apiservice.createnewcerf(this.getcerffromform(this.cerfform.value",{"_index":1091,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.apiservice.deletecerf(this.cerf._id",{"_index":1111,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.apiservice.deletemrfstate",{"_index":834,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["this.apiservice.fetchmembers().pipe(map(response",{"_index":1856,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.getcerf(id).pipe(tap(response",{"_index":1085,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.apiservice.getclubs().pipe(map(res",{"_index":1350,"title":{},"body":{"guards/ClubsResolver.html":{}}}],["this.apiservice.getclubs().subscribe(res",{"_index":1341,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.apiservice.getclubs(row._id).subscribe",{"_index":2029,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.apiservice.getclubs(this.division).subscribe",{"_index":1335,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.apiservice.getdivisions().subscribe",{"_index":1434,"title":{},"body":{"components/DivisionsComponent.html":{}}}],["this.apiservice.getmembercode(_id).pipe(map(res",{"_index":1881,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.getmrfbydate(year",{"_index":2266,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.apiservice.getmrflist",{"_index":1952,"title":{},"body":{"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{}}}],["this.apiservice.getmycerflist().pipe(map(res",{"_index":1000,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["this.apiservice.getpendingcerfs().pipe(map(response",{"_index":1954,"title":{},"body":{"guards/MrfDistrictResolver.html":{},"guards/MrfDivisionResolver.html":{},"guards/MrfPendingCerfResolver.html":{},"guards/MrfSecretaryResolver.html":{}}}],["this.apiservice.newclub(result.name).subscribe(res",{"_index":1344,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.apiservice.routemrf",{"_index":1007,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["this.apiservice.setmrfstate(component",{"_index":831,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["this.apiservice.updatecerf(this.getcerffromform(this.cerfform.value",{"_index":1092,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.apiservice.updatemrf(this.getmrffromform(this.mrfform.value)).pipe(tap(response",{"_index":2270,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.auth.getuser",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.auth.getuser().club_id",{"_index":1247,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["this.auth.getuser().division_id",{"_index":1334,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.auth.getuser().subscribe(user",{"_index":2403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.getuserobservable",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.getuserobservable().subscribe(user",{"_index":2398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.login(\"user",{"_index":2401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.login(value.email",{"_index":1713,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.logout",{"_index":2399,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.signup(code",{"_index":1513,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.auth.signup(value.code",{"_index":1505,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.authlinks",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[0",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[1",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[2",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[3",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[4",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[5",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[6",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authlinks.push(this.links[7",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getuser",{"_index":2265,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.authservice.getuserobservable().subscribe(user",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.builder.array(model.attendees.map(eachattendee",{"_index":1127,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.array(model.boardmeetings.map(eachboardmeeting",{"_index":2286,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.array(model.categories",{"_index":1133,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.array(model.drivers.map(eachdriver",{"_index":1135,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.array(model.events.map(eachevent",{"_index":2275,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.array(model.fundraising.map(eachfundraising",{"_index":2289,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.array(model.goals",{"_index":2277,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.array(model.kfamattendance.map(eachkfam",{"_index":1137,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.array(model.meetings.map(eachmeeting",{"_index":2279,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.array(model.overridehours.map(eachoverride",{"_index":1130,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.array(model.tags",{"_index":1126,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.control(model.club_id",{"_index":2293,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.kfamreport",{"_index":2278,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.month",{"_index":2291,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.numduespaid",{"_index":2294,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.status",{"_index":2295,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.submissiontime",{"_index":2296,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(model.year",{"_index":2292,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(moment(eachboardmeeting.date).format(\"mm",{"_index":2287,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.control(moment(eachmeeting.date).format(\"mm",{"_index":2281,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group",{"_index":1115,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["this.builder.group(eachattendee",{"_index":1128,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(eachboardmeeting.attendance",{"_index":2288,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(eachdriver",{"_index":1136,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(eachevent",{"_index":2276,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(eachfundraising",{"_index":2290,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(eachkfam",{"_index":1138,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(eachmeeting.advisorattended",{"_index":2285,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(eachmeeting.attendance",{"_index":2284,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(eachoverride",{"_index":1131,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(model.comments",{"_index":1134,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(model.communications",{"_index":2273,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(model.dcm",{"_index":2274,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.builder.group(model.fundraised",{"_index":1132,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(model.hoursperattendee",{"_index":1129,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group(model.time",{"_index":1123,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.builder.group({date",{"_index":2280,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.cache",{"_index":801,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cache.clear",{"_index":2434,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cache.delete(httpconfig.baseurl",{"_index":2466,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cache.delete(req.url",{"_index":2460,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cache.dirtywrite(request",{"_index":795,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cache.foreach(expiredentry",{"_index":2451,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cache.get(request",{"_index":798,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cache.get(url",{"_index":2440,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cache.set(url",{"_index":2449,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.cerf",{"_index":1086,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.cerfform.next(this.createreactiveform(this.blankcerf",{"_index":1090,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.cerfform.next(this.createreactiveform(this.cerf",{"_index":1089,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.cerfform.value",{"_index":1094,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.cerflist.length",{"_index":957,"title":{},"body":{"components/CerfListComponent.html":{}}}],["this.cerfs",{"_index":2334,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.cerfs.concat(this.route.snapshot.data['pendingcerfs",{"_index":2336,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.cerfs.length",{"_index":2339,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.cerfurl.test(nextstate.url",{"_index":830,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["this.club",{"_index":1246,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{}}}],["this.clubs",{"_index":1336,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/MrfListComponent.html":{}}}],["this.clubs=res",{"_index":1342,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.compareobjects(base[baseproperty",{"_index":2221,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.compareobjects(route.params",{"_index":2192,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.compareobjects(route.queryparams",{"_index":2194,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.confirmpassword",{"_index":1500,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.currentdivision",{"_index":2028,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.currentmember",{"_index":2431,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.currentmember._id",{"_index":2433,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.currenttab",{"_index":2023,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.datacorrect",{"_index":1491,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.dataservice.addcerftomrf(cerf",{"_index":2344,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.dataservice.logoutdata",{"_index":2400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dataservice.resetdata",{"_index":2405,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dialog.open(dialognewclub",{"_index":1343,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["this.dialog.open(dialognewmember",{"_index":1255,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.dialogref.close",{"_index":1285,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/InfoDialog.html":{},"components/TagsDialog.html":{}}}],["this.displayedcolumns",{"_index":2025,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.displayedcolumns.concat(this.display",{"_index":2027,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.displayedcolumns.splice(2",{"_index":952,"title":{},"body":{"components/CerfListComponent.html":{}}}],["this.division",{"_index":1333,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.divisions",{"_index":1435,"title":{},"body":{"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{}}}],["this.error",{"_index":1509,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.extralist",{"_index":2014,"title":{},"body":{"components/MrfListComponent.html":{}}}],["this.filldefaults(model",{"_index":2272,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.firstname",{"_index":1487,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.formunlocked",{"_index":1492,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.getcerfs",{"_index":950,"title":{},"body":{"components/CerfListComponent.html":{}}}],["this.getmembers().pipe(map(done",{"_index":1868,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.getmembers().subscribe",{"_index":1851,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.gettingcode",{"_index":1267,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.helper",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helper.decodetoken(token",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helper.istokenexpired(token",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(httpconfig.baseurl",{"_index":277,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.http.delete>(httpconfig.baseurl",{"_index":228,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.http.get(httpconfig.baseurl",{"_index":269,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.http.get>(httpconfig.baseurl",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.http.patch>(httpconfig.baseurl",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.http.post(httpconfig.baseurl",{"_index":271,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{}}}],["this.http.post>(httpconfig.baseurl",{"_index":213,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.islighttheme",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isreverse",{"_index":1473,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.lastname",{"_index":1489,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.list",{"_index":954,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.list.data",{"_index":1274,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.list.data=res",{"_index":1252,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["this.list.filter",{"_index":983,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.list.paginator",{"_index":974,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.list.sort",{"_index":965,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.list.sortingdataaccessor",{"_index":967,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.loadmrf",{"_index":2182,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.loaduserfromtoken",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorage.clear().subscribe",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.loggedin=false",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.matchedpass",{"_index":1512,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.member",{"_index":2429,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.member.pipe(first()).subscribe(member",{"_index":2430,"title":{},"body":{"injectables/RequestCache.html":{}}}],["this.memberregistrationmode",{"_index":1268,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.members",{"_index":1243,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.members=res",{"_index":1251,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.members[i].code",{"_index":1264,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.members[this.members.findindex(member",{"_index":1271,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.memberservice.getmembers",{"_index":1889,"title":{},"body":{"guards/MembersResolver.html":{}}}],["this.memberservice.getmembers().subscribe(res",{"_index":1250,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.memberservice.getnamefromid(value",{"_index":1818,"title":{},"body":{"pipes/MemberIDPipe.html":{}}}],["this.memberservice.getregistrationcode(row._id).subscribe",{"_index":1269,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.memberservice.getregistrationcode(this.members[i]._id).subscribe(res",{"_index":1263,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.memberservice.mapidtoclub(value",{"_index":1319,"title":{},"body":{"pipes/ClubIDPipe.html":{}}}],["this.memberservice.mapidtodivision(value",{"_index":1419,"title":{},"body":{"pipes/DivisionIDPipe.html":{}}}],["this.memberservice.newmember(result.firstname",{"_index":1259,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.mrf",{"_index":2268,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.mrfform.next(this.createreactiveform(this.mrf",{"_index":2269,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.mrfform.value",{"_index":2271,"title":{},"body":{"injectables/MrfService.html":{}}}],["this.mrfformstate",{"_index":261,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.mrflist",{"_index":2237,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["this.mrfstate",{"_index":259,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.mrftabstate",{"_index":263,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.mrfurl.test(nextstate.url",{"_index":833,"title":{},"body":{"interfaces/CanComponentDeactivate-1.html":{},"guards/MrfDeactivateGuard.html":{}}}],["this.mrfview",{"_index":2345,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.add(\"dark",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.add(\"light",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.add('light",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.contains(\"dark",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.contains(\"light",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.remove(\"dark",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["this.overlay.getcontainerelement().classlist.remove(\"light",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["this.pagination",{"_index":956,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.paginator",{"_index":975,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.password",{"_index":1499,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.refreshview",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["this.renderer.selectrootelement(this.elementref.nativeelement).focus",{"_index":2388,"title":{},"body":{"directives/NewFocusInput.html":{}}}],["this.resolveddata",{"_index":1947,"title":{},"body":{"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.retrieve",{"_index":2170,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.reverse",{"_index":1462,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.roster",{"_index":1860,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.roster.filter(member",{"_index":1869,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.roster.find(member",{"_index":1875,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.roster.push({name",{"_index":1880,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.route.data.subscribe(response",{"_index":2332,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.route.snapshot.data['members",{"_index":1244,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.route.snapshot.data['mycerfs",{"_index":2335,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["this.router.navigate",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ClubsResolver.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/cerf",{"_index":984,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.router.navigate(['/login",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{}}}],["this.router.snapshot.data['districtmrfs",{"_index":1948,"title":{},"body":{"components/MrfDistrictComponent.html":{}}}],["this.router.snapshot.data['divisionmrfs",{"_index":1963,"title":{},"body":{"components/MrfDivisionComponent.html":{}}}],["this.router.snapshot.data['mrfs",{"_index":2238,"title":{},"body":{"components/MrfSecretaryComponent.html":{}}}],["this.savemrf",{"_index":2175,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.school",{"_index":1490,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["this.sendcredentials(email",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sendrequest(request",{"_index":800,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.shouldattach",{"_index":2168,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.snackbar.open('failed",{"_index":1280,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.snackbar.open(res.error",{"_index":1276,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["this.sort",{"_index":966,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["this.storedroutes",{"_index":2207,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path",{"_index":2177,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].handle",{"_index":2198,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].snapshot.params",{"_index":2193,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].snapshot.queryparams",{"_index":2195,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.updatelist",{"_index":1261,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["this.user",{"_index":1070,"title":{},"body":{"injectables/CerfService.html":{},"components/LoginComponent.html":{},"injectables/MrfService.html":{},"components/ProfileComponent.html":{}}}],["this.user._id",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"interfaces/Response.html":{}}}],["this.user.access.club",{"_index":1078,"title":{},"body":{"injectables/CerfService.html":{}}}],["this.user.asobservable",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.club_id",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.user.division_id",{"_index":280,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.user.next(data",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(undefined",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.value",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.value.access",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user=user",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["this.usersubject",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersubject.subscribe(user",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["this.wrong",{"_index":1709,"title":{},"body":{"components/LoginComponent.html":{}}}],["those",{"_index":2142,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["though",{"_index":2055,"title":{},"body":{"components/MrfListComponent.html":{}}}],["thought",{"_index":1102,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["three",{"_index":2561,"title":{},"body":{"components/TagsDialog.html":{}}}],["through",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{},"components/CerfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/TagsDialog.html":{}}}],["throughout",{"_index":1849,"title":{},"body":{"injectables/MemberService.html":{}}}],["throw",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{}}}],["throwerror",{"_index":784,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["throwerror(err",{"_index":1525,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tie",{"_index":1103,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["time",{"_index":853,"title":{},"body":{"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["time.start",{"_index":923,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["timezone",{"_index":2653,"title":{},"body":{"dependencies.html":{}}}],["tincidunt",{"_index":1631,"title":{},"body":{"components/FAQsComponent.html":{}}}],["title",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialog.html":{}}}],["todo",{"_index":209,"title":{},"body":{"injectables/ApiService.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Response.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["toggletheme",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokengetter",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["tokeninterceptor",{"_index":2576,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenname",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["tortor",{"_index":1567,"title":{},"body":{"components/FAQsComponent.html":{}}}],["tortor.aliquam",{"_index":1660,"title":{},"body":{"components/FAQsComponent.html":{}}}],["totals",{"_index":949,"title":{},"body":{"components/CerfListComponent.html":{},"classes/Mrf.html":{},"classes/MrfListEntry.html":{}}}],["traditionally",{"_index":2121,"title":{},"body":{"classes/MrfReuseStrategy.html":{}}}],["transform",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{},"components/MyCerfsComponent.html":{}}}],["transform(value",{"_index":1316,"title":{},"body":{"pipes/ClubIDPipe.html":{},"pipes/DivisionIDPipe.html":{},"pipes/MemberIDPipe.html":{}}}],["transition",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MyCerfsComponent.html":{}}}],["transition('expanded",{"_index":1236,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["transparent",{"_index":2070,"title":{},"body":{"components/MrfListComponent.html":{}}}],["tree",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["trigger",{"_index":1226,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["trigger('detailexpand",{"_index":1230,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["triggered",{"_index":2157,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["tristique",{"_index":1571,"title":{},"body":{"components/FAQsComponent.html":{}}}],["true",{"_index":223,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"directives/EqualValidator.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"guards/MrfDeactivateGuard.html":{},"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["true;//this.apiservice.isroutemrf",{"_index":1008,"title":{},"body":{"guards/CerfNavResolver.html":{},"guards/MyCerfsResolver.html":{}}}],["truong",{"_index":1218,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{}}}],["try",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["tslib",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["turpis",{"_index":1557,"title":{},"body":{"components/FAQsComponent.html":{}}}],["two",{"_index":2058,"title":{},"body":{"components/MrfListComponent.html":{},"components/TagsDialog.html":{}}}],["type",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/CanComponentDeactivate.html":{},"interfaces/CanComponentDeactivate-1.html":{},"classes/Cerf.html":{},"components/CerfListComponent.html":{},"classes/CerfListEntry.html":{},"guards/CerfNavResolver.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"guards/ClubsResolver.html":{},"components/ConfirmDialogComponent.html":{},"interceptors/ContentTypeInterceptor.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"interceptors/ErrorInterceptor.html":{},"guards/ExitGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"classes/Maker.html":{},"classes/Member.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"guards/MembersResolver.html":{},"classes/Mrf.html":{},"guards/MrfDeactivateGuard.html":{},"components/MrfDistrictComponent.html":{},"guards/MrfDistrictResolver.html":{},"components/MrfDivisionComponent.html":{},"guards/MrfDivisionResolver.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"guards/MrfPendingCerfResolver.html":{},"classes/MrfReuseStrategy.html":{},"components/MrfSecretaryComponent.html":{},"guards/MrfSecretaryResolver.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"guards/MyCerfsResolver.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2711,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2219,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["typescript",{"_index":1758,"title":{},"body":{"classes/Maker.html":{}}}],["typography",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["ul",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{}}}],["ultrices",{"_index":1644,"title":{},"body":{"components/FAQsComponent.html":{}}}],["ultricies",{"_index":1553,"title":{},"body":{"components/FAQsComponent.html":{}}}],["unconfirm",{"_index":227,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"interfaces/Response.html":{}}}],["undefined",{"_index":265,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{}}}],["underline",{"_index":1731,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["unit",{"_index":2689,"title":{},"body":{"index.html":{}}}],["unlockform",{"_index":1493,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["unsubmit",{"_index":224,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"interfaces/Response.html":{}}}],["unsubmitcerf",{"_index":1025,"title":{},"body":{"injectables/CerfService.html":{}}}],["until",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CerfService.html":{},"components/LoginComponent.html":{},"classes/MrfReuseStrategy.html":{},"components/MyCerfsComponent.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{}}}],["update",{"_index":1113,"title":{},"body":{"injectables/CerfService.html":{},"directives/EqualValidator.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["updatecerf",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["updatecerf(data",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["updateevents",{"_index":2104,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["updatelist",{"_index":1171,"title":{},"body":{"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{}}}],["updatemrf",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{}}}],["updatemrf(data",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["ur",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{}}}],["url",{"_index":2190,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{}}}],["urlsegments",{"_index":2191,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["urna",{"_index":1548,"title":{},"body":{"components/FAQsComponent.html":{}}}],["usable",{"_index":273,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["use",{"_index":1679,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1848,"title":{},"body":{"injectables/MemberService.html":{}}}],["usedfor",{"_index":884,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["useexisting",{"_index":1440,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["useful",{"_index":2166,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CerfService.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user's",{"_index":1339,"title":{},"body":{"components/ClubsComponent.html":{},"components/DialogNewClub.html":{}}}],["user.access",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["user.access.district",{"_index":2015,"title":{},"body":{"components/MrfListComponent.html":{}}}],["user.access.division",{"_index":2017,"title":{},"body":{"components/MrfListComponent.html":{}}}],["user.model",{"_index":1754,"title":{},"body":{"classes/Maker.html":{}}}],["user.name",{"_index":2407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["username",{"_index":2493,"title":{},"body":{"components/SignupComponent.html":{}}}],["usersubject",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["uses",{"_index":2130,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["using",{"_index":2053,"title":{},"body":{"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["usually",{"_index":2536,"title":{},"body":{"components/TagsDialog.html":{}}}],["usualy",{"_index":2567,"title":{},"body":{"components/TagsDialog.html":{}}}],["ut",{"_index":1599,"title":{},"body":{"components/FAQsComponent.html":{}}}],["v",{"_index":1465,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["valid",{"_index":1502,"title":{},"body":{"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validate",{"_index":1445,"title":{},"body":{"directives/EqualValidator.html":{}}}],["validate(c",{"_index":1449,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["validateequal",{"_index":1444,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["validateequal][formcontrolname],[validateequal][formcontrol],[validateequal][ngmodel",{"_index":1442,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["validateequal][formcontrolname],[validateequal][formcontrol],[validateequal][ngmodel]'},{'name",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["validator",{"_index":1438,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["validatorfn",{"_index":1067,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{}}}],["validators",{"_index":1066,"title":{},"body":{"injectables/CerfService.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{}}}],["value",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"pipes/ClubIDPipe.html":{},"components/ClubsComponent.html":{},"pipes/DivisionIDPipe.html":{},"components/DivisionsComponent.html":{},"directives/EqualValidator.html":{},"components/LoginComponent.html":{},"pipes/MemberIDPipe.html":{},"injectables/MemberService.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"injectables/RequestCache.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["value.confirmpassword",{"_index":1504,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["value.email",{"_index":1506,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["value.password).subscribe",{"_index":1507,"title":{},"body":{"directives/EqualValidator.html":{},"components/SignupComponent.html":{}}}],["value.password).subscribe(success",{"_index":1714,"title":{},"body":{"components/LoginComponent.html":{}}}],["vanilla",{"_index":2126,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["var",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["variable",{"_index":1083,"title":{},"body":{"injectables/CerfService.html":{},"coverage.html":{}}}],["variables",{"_index":2716,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varius",{"_index":1640,"title":{},"body":{"components/FAQsComponent.html":{}}}],["vehicula",{"_index":1601,"title":{},"body":{"components/FAQsComponent.html":{}}}],["vel",{"_index":1554,"title":{},"body":{"components/FAQsComponent.html":{}}}],["velit",{"_index":1643,"title":{},"body":{"components/FAQsComponent.html":{}}}],["venenatis",{"_index":1583,"title":{},"body":{"components/FAQsComponent.html":{}}}],["version",{"_index":2670,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{}}}],["vestibulum",{"_index":1652,"title":{},"body":{"components/FAQsComponent.html":{}}}],["via",{"_index":2693,"title":{},"body":{"index.html":{}}}],["view",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["viewchild",{"_index":934,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/MrfDistrictComponent.html":{},"components/MrfDivisionComponent.html":{},"components/MrfListComponent.html":{},"components/MrfSecretaryComponent.html":{},"components/MyCerfsComponent.html":{}}}],["viewchild(matpaginator",{"_index":929,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["viewchild(matsort",{"_index":932,"title":{},"body":{"components/CerfListComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"components/MrfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["viewing",{"_index":944,"title":{},"body":{"components/CerfListComponent.html":{}}}],["vitae",{"_index":1579,"title":{},"body":{"components/FAQsComponent.html":{}}}],["vivamus",{"_index":1564,"title":{},"body":{"components/FAQsComponent.html":{}}}],["viverra",{"_index":1596,"title":{},"body":{"components/FAQsComponent.html":{}}}],["void",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CerfListComponent.html":{},"injectables/CerfService.html":{},"components/ClubAdministrationComponent.html":{},"components/ClubsComponent.html":{},"components/DialogNewClub.html":{},"components/DialogNewMember.html":{},"components/DivisionsComponent.html":{},"components/FAQsComponent.html":{},"components/InfoDialog.html":{},"components/LoginComponent.html":{},"components/MrfListComponent.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"components/MyCerfsComponent.html":{},"directives/NewFocusInput.html":{},"components/ProfileComponent.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{},"components/SettingsComponent.html":{},"components/SignupComponent.html":{},"components/TagsDialog.html":{}}}],["volutpat",{"_index":1595,"title":{},"body":{"components/FAQsComponent.html":{}}}],["vulputate",{"_index":1603,"title":{},"body":{"components/FAQsComponent.html":{}}}],["want",{"_index":1403,"title":{},"body":{"modules/CoreModule.html":{},"classes/MrfReuseStrategy.html":{},"injectables/RequestCache.html":{},"interfaces/RouteStorageObject.html":{}}}],["warning",{"_index":2352,"title":{},"body":{"components/MyCerfsComponent.html":{}}}],["warnings",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["way",{"_index":2138,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["weaknesses",{"_index":890,"title":{},"body":{"classes/Cerf.html":{},"classes/CerfListEntry.html":{},"injectables/CerfService.html":{}}}],["webinar",{"_index":2566,"title":{},"body":{"components/TagsDialog.html":{}}}],["webinars",{"_index":2569,"title":{},"body":{"components/TagsDialog.html":{}}}],["website",{"_index":1289,"title":{},"body":{"components/ClubAdministrationComponent.html":{}}}],["weight",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/MrfListComponent.html":{}}}],["west",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["what's",{"_index":2592,"title":{},"body":{"classes/User.html":{}}}],["whether",{"_index":2120,"title":{},"body":{"classes/MrfReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["white",{"_index":1726,"title":{},"body":{"components/LoginComponent.html":{},"components/MyCerfsComponent.html":{}}}],["whitelisteddomains",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["whitespace",{"_index":978,"title":{},"body":{"components/CerfListComponent.html":{},"components/MyCerfsComponent.html":{}}}],["whole",{"_index":1850,"title":{},"body":{"injectables/MemberService.html":{}}}],["width",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ClubAdministrationComponent.html":{},"components/LoginComponent.html":{}}}],["window.alert(\"you",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{}}}],["without",{"_index":2506,"title":{},"body":{"components/TagsDialog.html":{}}}],["workshops",{"_index":2529,"title":{},"body":{"components/TagsDialog.html":{}}}],["wrong",{"_index":1697,"title":{},"body":{"components/LoginComponent.html":{}}}],["year",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"components/ClubAdministrationComponent.html":{},"components/DialogNewMember.html":{},"classes/Mrf.html":{},"components/MrfListComponent.html":{},"classes/MrfListEntry.html":{},"classes/MrfReuseStrategy.html":{},"injectables/MrfService.html":{},"interfaces/Response.html":{},"interfaces/RouteStorageObject.html":{}}}],["year').set('month",{"_index":239,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Response.html":{}}}],["yes",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Member.html":{},"guards/MrfDeactivateGuard.html":{}}}],["you're",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{}}}],["yyyy",{"_index":2283,"title":{},"body":{"injectables/MrfService.html":{}}}],["z",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["z4",{"_index":2052,"title":{},"body":{"components/MrfListComponent.html":{}}}],["zip",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"components/MyCerfsComponent.html":{},"interfaces/Response.html":{}}}],["zone.js",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mrfFormState\n                            \n                            \n                                mrfState\n                            \n                            \n                                mrfTabState\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMember\n                            \n                            \n                                changeCerfStatus\n                            \n                            \n                                createNewCerf\n                            \n                            \n                                deleteCerf\n                            \n                            \n                                deleteClub\n                            \n                            \n                                deleteDivision\n                            \n                            \n                                deleteMrfState\n                            \n                            \n                                fetchMembers\n                            \n                            \n                                getCerf\n                            \n                            \n                                getClubs\n                            \n                            \n                                getDivisions\n                            \n                            \n                                getMemberCode\n                            \n                            \n                                getMrfByDate\n                            \n                            \n                                getMrfList\n                            \n                            \n                                getMyCerfList\n                            \n                            \n                                getPendingCerfs\n                            \n                            \n                                newClub\n                            \n                            \n                                newDivision\n                            \n                            \n                                resetData\n                            \n                            \n                                setMrfState\n                            \n                            \n                                updateCerf\n                            \n                            \n                                updateMrf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getMrfTabState\n                                \n                                \n                                    getMrfFormState\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMember\n                        \n                        \n                    \n                \n            \n            \n                \naddMember(first: string, last: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeCerfStatus\n                        \n                        \n                    \n                \n            \n            \n                \nchangeCerfStatus(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewCerf\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewCerf(data: Cerf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Cerf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCerf\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCerf(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteClub\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteClub(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteDivision\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteDivision(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMrfState\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMrfState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchMembers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCerf\n                        \n                        \n                    \n                \n            \n            \n                \ngetCerf(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClubs\n                        \n                        \n                    \n                \n            \n            \n                \ngetClubs(divisionId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    divisionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDivisions\n                        \n                        \n                    \n                \n            \n            \n                \ngetDivisions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMemberCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetMemberCode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMrfByDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetMrfByDate(year: string, month: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    year\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    month\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMrfList\n                        \n                        \n                    \n                \n            \n            \n                \ngetMrfList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMyCerfList\n                        \n                        \n                    \n                \n            \n            \n                \ngetMyCerfList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPendingCerfs\n                        \n                        \n                    \n                \n            \n            \n                \ngetPendingCerfs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newClub\n                        \n                        \n                    \n                \n            \n            \n                \nnewClub(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newDivision\n                        \n                        \n                    \n                \n            \n            \n                \nnewDivision(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetData\n                        \n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMrfState\n                        \n                        \n                    \n                \n            \n            \n                \nsetMrfState(component)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCerf\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCerf(data: Cerf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Cerf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMrf\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMrf(data: Mrf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/api.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mrf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrfFormState\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrfState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mrf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrfTabState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getMrfTabState\n                    \n                \n\n                \n                    \n                        getgetMrfTabState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/api.service.ts:126\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getMrfFormState\n                    \n                \n\n                \n                    \n                        getgetMrfFormState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/api.service.ts:133\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, of, zip, forkJoin } from 'rxjs';\nimport { defaultIfEmpty, concatMap, map, tap, filter, catchError, first, last } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport HttpConfig from '@env/api_config';\nimport { Cerf, Mrf, User, Member } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\nimport * as moment from 'moment';\n\ninterface Response {\n\tsuccess: boolean,\n\tauth: boolean,\n\terror?: string,\n\twarnings?: string,\n\tresult?: T\n}\n\n// Any and all api calls go through here (except end-to-end authentication). Previously data.service.ts\n// References: https://itnext.io/dont-clone-back-end-models-in-angular-f7a749bdc1b0\n// \t\t\t\thttps://medium.com/@joshblf/dynamic-nested-reactive-forms-in-angular-654c1d4a769a\n@Injectable( {providedIn: 'root' })\nexport class ApiService {\n\n\tconstructor(private http: HttpClient, private authService: AuthService) {\n\t\tthis.authService.getUserObservable().subscribe(user => this.user=user);\n\t}\n\n\tuser: User;\n\n\tmrfState: Mrf;\n\tmrfFormState;\n\tmrfTabState: string;\n\n\tresetData()\t// this goes into auth probably\n\t{\n\t\t// this.localStorage.clear().subscribe(()=>{});  // removes token also\n\t}\n\n\n\tgetCerf(id: string) {\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/events/' + id);\n\t}\n\tgetMyCerfList() {\n\t\tif(!this. user) return of(null);\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/members/' + this.user._id + '/events');\n\t\t// it is not the service's concern to clean up the data for the app to consume (e.g. reading 'success' or returning [])\n\t}\n\tgetPendingCerfs() {\n\t\tif(!this.user) return of(null);\n\t\tlet params = new HttpParams().set('status', '1');\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/clubs/' + this.user.club_id + '/events', { params: params } );\n\t\t// This returns all. Endpoint to get it for specific month? Or we can filter and split up, but inefficient\n\t}\n\n\tupdateCerf(data: Cerf) {\n\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + data._id, data).pipe(tap(res => console.log(res)));;\n\t\t// TODO: cache-bust according to data._id\n\t}\n\n\tcreateNewCerf(data: Cerf) {\n\t\treturn this.http.post>(HttpConfig.baseUrl + \"/events\", data).pipe(tap(res => console.log(res)));\n\t\t// TODO: Special cache handler since the user will access this new cerf through its id\n\t\t// or leave it to refresh get requests again\n\t}\n\n\tchangeCerfStatus(id: string, action: string) {\n\t\tif(action == \"SUBMIT\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/submit\", {submit: true});\n\t\t} else if(action == \"UNSUBMIT\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/submit\", {submit: false});\n\t\t} else if(action == \"CONFIRM\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/confirm\", {confirm: true});\n\t\t} else if(action == \"UNCONFIRM\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/confirm\", {confirm: false});\n\t\t}\n\n\t\treturn of(null);\n\t}\n\n\tdeleteCerf(id: string) {\n\t\treturn this.http.delete>(HttpConfig.baseUrl + \"/events/\" + id);\n\t}\n\n\n\n\n\t// just a simple array of month-year objects\n\tgetMrfList() {\n\t\tconst current = moment();\n\t\tconst oldest = moment().month() > 5 ? moment().set('month', 5) : moment().subtract(1, 'year').set('month', 5);\n\t\tlet list = [];\n\t\twhile ((current > oldest || current.format('M') === oldest.format('M')) && list.length >(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/mrfs/\" + year + \"/\" + month);\n\t}\n\n\tupdateMrf(data: Mrf) {\n\t\tif(!this.user) return of(null);\n\t\tconsole.log(data);\n\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/mrfs/\" + data.year + \"/\" + data.month, data);\n\t}\n\n\n\n\t// Option 1: RouterReuseStrategy\n\t// Option 2: directly save inputted data when routing (this is more predicatable and explicit?)\n\tsetMrfState(component) {\n\t\tthis.mrfState = component.mrfForm.getRawValue();\n\t\tthis.mrfFormState = component.mrfForm;\n\t\tthis.mrfTabState = component.currentTab;\n\t}\n\n\tdeleteMrfState() {\n\t\tthis.mrfState = undefined;\n\t\tthis.mrfFormState = undefined;\n\t\tthis.mrfTabState = undefined;\n\t}\n\n\tget getMrfTabState() {\n\t\tif(this.mrfTabState) {\n\t\t\treturn this.mrfTabState;\n\t\t}\n\t\treturn \"main\";\n\t}\n\n\tget getMrfFormState() {\n\t\tif(this.mrfFormState)\n\t\t\treturn this.mrfFormState;\n\t}\n\n\n\n\tfetchMembers() {\n\t\tif(!this.user) return of(null);\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/members\");\n\t}\n\n\taddMember(first: string, last: string) {\n\t\tif(!this.user) return of(false);\n\t\treturn this.http.post(HttpConfig.baseUrl + '/clubs/' + this.user.club_id + \"/members\", {name: {'first': first, 'last': last}});\n\t}\n\n\tgetMemberCode(id: string) {\n\t\treturn this.http.get(HttpConfig.baseUrl + '/members/' + id + '/registration');\n\t}\n\n\n\t// Only usable by district secretary\n\tgetDivisions() {\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/divisions\");\n\t}\n\n\tnewDivision(name: string) {\n\t\treturn this.http.post(HttpConfig.baseUrl + \"/divisions\", {'name': name});\n\t}\n\n\tdeleteDivision(id: string) {\n\t\treturn this.http.delete(HttpConfig.baseUrl + \"/divisions/\" + id);\n\t}\n\n\n\n\n\tgetClubs(divisionId?: string) {\n\t\tif(!this.user) return of(null);\n\t\tif(!divisionId) divisionId=this.user.division_id;\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/divisions/\" + divisionId + \"/clubs\");\n\t}\n\n\tnewClub(name: string) {\n\t\tif(!this.user) return of(false);\n\t\treturn this.http.post(HttpConfig.baseUrl + '/divisions/' + this.user.division_id + '/clubs', {'name': name});\n\t}\n\n\tdeleteClub(id: string) {\n\t\treturn this.http.delete(HttpConfig.baseUrl + '/clubs/' + id);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authLinks\n                            \n                            \n                                isLightTheme\n                            \n                            \n                                links\n                            \n                            \n                                title\n                            \n                            \n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refreshView\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, member: MemberService, overlay: OverlayContainer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        member\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    OverlayContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshView\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLightTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t{icon: 'home', text: 'Dashboard', route: '/', color: '#F2E18B'},\n\t{icon: 'assessment', text:'Event Reports', route: '/cerfs', color: '#C7D6EE'},\n\t{icon: 'table_cell', text:'Monthly Reports', route: '/mrfs', color: '#9EA374'},\n\t// {icon: 'library_books', text: 'Past MRFs'},\n\t{division: \"Metro\", text: 'Division MRFs', route: '/divmrfs'},\n\t{icon: 'library_books', text: 'District MRFs', route: '/distmrfs'},\n\t{icon: 'people', text: 'Club Administration', route: '/club'},\n\t{icon: 'people', text: 'Clubs', route: '/clubs'},\n\t{icon: 'assignment', text: 'Divisions', route: '/divisions'}\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { Observable } from 'rxjs';\nimport { MemberService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { User } from '@core/models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: []\n})\nexport class AppComponent {\n  title = 'app';\n\tisLightTheme: boolean = true;\n\t// isExpanded=false;\n\tlinks = [\n\t{icon: 'home', text: 'Dashboard', route: '/', color: '#F2E18B'},\n\t{icon: 'assessment', text:'Event Reports', route: '/cerfs', color: '#C7D6EE'},\n\t{icon: 'table_cell', text:'Monthly Reports', route: '/mrfs', color: '#9EA374'},\n\t// {icon: 'library_books', text: 'Past MRFs'},\n\t{division: \"Metro\", text: 'Division MRFs', route: '/divmrfs'},\n\t{icon: 'library_books', text: 'District MRFs', route: '/distmrfs'},\n\t{icon: 'people', text: 'Club Administration', route: '/club'},\n\t{icon: 'people', text: 'Clubs', route: '/clubs'},\n\t{icon: 'assignment', text: 'Divisions', route: '/divisions'}\n\t];\n\tuserSubject: Observable;\n\tauthLinks = [];\n\n\t// @Input() level: number = 1;\n\n\tconstructor(private auth: AuthService, private member: MemberService, private overlay: OverlayContainer) {\n\t\tthis.userSubject = this.auth.getUserObservable();\n\t\tthis.overlay.getContainerElement().classList.add('light-theme');\n\t}\n\n\tngOnInit() {\n\t\tthis.refreshView();\n\t}\n\n\ttoggleTheme() {\n\t\tthis.isLightTheme = !this.isLightTheme;\n\t\tif (this.overlay.getContainerElement().classList.contains(\"light-theme\")) {\n\t\t\tthis.overlay.getContainerElement().classList.remove(\"light-theme\");\n\t\t\tthis.overlay.getContainerElement().classList.add(\"dark-theme\");\n\t\t} else if (this.overlay.getContainerElement().classList.contains(\"dark-theme\")) {\n\t\t\tthis.overlay.getContainerElement().classList.remove(\"dark-theme\");\n\t\t\tthis.overlay.getContainerElement().classList.add(\"light-theme\");\n\t\t} else {\n\t\t\tthis.overlay.getContainerElement().classList.add(\"light-theme\");\n\t\t}\n\t}\n\n\trefreshView() {\n\t\tthis.userSubject.subscribe(user => {\n\t\t\tthis.authLinks = [];\n\t\t\tif(user)\n\t\t\t{\n\t\t\t\tlet access = user.access;\n\t\t\t\tthis.authLinks.push(this.links[0]); // Profile\n\t\t\t\tthis.authLinks.push(this.links[1]); // CERFs\n\t\t\t\tif(access.club > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.authLinks.push(this.links[2]); // MRF\n\t\t\t\t\tthis.authLinks.push(this.links[5]);\t// Administration\n\t\t\t\t}\n\t\t\t\tif(access.division == 1)\n\t\t\t\t{\n\t\t\t\t\tthis.authLinks.push(this.links[6]);\t// Clubs\n\t\t\t\t\t// this.authLinks.push(this.links[3]); // Division MRFs\n\t\t\t\t}\n\t\t\t\tif(access.district == 1)\n\t\t\t\t{\n\t\t\t\t\tthis.authLinks.push(this.links[7]);\t// Divisions\n\t\t\t\t\t// this.authLinks.push(this.links[4]); // District MRFs\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n    \n\n    \n        \n  \n    \n\n      \n        {{ link.text }}\n        {{ link.icon }}\n      \n\n      \n        Settings\n        settings\n      \n    \n  \n  \n    \n\n      \n        \n          menu\n        \n        \n      \n\n\n      \n        \n      \n\n\n      \n        \n        \n      \n    \n  \n -->\n  \n    \n      \n        \n        \n          {{ link.text }}\n          {{ link.icon }}\n        \n\n        \n          Settings\n          settings\n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n        \n        \n      \n\n\n  \n -->\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .mat-drawer-side {\n    border: none;\n}\n.mat-drawer-container, .menu { /* Move to theme mixin */\n    background-color: #eceff1;\n}\n\n.menu {\n/*\tposition: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    overflow: hidden;*/\n    width: 240px;\n    padding-top: 60px;\n    /*background-color: #eceff1;*/\n}\n/* Palette\nbackground: #eceff1;\nmenu icon: #6b7378;\nmenu text: #636566;\nmenu text active: #185287;\nmenu text background active: #dbe5eb; (border-radius 5px)\n\nheader: #003d79;\ntext: #144c83;\nInput border: #6c6d6e; (outline)\nInput hint: #5e5f60;\nEvent action icons: #6c6d6e;\n\n*/\n#cnhlogo {\n    display: block;\n    max-width: 75%;\n    height: auto;\n    margin: 0 auto 24px auto;\n}\n.menu-container {\n    /*background-color: #fbfbfb;*/\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n.menu-container mat-icon, .menu-container span {\n    color: #636566;\n}\n.menu-container span {\n    /*font-weight: bold;*/\n}\n\n/*\n.menu ul {\n    display: flex;\n    flex-direction: column; \n\n    position: absolute;\n    z-index: 10;\n    width: 240px;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    text-transform: none;\n    text-decoration: none;\n    font-weight: 300;\n    font-family: 'Lato', Arial, sans-serif;\n    line-height: 60px;\n}\n\n.menu a mat-icon {\n    vertical-align: middle;\n    padding-left: 18px;\n}\n*/\n\n.menu a span {\n    padding-left: 24px;\n    margin-bottom: 0; /* darn material typography */\n}\n/*.menu a {\n    transition: padding-left .3s;\n}*/\n\n/*.menu a:hover {\n    padding-left: 10px;\n}*/\n\n#settings {\n    margin-top: auto;\n}\n\n/*mat-sidenav-content { \n    display: flex;\n}*/\n\n.mat-toolbar {\n    margin-bottom: 2%;    /* Push main content down to give the toolbar some space */\n}\n\n#content {\n    /*width: 100%;*/\n    padding-top: 120px;\n    padding-left: 75px;\n    padding-right: 50px;\n    flex: 1;\n    margin-bottom: 80px;    /* Give the logo some space */\n}\n\n\n/* Reference: https://stackoverflow.com/questions/46722868/sticky-footer-in-angular-2-material */\n.menu-container {\n    min-height: 100vh;\n}\n.sidenav-content {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n.footer {\n    position: relative;\n}\n.footer img {\n    position: absolute;\n    width: 100%;\n    height: auto;\n    bottom: 0;\n}\n\n.active-route {\n    pointer-events: none;\n    cursor: default;\n\n    border-radius: 10px;\n    background: #dbe5eb !important;\n    color: #185287;\n    transition: background ease 0.6s, color ease 0.6s;\n}\n/*\n.footer {\n    position: absolute;\n    width: 100%;\n    height: 70px;\n    bottom: 0;\n}\n\n*/\n\n/*#masthead {\n    height: 100%;\n}*/\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ link.text }}        {{ link.icon }}                    Settings        settings                                          menu                                                                             -->                                      {{ link.text }}          {{ link.icon }}                          Settings          settings                                                                           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCerfComponent\n\nCerfComponent\n\nAppModule -->\n\nCerfComponent->AppModule\n\n\n\n\n\nCerfListComponent\n\nCerfListComponent\n\nAppModule -->\n\nCerfListComponent->AppModule\n\n\n\n\n\nClubAdministrationComponent\n\nClubAdministrationComponent\n\nAppModule -->\n\nClubAdministrationComponent->AppModule\n\n\n\n\n\nClubIDPipe\n\nClubIDPipe\n\nAppModule -->\n\nClubIDPipe->AppModule\n\n\n\n\n\nClubsComponent\n\nClubsComponent\n\nAppModule -->\n\nClubsComponent->AppModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nAppModule -->\n\nConfirmDialogComponent->AppModule\n\n\n\n\n\nDialogNewClub\n\nDialogNewClub\n\nAppModule -->\n\nDialogNewClub->AppModule\n\n\n\n\n\nDialogNewMember\n\nDialogNewMember\n\nAppModule -->\n\nDialogNewMember->AppModule\n\n\n\n\n\nDivisionIDPipe\n\nDivisionIDPipe\n\nAppModule -->\n\nDivisionIDPipe->AppModule\n\n\n\n\n\nDivisionsComponent\n\nDivisionsComponent\n\nAppModule -->\n\nDivisionsComponent->AppModule\n\n\n\n\n\nEqualValidator\n\nEqualValidator\n\nAppModule -->\n\nEqualValidator->AppModule\n\n\n\n\n\nFAQsComponent\n\nFAQsComponent\n\nAppModule -->\n\nFAQsComponent->AppModule\n\n\n\n\n\nInfoDialog\n\nInfoDialog\n\nAppModule -->\n\nInfoDialog->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMemberIDPipe\n\nMemberIDPipe\n\nAppModule -->\n\nMemberIDPipe->AppModule\n\n\n\n\n\nMrfComponent\n\nMrfComponent\n\nAppModule -->\n\nMrfComponent->AppModule\n\n\n\n\n\nMrfDistrictComponent\n\nMrfDistrictComponent\n\nAppModule -->\n\nMrfDistrictComponent->AppModule\n\n\n\n\n\nMrfDivisionComponent\n\nMrfDivisionComponent\n\nAppModule -->\n\nMrfDivisionComponent->AppModule\n\n\n\n\n\nMrfListComponent\n\nMrfListComponent\n\nAppModule -->\n\nMrfListComponent->AppModule\n\n\n\n\n\nMrfSecretaryComponent\n\nMrfSecretaryComponent\n\nAppModule -->\n\nMrfSecretaryComponent->AppModule\n\n\n\n\n\nMyCerfsComponent\n\nMyCerfsComponent\n\nAppModule -->\n\nMyCerfsComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nTagsDialog\n\nTagsDialog\n\nAppModule -->\n\nTagsDialog->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CerfComponent\n                        \n                        \n                            CerfListComponent\n                        \n                        \n                            ClubAdministrationComponent\n                        \n                        \n                            ClubIDPipe\n                        \n                        \n                            ClubsComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DialogNewClub\n                        \n                        \n                            DialogNewMember\n                        \n                        \n                            DivisionIDPipe\n                        \n                        \n                            DivisionsComponent\n                        \n                        \n                            EqualValidator\n                        \n                        \n                            FAQsComponent\n                        \n                        \n                            InfoDialog\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MemberIDPipe\n                        \n                        \n                            MrfComponent\n                        \n                        \n                            MrfDistrictComponent\n                        \n                        \n                            MrfDivisionComponent\n                        \n                        \n                            MrfListComponent\n                        \n                        \n                            MrfSecretaryComponent\n                        \n                        \n                            MyCerfsComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SignupComponent\n                        \n                        \n                            TagsDialog\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DialogNewClub\n                        \n                        \n                            DialogNewMember\n                        \n                        \n                            InfoDialog\n                        \n                        \n                            TagsDialog\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from '@core/core.module';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n    LoginComponent,\n    SignupComponent,\n\tCerfComponent,\n    CerfListComponent, \n\tMrfComponent,\n    MrfListComponent,\n    MyCerfsComponent,\n    MrfSecretaryComponent,\n    MrfDivisionComponent,\n    MrfDistrictComponent,\n    ClubAdministrationComponent,\n    DialogNewMember,\n    ClubsComponent,\n    DialogNewClub,\n\tProfileComponent,\n    FAQsComponent,\n    SettingsComponent,\n    ConfirmDialogComponent,\n    InfoDialog,\n    TagsDialog,\n    EqualValidator,\n    DivisionsComponent } from '@app/modules/';\n\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MrfReuseStrategy } from '@core/guards/reuse-strategy';\nimport { httpInterceptorProviders } from '@core/http-interceptors';\nimport { HttpClientModule } from '@angular/common/http';\nimport HttpConfig from '@env/api_config';\nimport { MemberIDPipe } from '@core/utils/memberid.pipe';\nimport { ClubIDPipe } from '@core/utils/clubid.pipe';\nimport { DivisionIDPipe } from '@core/utils/divisionid.pipe';\n// import { JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\n// export function tokenGetter() {\n//   return localStorage.getItem('access_token');\n// }\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    CerfComponent,\n    MrfComponent,\n    CerfListComponent,\n    MrfListComponent,\n    MyCerfsComponent,\n    MrfSecretaryComponent,\n    MrfDivisionComponent,\n    MrfDistrictComponent,\n    ClubAdministrationComponent,\n    DialogNewMember,\n    ClubsComponent,\n    DialogNewClub,\n    ProfileComponent,\n    FAQsComponent,\n    SettingsComponent,\n    ConfirmDialogComponent,\n    InfoDialog,\n    TagsDialog,\n    MemberIDPipe,\n    ClubIDPipe,\n    DivisionIDPipe,\n    EqualValidator,\n    DivisionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    CoreModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n    // JwtModule.forRoot({\n    //   config: {\n    //     tokenGetter: tokenGetter,\n    //     whitelistedDomains: [HttpConfig.schemelessUrl],\n    //     blacklistedRoutes: []\n    //   }\n    // })\n  ],\n  providers: [httpInterceptorProviders],//, {provide: RouteReuseStrategy, useClass: MrfReuseStrategy}],\n  bootstrap: [AppComponent],\n  entryComponents: [ConfirmDialogComponent, InfoDialog, TagsDialog, DialogNewMember, DialogNewClub]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Resolve, CanActivate } from '@angular/router';\n\nimport {\n\tCerfComponent,\n\tMyCerfsComponent,\n\tMrfComponent,\n\tMrfSecretaryComponent,\n\tMrfDivisionComponent,\n\tMrfDistrictComponent,\n\tClubAdministrationComponent,\n\tClubsComponent,\n\tDivisionsComponent,\n\tProfileComponent,\n\tLoginComponent,\n\tFAQsComponent,\n\tSettingsComponent,\n\tSignupComponent } from '@app/modules/';\n\nimport { MembersResolver } from '@core/guards/members-resolver.guard';\nimport { MyCerfsResolver, CerfNavResolver } from '@core/guards/cerf-resolver.guard';\nimport { MrfSecretaryResolver, MrfDivisionResolver, MrfDistrictResolver, MrfPendingCerfResolver } from '@core/guards/mrf-resolver.guard';\nimport { ClubsResolver } from '@core/guards/clubs-resolver.guard';\nimport { AuthGuard } from '@core/guards/auth.guard';\nimport { MrfDeactivateGuard } from '@core/guards/mrf-deactivate.guard';\n\nconst routes: Routes = [\n\t{ path: 'cerfs', component: MyCerfsComponent, resolve: { myCerfs: MyCerfsResolver, pendingCerfs: MrfPendingCerfResolver }, canActivate: [AuthGuard] },\n\t{ path: 'cerf/:id', component: CerfComponent, canActivate: [AuthGuard] },\n\t{ path: 'mrfs', component: MrfSecretaryComponent, resolve: { mrfs: MrfSecretaryResolver }, canActivate: [AuthGuard] },\n\t{ path: 'mrf/:year/:month', component: MrfComponent, canActivate: [AuthGuard], canDeactivate: [MrfDeactivateGuard] },\n\t{ path: 'divmrfs', component: MrfDivisionComponent, resolve: { divisionMrfs: MrfDivisionResolver }, canActivate: [AuthGuard] },\n\t{ path: 'distmrfs', component: MrfDistrictComponent, resolve: { districtMrfs: MrfDistrictResolver }, canActivate: [AuthGuard] },\n\t{ path: 'club', component: ClubAdministrationComponent, resolve: { members: MembersResolver}, canActivate: [AuthGuard]},\n\t{ path: 'clubs', component: ClubsComponent, resolve: { clubs: ClubsResolver }, canActivate: [AuthGuard]},\n\t{ path: 'divisions', component: DivisionsComponent, canActivate: [AuthGuard]},\n\t{ path: 'login', component: LoginComponent, canActivate: [AuthGuard] },\n\t{ path: 'signup', component: SignupComponent },\n\t{ path: 'faqs', component: FAQsComponent },\n\t{ path: 'settings', component: SettingsComponent },\n\t{ path: '', component: ProfileComponent, canActivate: [AuthGuard] },\n\t{ path: '**', redirectTo: ''} // DEFAULT ROUTE\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise } from 'rxjs/operators';\n\nimport { Cerf, Member } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\n\n@Injectable( { providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\tconstructor(private auth: AuthService, private router: Router) {\n\n\t}\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\tconsole.log(state.url);\n\t\tif(!this.auth.isLoggedIn())\n\t\t{\n\t\t\t// router.navigate(['/login']);\n\t\t\t// window.alert(\"You must be logged in\");\n\t\t\tif(state.url != '/login' && state.url != '/signup') {\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\t// YES you're allowed to access /login if you're not logged in\n\t\t}\n\n\t\tconst user = this.auth.getUser();\n\n\t\tif(!user) return false;\n\n\t\tif(state.url=='/login' || state.url=='/signup') {\n\t\t\tthis.router.navigate(['']);\n\t\t\treturn false;\t// ur already logged in\n\t\t}\n\t\t\n\t\t\n\t\tif(state.url=='/mrfs')\n\t\t{\n\t\t\tif(user.access.club > 0) return true;\n\t\t\telse {\n\t\t\t\twindow.alert(\"You do not have permission to view this\");\n\t\t\t\tthis.router.navigate(['']);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif(state.url=='/cerfs')\n\t\t\t\treturn true;\n\t\treturn true;\t// should definitely default false, but need to figure out how to authorize '/cerf/:id'\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                helper\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Public\n                                navFromMrf\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAccess\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserObservable\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Private\n                                loadUserFromToken\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                sendCredentials\n                            \n                            \n                                    Public\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccess()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserObservable(refresh?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refresh\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadUserFromToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUserFromToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendCredentials(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(code: string, email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            helper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/auth.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : localStorage.getItem(tokenName) != null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navFromMrf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map, tap, defaultIfEmpty } from 'rxjs/operators';\n\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n// import { DataService } from '@core/data/data.service';\n\nimport { User, Member } from '@core/models';\nimport HttpConfig from '@env/api_config';\n\nexport const tokenName = 'access_token';\n\n@Injectable( {providedIn: 'root'} )\nexport class AuthService {\n\tprivate user = new BehaviorSubject(undefined); // ReplaySubject with buffer size 1 behaves like a BehaviorSubject,\n                                                // except it emits nothing (not even null) until the first publish\n  private loggedIn: boolean = localStorage.getItem(tokenName) != null;\n  public navFromMrf: boolean;\n\n  private helper: JwtHelperService;\n  constructor(private http: HttpClient, private storage: LocalStorage) {\n    this.helper = new JwtHelperService();\n    if(this.isLoggedIn()) {  // persist login\n      this.loadUserFromToken();\n    }\n  }\n\n  public login(email: string, password: string): Observable  // Success or not in logging in\n  {\n    return this.sendCredentials(email, password).pipe(map((res:any) => {\n      if(res.success) {\n        localStorage.setItem(tokenName, res.result);\n        console.log(res.result);\n        this.loadUserFromToken();\n      }\n      return res.success;\n    }));\n  }\n\n  private sendCredentials(email: string, password: string): Observable {\n    return this.http.post(HttpConfig.baseUrl + \"/signin\", {'email': email, 'password': password});\n  }\n\n  private loadUserFromToken(): boolean {\n    let data;\n    let token = localStorage.getItem(tokenName);\n    if(!token) return false;\n    try {\n      data = this.helper.decodeToken(token);\n    } catch (error) {\n      console.log(error);\n      this.logout();\n      throw error;\n    }\n    this.user.next(data);\n    console.log(data);\n    return true;\n  }\n\n  public logout(): void {\n    localStorage.removeItem(tokenName);\n    this.loggedIn=false;\n    this.user.next(undefined);\n  }\n\n  public isLoggedIn(): boolean {\n    let token = localStorage.getItem(tokenName);\n    if (token != null && !this.helper.isTokenExpired(token))\n      return true;\n    else {\n      this.logout();\n      return false;\n    }\n  }\n\n  public signup(code: string, email: string, pass: string): Observable {\n    const data = {\n      registration: code,\n      email: email,\n      password: pass\n    }\n    return this.http.post(HttpConfig.baseUrl + \"/signup\", data);\n  }\n\n  public getUserObservable(refresh?: boolean): Observable {\n      return this.user.asObservable();\n  }\n\n  public getUser() {\n    return this.user.value;\n  }\n\n  public getAccess() {\n    if(!this.loggedIn)\n      return undefined;\n    return this.user.value.access;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-interceptors/cache-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                sendRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http-interceptors/cache-interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/cache-interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendRequest(request: HttpRequest, next: HttpHandler, cache: RequestCache)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/cache-interceptor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n                                    \n                                                RequestCache\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders, HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { tap, map, delay, catchError, mergeMap, materialize, dematerialize } from 'rxjs/operators';\nimport { RequestCache } from '@core/utils/request-cache.service';\nimport { AuthService } from '@core/authentication/auth.service';\n\n@Injectable()    // provided in app.module\nexport class CacheInterceptor implements HttpInterceptor {\n    \n    constructor(private auth: AuthService, private cache: RequestCache) {\n        cache.init(auth.getUserObservable());\n    }\n\n    intercept(request: HttpRequest, next: HttpHandler) {\n        if(request.method != \"GET\")\n        {\n            this.cache.dirtyWrite(request);\n            return next.handle(request);\n        }\n        const cachedResponse = this.cache.get(request);\n        return cachedResponse ? of(cachedResponse) : this.sendRequest(request, next, this.cache);\n    }\n\n    private sendRequest(request: HttpRequest, next: HttpHandler, cache: RequestCache): Observable> {\n        return next.handle(request).pipe(tap(event => {\n            // let log = {};\n            // log[\"url\"] = request.url.substring(61);\n            // log[\"response\"] = event.body;\n            // console.log(JSON.stringify(log));\n            // if(event instanceof HttpResponse)\n            //     cache.put(request, event);\n        }));\n    }\n}\n\nexport let cacheInterceptor = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CacheInterceptor,\n    multi: true\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/exit.guard.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n\tcanDeactivate: () => Observable|Promise|boolean;\n}\n\n@Injectable( { providedIn: 'root' })\nexport class ExitGuard implements CanDeactivate {\n\t\tcanDeactivate(component: CanComponentDeactivate) {\n\t\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate-1.html":{"url":"interfaces/CanComponentDeactivate-1.html","title":"interface - CanComponentDeactivate-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/mrf-deactivate.guard.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ApiService } from '@core/services';\n\nexport interface CanComponentDeactivate {\n\tcanDeactivate: () => Observable|Promise|boolean;\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDeactivateGuard implements CanDeactivate {\n\tprivate mrfUrl = new RegExp('/mrf/.*');\n\tprivate cerfUrl = new RegExp('/cerf/.*');\n\n\tconstructor(private apiService: ApiService) {}\n\n\tcanDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot) {\n\t\tif(!nextState)\n\t\t\treturn true;\n\t\tif(this.mrfUrl.test(currentState.url) && this.cerfUrl.test(nextState.url))\n\t\t{\n\t\t\tthis.apiService.setMrfState(component);\n\t\t} else if(this.cerfUrl.test(currentState.url) && !this.mrfUrl.test(nextState.url)) {\n\t\t\tthis.apiService.deleteMrfState();\n\t\t}\n\t\treturn true;\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cerf.html":{"url":"classes/Cerf.html","title":"class - Cerf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cerf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/cerf.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                attendees\n                            \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                categories\n                            \n                            \n                                    Public\n                                chair\n                            \n                            \n                                    Public\n                                club_id\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                contact\n                            \n                            \n                                    Public\n                                division_id\n                            \n                            \n                                    Public\n                                drivers\n                            \n                            \n                                    Public\n                                fundraised\n                            \n                            \n                                    Public\n                                hoursPerAttendee\n                            \n                            \n                                    Public\n                                kfamAttendance\n                            \n                            \n                                    Public\n                                location\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                overrideHours\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, name: string, club_id: string, division_id: string, time: literal type, author: literal type, chair: literal type, location: string, contact: string, tags: string[], attendees: literal type[], hoursPerAttendee: literal type, overrideHours: literal type[], fundraised: literal type, drivers: literal type[], comments: literal type, kfamAttendance: literal type[], categories: string[], status: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/cerf.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        club_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        division_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        author\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chair\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contact\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attendees\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hoursPerAttendee\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overrideHours\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fundraised\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drivers\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comments\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kfamAttendance\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categories\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attendees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chair\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            club_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            division_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drivers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fundraised\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hoursPerAttendee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            kfamAttendance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overrideHours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cerf {\n\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic club_id: string,\n\t\tpublic division_id: string,\n\t\tpublic time: { start: Date, end: Date },\n\t\tpublic author: { _id: string, name: { first: string, last: string } },\n\t\tpublic chair: { _id: string, name: { first: string, last: string } },\n\t\tpublic location: string,\n\t\tpublic contact: string,\n\t\tpublic tags: string[],\n\t\tpublic attendees: { _id?: string, name: ({ first: string, last: string } | string), service?: number, leadership?: number, fellowship?: number }[],\n\t\tpublic hoursPerAttendee: {\n\t\t\tservice: number,\n\t\t\tleadership: number,\n\t\t\tfellowship: number\n\t\t},\n\t\tpublic overrideHours: {\n\t\t\tattendee_id: string,\n\t\t\tservice: number,\n\t\t\tleadership: number,\n\t\t\tfellowship: number\n\t\t}[],\n\t\tpublic fundraised: {\n\t\t\tamountRaised: number,\n\t\t\tamountSpent: number,\n\t\t\tusedFor: string\n\t\t},\n\t\tpublic drivers: {\n\t\t\tdriver: string,\n\t\t\tmilesFrom: number,\n\t\t\tmilesTo: number\n\t\t}[],\n\t\tpublic comments: {\n\t\t\tsummary: string,\n\t\t\tstrengths: string,\n\t\t\tweaknesses: string,\n\t\t\timprovements: string\n\t\t},\n\t\tpublic kfamAttendance: {\n\t\t\torg: string,\n\t\t\tnumAttendees: number\n\t\t}[],\n\t\tpublic categories: string[],\n\t\tpublic status: number\n\t) {}\n}\n\nexport class CerfListEntry {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic status: number,\n\t\tpublic time: { start: Date, end: Date },\n\t\tpublic author: { name: string }[]\n\t) {}\n}\n\n// // export interface Cerf extends Partial {\n// \t// \t_id: string,\n// \t// \tname: string,\n// \t// \tstatus: number,\n// \t// \ttime: {\n// \t\t// \t\tstart: Date,\n// \t\t// \t\tend: Date\n// \t\t// \t},\n// \t\t// \t// author\n// \t\t// }\n\n// \t\texport interface CerfData {\n// \t\t\treadonly club_id: string,\n// \t\t\treadonly division_id: string,\n// \t\t\tauthor: { _id: string, name: { first: string, last: string } },\n// \t\t\tchair: { _id: string, name: { first: string, last: string } },\n// \t\t\tlocation: string,\n// \t\t\tcontact: string,\n// \t\t\ttags: string[],\n// \t\t\tattendees: { _id?: string, name: ({ first: string, last: string } | string), service?: number, leadership?: number, fellowship?: number }[],\n// \t\t\thoursPerAttendee: {\n// \t\t\t\tservice: number,\n// \t\t\t\tleadership: number,\n// \t\t\t\tfellowship: number\n// \t\t\t}\n// \t\t\toverrideHours: {\n// \t\t\t\tattendee_id: string,\n// \t\t\t\tservice: number,\n// \t\t\t\tleadership: number,\n// \t\t\t\tfellowship: number\n// \t\t\t}[]\n// \t\t\tfundraised: {\n// \t\t\t\tamountRaised: number,\n// \t\t\t\tamountSpent: number,\n// \t\t\t\tusedFor: string\n// \t\t\t}\n// \t\t\tdrivers: {\n// \t\t\t\tdriver: string,\n// \t\t\t\tmilesFrom: number,\n// \t\t\t\tmilesTo: number\n// \t\t\t}[]\n// \t\t\tcomments: {\n// \t\t\t\tsummary: string,\n// \t\t\t\tstrengths: string,\n// \t\t\t\tweaknesses: string,\n// \t\t\t\timprovements: string\n// \t\t\t},\n// \t\t\tkfamAttendance: {\n// \t\t\t\torg: string,\n// \t\t\t\tnumAttendees: number\n// \t\t\t}[]\n// \t\t\tcategories: string[],\n// \t\t}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CerfListComponent.html":{"url":"components/CerfListComponent.html","title":"component - CerfListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CerfListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cerflist/cerflist.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cerflist\n            \n\n            \n                styleUrls\n                ./cerflist.component.css,./_cerflist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cerflist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                list\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickRow\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cerfList\n                            \n                            \n                                pagination\n                            \n                            \n                                pendingCerfs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cerflist/cerflist.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cerfList\n                    \n                \n                \n                    \n                        Type :         Cerf[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pendingCerfs\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cerflist/cerflist.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickRow\n                        \n                        \n                    \n                \n            \n            \n                \nclickRow(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cerflist/cerflist.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cerflist/cerflist.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cerflist/cerflist.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\", \"time.start\", \"author\", \"status\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cerflist/cerflist.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatPaginator, MatSort, MatTableDataSource, MatSortable } from '@angular/material';\n\nimport { Observable } from 'rxjs';\nimport { Cerf } from '@core/models';\n\n@Component({\n\tselector: 'app-cerflist',\n\ttemplateUrl: './cerflist.component.html',\n\tstyleUrls: ['./cerflist.component.css', './_cerflist.component.scss'],\n})\n\nexport class CerfListComponent {\n\tdisplayedColumns = [\"name\", \"time.start\", \"author\", \"status\"];\t// Add \"status\" to display notification of status\n\tlist: MatTableDataSource;\n\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\n  \t@Input() pendingCerfs: boolean;\t// Change some logic if viewing through an MRF\n  \t@Input() pagination: boolean;\n  \t@Input() cerfList: Cerf[];\n\t\t/*\n\t\t\t\"_id\": \"5b74e046245fad079ec5ced4\",\n            \"name\": \"New Even\",\n            \"time\": {\n                \"start\": \"2018-08-16T02:22:57.000Z\",\n                \"end\": \"2018-08-16T02:22:57.000Z\"\n            },\n            \"tags\": [],\n            \"totals\": {\n                \"service\": 0,\n                \"leadership\": 0,\n                \"fellowship\": 0,\n                \"members\": 0\n            }\n            */\n\n\n    constructor(private router: Router) {\n\t\t// this.getCerfs();\n\t\t\n\t}\n\n\tngOnInit() {\n\t\tif(this.pendingCerfs)\n\t\t\tthis.displayedColumns.splice(2, 0, \"status\");\n\t\tif(this.cerfList) {\n\t\t\tthis.list = new MatTableDataSource(this.cerfList);\n\t\t\tthis.pagination = this.cerfList.length > 10 || this.pagination;\t// even if not specified, automatically attach pagination when there's enough elements\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tif(this.list) {\n\t\t\tthis.list.sort = this.sort;\n\t\t\tthis.list.sortingDataAccessor = (data, header) => {\n\t\t\t\tswitch (header) {\n\t\t\t\t\tcase \"time.start\":\n\t\t\t\t\t\treturn new Date(data.time.start);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn data[header]; // https://github.com/angular/material2/issues/9966\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.pagination)\n\t\t\t\tthis.list.paginator = this.paginator;\n\t\t}\n\t}\n\n\tapplyFilter(filterValue: string) {\n\t\tif(this.list) {\n\t\t    filterValue = filterValue.trim(); // Remove whitespace\n\t\t    filterValue = filterValue.toLowerCase(); // list defaults to lowercase matches\n\t\t    this.list.filter = filterValue;\n\t\t}\n\t}\n\n\tclickRow(row) {\n\t\tthis.router.navigate(['/cerf', row._id]);\n\t}\n}\n    \n\n    \n        \n\n  \n    \n    search\n  \n -->\n\n\n    \n\n    \n                \n                    ./cerflist.component.css\n                \n                \n                \n                    ./_cerflist.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          search   -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CerfListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CerfListEntry.html":{"url":"classes/CerfListEntry.html","title":"class - CerfListEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CerfListEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/cerf.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, name: string, status: number, time: literal type, author: literal type[])\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/cerf.model.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        author\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/cerf.model.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cerf {\n\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic club_id: string,\n\t\tpublic division_id: string,\n\t\tpublic time: { start: Date, end: Date },\n\t\tpublic author: { _id: string, name: { first: string, last: string } },\n\t\tpublic chair: { _id: string, name: { first: string, last: string } },\n\t\tpublic location: string,\n\t\tpublic contact: string,\n\t\tpublic tags: string[],\n\t\tpublic attendees: { _id?: string, name: ({ first: string, last: string } | string), service?: number, leadership?: number, fellowship?: number }[],\n\t\tpublic hoursPerAttendee: {\n\t\t\tservice: number,\n\t\t\tleadership: number,\n\t\t\tfellowship: number\n\t\t},\n\t\tpublic overrideHours: {\n\t\t\tattendee_id: string,\n\t\t\tservice: number,\n\t\t\tleadership: number,\n\t\t\tfellowship: number\n\t\t}[],\n\t\tpublic fundraised: {\n\t\t\tamountRaised: number,\n\t\t\tamountSpent: number,\n\t\t\tusedFor: string\n\t\t},\n\t\tpublic drivers: {\n\t\t\tdriver: string,\n\t\t\tmilesFrom: number,\n\t\t\tmilesTo: number\n\t\t}[],\n\t\tpublic comments: {\n\t\t\tsummary: string,\n\t\t\tstrengths: string,\n\t\t\tweaknesses: string,\n\t\t\timprovements: string\n\t\t},\n\t\tpublic kfamAttendance: {\n\t\t\torg: string,\n\t\t\tnumAttendees: number\n\t\t}[],\n\t\tpublic categories: string[],\n\t\tpublic status: number\n\t) {}\n}\n\nexport class CerfListEntry {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic status: number,\n\t\tpublic time: { start: Date, end: Date },\n\t\tpublic author: { name: string }[]\n\t) {}\n}\n\n// // export interface Cerf extends Partial {\n// \t// \t_id: string,\n// \t// \tname: string,\n// \t// \tstatus: number,\n// \t// \ttime: {\n// \t\t// \t\tstart: Date,\n// \t\t// \t\tend: Date\n// \t\t// \t},\n// \t\t// \t// author\n// \t\t// }\n\n// \t\texport interface CerfData {\n// \t\t\treadonly club_id: string,\n// \t\t\treadonly division_id: string,\n// \t\t\tauthor: { _id: string, name: { first: string, last: string } },\n// \t\t\tchair: { _id: string, name: { first: string, last: string } },\n// \t\t\tlocation: string,\n// \t\t\tcontact: string,\n// \t\t\ttags: string[],\n// \t\t\tattendees: { _id?: string, name: ({ first: string, last: string } | string), service?: number, leadership?: number, fellowship?: number }[],\n// \t\t\thoursPerAttendee: {\n// \t\t\t\tservice: number,\n// \t\t\t\tleadership: number,\n// \t\t\t\tfellowship: number\n// \t\t\t}\n// \t\t\toverrideHours: {\n// \t\t\t\tattendee_id: string,\n// \t\t\t\tservice: number,\n// \t\t\t\tleadership: number,\n// \t\t\t\tfellowship: number\n// \t\t\t}[]\n// \t\t\tfundraised: {\n// \t\t\t\tamountRaised: number,\n// \t\t\t\tamountSpent: number,\n// \t\t\t\tusedFor: string\n// \t\t\t}\n// \t\t\tdrivers: {\n// \t\t\t\tdriver: string,\n// \t\t\t\tmilesFrom: number,\n// \t\t\t\tmilesTo: number\n// \t\t\t}[]\n// \t\t\tcomments: {\n// \t\t\t\tsummary: string,\n// \t\t\t\tstrengths: string,\n// \t\t\t\tweaknesses: string,\n// \t\t\t\timprovements: string\n// \t\t\t},\n// \t\t\tkfamAttendance: {\n// \t\t\t\torg: string,\n// \t\t\t\tnumAttendees: number\n// \t\t\t}[]\n// \t\t\tcategories: string[],\n// \t\t}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CerfNavResolver.html":{"url":"guards/CerfNavResolver.html","title":"guard - CerfNavResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CerfNavResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/cerf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/cerf-resolver.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/cerf-resolver.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, RoutesRecognized } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, catchError, tap } from 'rxjs/operators';\n\nimport { Cerf, Member } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MyCerfsResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMyCerfList().pipe(map(res => {\n\t\t\tif(res['success'])\n\t\t\t\treturn res['result'];\n\t\t\treturn null;\n\t\t}),\n\t\tcatchError(err => {\n\t\t\tconsole.log(\"Error retrieving data\");\n\t\t\treturn of([]);\n\t\t})  );//,\n\t\t// tap(res => this.apiService.routeMrf = false));\n\t}\n}\n\n@Injectable( { providedIn: 'root' })\nexport class CerfNavResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private auth: AuthService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\treturn true;//this.apiService.isRouteMrf;\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CerfService.html":{"url":"injectables/CerfService.html","title":"injectable - CerfService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CerfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cerf.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cerf\n                            \n                            \n                                    Private\n                                cerfForm\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAttendee\n                            \n                            \n                                addToMRF\n                            \n                            \n                                blankCerf\n                            \n                            \n                                    Private\n                                createReactiveForm\n                            \n                            \n                                deleteCerf\n                            \n                            \n                                dispatchNewCerf\n                            \n                            \n                                dispatchUpdate\n                            \n                            \n                                getCerf\n                            \n                            \n                                getCerfForm\n                            \n                            \n                                    Public\n                                getCerfFromForm\n                            \n                            \n                                loadCerf\n                            \n                            \n                                logForm\n                            \n                            \n                                removeFromMRF\n                            \n                            \n                                setCerf\n                            \n                            \n                                submitCerf\n                            \n                            \n                                unsubmitCerf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, authService: AuthService, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/cerf.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAttendee\n                        \n                        \n                    \n                \n            \n            \n                \naddAttendee(name: string, service: number, leadership: number, fellowship: number, paid: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    service\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    leadership\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fellowship\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToMRF\n                        \n                        \n                    \n                \n            \n            \n                \naddToMRF()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blankCerf\n                        \n                        \n                    \n                \n            \n            \n                \nblankCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createReactiveForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReactiveForm(model: Cerf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                Cerf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCerf\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchNewCerf\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchNewCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdate\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCerf\n                        \n                        \n                    \n                \n            \n            \n                \ngetCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCerfForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetCerfForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCerfFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCerfFromForm(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCerf\n                        \n                        \n                    \n                \n            \n            \n                \nloadCerf(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the CERF to fetch from the back-end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The API call observable and loading side-effect\nFetches the CERF from the back-end and loads it into the service\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logForm\n                        \n                        \n                    \n                \n            \n            \n                \nlogForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromMRF\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromMRF()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCerf\n                        \n                        \n                    \n                \n            \n            \n                \nsetCerf(cerf: Cerf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cerf\n                                    \n                                                Cerf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitCerf\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubmitCerf\n                        \n                        \n                    \n                \n            \n            \n                \nunsubmitCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cerf.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cerf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cerf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cerf.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cerfForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cerf.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/services/cerf.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cerf } from '@core/models';\nimport { ApiService } from './api.service';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\n@Injectable()\nexport class CerfService {\n\tprivate cerf: Cerf;\n\tprivate cerfForm: BehaviorSubject = new BehaviorSubject(undefined);\n\tprivate user;\n\n\tconstructor(private apiService: ApiService, private authService: AuthService, private builder: FormBuilder)\n\t{\n\t\tthis.user = authService.getUser();\n\t}\n\n\tblankCerf() {\n\t\treturn new Cerf(\"new\",\"New Event\",this.user.club_id,this.user.division_id,\n\t\t\t{start: new Date(), end: new Date() }, // time\n\t\t\t{ _id: this.user._id, name: { first: \"\", last: \"\"} }, // author\n\t\t\t{ _id: this.user._id, name: { first: \"\", last: \"\"} }, // chair\n\t\t\t\"\", // location\n\t\t\t\"\", // contact\n\t\t\t[],\t// tags\n\t\t\t[],\t// attendees\n\t\t\t{service: 0, leadership: 0, fellowship: 0 },\n\t\t\t[],\t// override hours\n\t\t\t{ amountRaised: 0, amountSpent: 0, usedFor: \"\" },\n\t\t\t[],\t// drivers\n\t\t\t{ summary: \"\", strengths: \"\", weaknesses: \"\", improvements: \"\" },\n\t\t\t[], // kfam attendance\n\t\t\t[], // categories\n\t\t\t(this.user.access.club > 1 ? 1 : 0) // status\n\t\t\t)\n\t}\n\n\n\t/**\n\t * @param {string} id The id of the CERF to fetch from the back-end\n\t * @returns The API call observable and loading side-effect\n\t * Fetches the CERF from the back-end and loads it into the service\n\t */\n\tloadCerf(id: string) {\n\t\t// make api call and adapt it to local variable\n\t\tconsole.log(id);\n\t\treturn this.apiService.getCerf(id).pipe(tap(response => {\n\t\t\tthis.cerf = response.result;\t// new Cerf(response.result)?\n\t\t\tthis.cerfForm.next(this.createReactiveForm(this.cerf));\n\t\t}));\n\t\t// this.cerfForm.next(this.createReactiveForm(this.blankCerf()));\n\t}\n\n\tdispatchNewCerf() {\n\t\treturn this.apiService.createNewCerf(this.getCerfFromForm(this.cerfForm.value));\n\t}\n\n\tdispatchUpdate() {\n\t\treturn this.apiService.updateCerf(this.getCerfFromForm(this.cerfForm.value));\n\t}\n\n\tgetCerf() {\n\t\treturn this.cerf;\n\t}\n\n\tgetCerfForm() {\n\t\tconsole.log(this.cerfForm.value);\n\t\treturn this.cerfForm.value;\t// return asObservable instead pros/cons?\n\t}\n\n\t/*\n\tgetters for identifiable subcomponents, e.g. attendees\n\t*/\n\n\tsetCerf(cerf: Cerf) {\n\t\t// Initial thought would be to tie this local object to the DOM, but this object doesn't have to be binded to the DOM form\n\t\tthis.cerf = cerf;\n\t}\n\t// setCerfFromForm(cerf: FormGroup) {}\n\n\t/*\n\tsetters for identifiable subcomponents, e.g. attendees\n\t*/\n\n\tdeleteCerf() {\n\t\t// Can we ensure cerf and cerfForm are in sync\n\t\treturn this.apiService.deleteCerf(this.cerf._id);\n\t}\n\n\tsubmitCerf() {\n\t\treturn this.apiService.changeCerfStatus(this.cerf._id, \"SUBMIT\");\n\t}\n\n\tunsubmitCerf() {\n\t\treturn this.apiService.changeCerfStatus(this.cerf._id, \"UNSUBMIT\");\n\t}\n\n\taddToMRF() {\n\t\treturn this.apiService.changeCerfStatus(this.cerf._id, \"CONFIRM\");\n\t}\n\n\tremoveFromMRF() {\n\t\treturn this.apiService.changeCerfStatus(this.cerf._id, \"UNCONFIRM\");\n\t}\n\n\taddAttendee(name: string, service: number, leadership: number, fellowship: number, paid: boolean)\n\t{\n\t\t// update form with new attendee\n\t}\n\n\n\n\tprivate createReactiveForm(model: Cerf): FormGroup {\n\t\tlet form = this.builder.group({\n\t\t\tname: [model.name],\n\t\t\tchair_id: [model.chair._id],\n\t\t\tauthor: [model.author.name.first + \" \" + model.author.name.last],\t// could create a name concatenator function...\n\t\t\ttime: this.builder.group(model.time),\n\t\t\tlocation: model.location,\n\t\t\tcontact: model.contact,\n\t\t\ttags: this.builder.array(model.tags),\n\t\t\tattendees: this.builder.array(model.attendees.map(eachAttendee => this.builder.group(eachAttendee))),\n\t\t\thoursPerAttendee: this.builder.group(model.hoursPerAttendee),\n\t\t\toverrideHours: this.builder.array(model.overrideHours.map(eachOverride => this.builder.group(eachOverride))),\n\t\t\tfundraised: this.builder.group(model.fundraised),\n\t\t\tcategories: this.builder.array(model.categories),\n\t\t\tcomments: this.builder.group(model.comments),\n\t\t\tdrivers: this.builder.array(model.drivers.map(eachDriver => this.builder.group(eachDriver))),\n\t\t\tkfamAttendance: this.builder.array(model.kfamAttendance.map(eachkfam => this.builder.group(eachkfam)))\n\t\t})\n\t\treturn form;\n\t}\n\n\tlogForm() {\n\t\tconsole.log(this.cerfForm.value);\n\t}\n\n\tpublic getCerfFromForm(form: FormGroup) {\n\t\tlet rawCerf = form.getRawValue();\n\n\t\t/* Split up attendees and overrideHours */\n\t\tconst defaultHours = form.get('hoursPerAttendee').value;\n\t\tconst attendees = rawCerf.attendees.filter(a => (a.service == defaultHours.service && a.leadership == defaultHours.leadership\n\t\t\t&& a.fellowship == defaultHours.fellowship)).map(attendee => attendee.member);\n\t\tconst overrideHours = rawCerf.attendees.filter(a => (a.service != defaultHours.service || a.leadership != defaultHours.leadership\n\t\t\t|| a.fellowship != defaultHours.fellowship));\n\t\tconsole.log(overrideHours);\n\t\toverrideHours.forEach((attendee, index, arr) => arr[index]['attendee_id'] = arr[index].member);\n\t\trawCerf.attendees = attendees;\n\t\trawCerf.overrideHours = overrideHours;\n\n\t\tObject.assign(this.cerf, rawCerf);\n\t\tconsole.log(this.cerf);\n\t\treturn this.cerf;\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClubAdministrationComponent.html":{"url":"components/ClubAdministrationComponent.html","title":"component - ClubAdministrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClubAdministrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/administration/administration.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-administration\n            \n\n            \n                styleUrls\n                ./administration.component.css,./_administration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./administration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                club\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                expandedMember\n                            \n                            \n                                gettingCode\n                            \n                            \n                                list\n                            \n                            \n                                memberRegistrationMode\n                            \n                            \n                                members\n                            \n                            \n                                mockData\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                getCode\n                            \n                            \n                                getMemberCode\n                            \n                            \n                                loadTooltip\n                            \n                            \n                                newMember\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, auth: AuthService, route: ActivatedRoute, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/administration/administration.component.ts:110\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMemberCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetMemberCode(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nloadTooltip(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newMember\n                        \n                        \n                    \n                \n            \n            \n                \nnewMember()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            club\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\", \"year\", \"position\", \"code\", \"actions\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gettingCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberRegistrationMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\t// replace with api call to /club/administration\n\t\tmeeting: {\n\t\t\tfrequency: \"\",\n\t\t\tdate: \"\",\n\t\t\ttime: {\n\t\t\t\tstart: \"\",\n\t\t\t\tend: \"\"\n\t\t\t},\n\t\t\tlocation: \"\"\n\t\t},\n\t\tadvisors: {\n\t\t\tfaculty: {\n\t\t\t\tname: \"Nguyet\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t},\n\t\t\tkiwanis: {\n\t\t\t\tname: \"\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t}\n\t\t},\n\t\tmembers: [\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Chris\",\n\t\t\t\t\tlast: \"Lam\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Technology Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Nhi\",\n\t\t\t\t\tlast: \"Truong\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Graphics Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MemberService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\n\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n\tselector: 'app-administration',\n\ttemplateUrl: './administration.component.html',\n\tstyleUrls: ['./administration.component.css', './_administration.component.scss'],\n\tanimations: [\n\t    trigger('detailExpand', [\n\t      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n\t      state('expanded', style({height: '*'})),\n\t      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\t    ]),\n\t  ]\n})\n\nexport class ClubAdministrationComponent {\n\n\tmembers: Member[];\n\tclub: string;\n\n\t@ViewChild(MatPaginator) paginator;\n\t@ViewChild(MatSort) sort;\n\tlist: MatTableDataSource;\n\tdisplayedColumns: string[] = [\"name\", \"year\", \"position\", \"code\", \"actions\"];\n\n\tmemberRegistrationMode: boolean = false;\n\tgettingCode: boolean = false;\n\n\tmockData = {\t// replace with api call to /club/administration\n\t\tmeeting: {\n\t\t\tfrequency: \"\",\n\t\t\tdate: \"\",\n\t\t\ttime: {\n\t\t\t\tstart: \"\",\n\t\t\t\tend: \"\"\n\t\t\t},\n\t\t\tlocation: \"\"\n\t\t},\n\t\tadvisors: {\n\t\t\tfaculty: {\n\t\t\t\tname: \"Nguyet\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t},\n\t\t\tkiwanis: {\n\t\t\t\tname: \"\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t}\n\t\t},\n\t\tmembers: [\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Chris\",\n\t\t\t\t\tlast: \"Lam\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Technology Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Nhi\",\n\t\t\t\t\tlast: \"Truong\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Graphics Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\texpandedMember = null;\n\n\tconstructor(private memberService: MemberService,\n\t\tprivate auth: AuthService, private route: ActivatedRoute, private dialog: MatDialog,\n\t\tprivate snackBar: MatSnackBar) {\n\t\tthis.members = this.route.snapshot.data['members'];\n\t\tconsole.log(this.members);\n\n\t\tthis.club = this.auth.getUser().club_id;\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.members);\n\t\t// this.list = new MatTableDataSource(this.mockData.members);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.list.paginator = this.paginator;\n\t\tthis.list.sort = this.sort;\n\t}\n\n\tapplyFilter(filterValue: string) { \n\t\tfilterValue = filterValue.trim();\n\t\tfilterValue = filterValue.toLowerCase();\n\t\tthis.list.filter = filterValue;\n\t}\n\n\tupdateList() {\n\t\tthis.memberService.getMembers().subscribe(res => {\n\t\t\tthis.members=res || [];\n\t\t\tthis.list.data=res || [];\n\t\t});\n\t}\n\n\tloadTooltip(row) {\n\t\tconsole.log(row);\n\t\treturn row;\n\t}\n\n\tnewMember() {\n\t\tconst dialogRef = this.dialog.open(DialogNewMember, {\n\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif(result) {\n\t\t\t\tconsole.log(result);\n\t\t\t\tthis.memberService.newMember(result.firstName, result.lastName).subscribe(res => this.updateList());\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCode(i) {\n\t\tconsole.log(i);\n\t\tthis.memberService.getRegistrationCode(this.members[i]._id).subscribe(res => this.members[i].code = res);\n\t}\n\n\tgetMemberCode(row) {\n\t\tif(!this.memberRegistrationMode)\n\t\t\treturn;\n\t\tthis.gettingCode = true;\n\t\tthis.memberRegistrationMode = false;\n\t\tthis.memberService.getRegistrationCode(row._id).subscribe( (res:any) => {\n\t\t\tconsole.log(res);\n\t\t\tif(res.success) {\n\t\t\t\tthis.members[this.members.findIndex(member => member._id == row._id)]['code']=res.result;\n\t\t\t\tthis.list.data = this.members;\n\t\t\t} else if(res.error) {\n\t\t\t\tthis.snackBar.open(res.error, 'close', {duration: 2000});\n\t\t\t} else {\n\t\t\t\tthis.snackBar.open('Failed getting code!', 'close', {duration: 2000});\n\t\t\t}\n\t\t\tthis.gettingCode = false;\n\t\t});\n\t}\n\n}\n\n\n\n@Component({\n\tselector: 'dialog-new-member',\n\ttemplateUrl: 'dialog-new-member.html'\n})\nexport class DialogNewMember {\n\tfirst: string;\n\tlast: string;\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n    \n\n    \n        {{club | clubID}}\n\n\n\n\n\n  Meetings\n  \n    Frequency\n    \n  \n  \n    Day\n    \n  \n  \n    Start Time\n    \n  \n  \n    End Time\n    \n  \n  \n    Location\n    \n  \n\n  \n\n  \n    Club Website\n    \n  \n  \n    Club Mailing List\n    \n  \n\n  \n\n  Faculty\n  \n    Name\n    \n  \n  \n    Phone\n    \n  \n  \n    Address\n    \n  \n  \n    Email\n    \n  \n\n  \n\n  Kiwanis\n  \n    Name\n    \n  \n  \n    Phone\n    \n  \n  \n    Address\n    \n  \n  \n    Email\n    \n  \n  \n  \n\n\n  Member Roster\n\n  Generate Registration Code for Member -->\n  \n\n  \n    \n    search\n  \n\n\n  Add Member\n\n  \n\n    \n    \n      Name\n        dataIndex instead of index -->\n        {{row.name}}\n      \n    \n\n    \n    \n      \n        \n          Email: {{row.email}}\n          Pay Date: {{row.pay_date}}\n          Alumni: {{row.alumni}}\n        \n      \n    \n\n    \n \n      Email\n      {{row.email}}\n     -->\n\n    \n\n      Club ID\n      {{row.club_id}}\n     -->\n\n    \n\n      Access\n      {{row.access | json}}\n     -->\n\n    \n    \n      Position\n        dataIndex instead of index -->\n        {{row.position}}\n      \n    \n\n    \n    \n      Year\n        dataIndex instead of index -->\n        {{row.year}}\n      \n    \n\n    \n    \n      Registration code\n        dataIndex instead of index -->\n        \n          \n            \n          \n        \n        Get Registration Code\n      \n    \n\n    \n      \n      \n      \n      \n    \n\n    \n    \n    \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./administration.component.css\n                \n                /*button {\n\tmargin-bottom: 16px;\n}*/\n#header button {\n\tmargin-left: 16px;\n}\n\n.selecting mat-row {\n\tcursor: pointer;\n}\n\nmat-row:not(.member-detail-row):hover {\n  background: #f5f5f5;\n}\n\n.member-detail-row {\n\theight: 0;\n}\n\n.member-detail {\n\toverflow: hidden;\n}\n\n.expanded-row, .mat-column-expandedDetail {\n\tborder-bottom-width: 0;\n}\n                \n                    ./_administration.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{club | clubID}}  Meetings      Frequency            Day            Start Time            End Time            Location              Club Website            Club Mailing List          Faculty      Name            Phone            Address            Email          Kiwanis      Name            Phone            Address            Email            Member Roster  Generate Registration Code for Member -->            search    Add Member                Name        dataIndex instead of index -->        {{row.name}}                                          Email: {{row.email}}          Pay Date: {{row.pay_date}}          Alumni: {{row.alumni}}                             Email      {{row.email}}     -->          Club ID      {{row.club_id}}     -->          Access      {{row.access | json}}     -->              Position        dataIndex instead of index -->        {{row.position}}                        Year        dataIndex instead of index -->        {{row.year}}                        Registration code        dataIndex instead of index -->                                                        Get Registration Code                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClubAdministrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ClubIDPipe.html":{"url":"pipes/ClubIDPipe.html","title":"pipe - ClubIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ClubIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/utils/clubid.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        clubID\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/clubid.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { MemberService } from '@core/services';\n\n@Pipe({ name: 'clubID' })\nexport class ClubIDPipe implements PipeTransform {\n\n\tconstructor(private memberService: MemberService) {};\n\n\ttransform(value: string): string {\n\t\treturn this.memberService.mapIdToClub(value);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClubsComponent.html":{"url":"components/ClubsComponent.html","title":"component - ClubsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClubsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/clubs/clubs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-clubs\n            \n\n            \n                styleUrls\n                ./clubs.component.css,./_clubs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./clubs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clubs\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newClub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                division\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, auth: AuthService, route: ActivatedRoute, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/clubs/clubs.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        division\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newClub\n                        \n                        \n                    \n                \n            \n            \n                \nnewClub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/clubs/clubs.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/clubs/clubs.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/clubs/clubs.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/clubs/clubs.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Club[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\ntype Club = { _id: string, name: string };\t// move into models\n\n@Component({\n\tselector: 'app-clubs',\n\ttemplateUrl: './clubs.component.html',\n\tstyleUrls: ['./clubs.component.css', './_clubs.component.scss']\n})\nexport class ClubsComponent {\n\n\tclubs: Club[] = [];\n\tlist: MatTableDataSource;\n\tdisplayedColumns: string[] = [\"name\"];\n\n\t@Input() division = null;\n\n\tconstructor(private apiService: ApiService, private auth: AuthService, private route: ActivatedRoute, private dialog: MatDialog) {\n\t\t// this.division = this.auth.getUser().division_id;\n\t\tthis.apiService.getClubs(this.division).subscribe( (res: any) => {\n\t\t\tthis.clubs = res.result;\n\t\t});\t// if null, it'll grab user's division\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.clubs);\n\t}\n\n\tngAfterViewInit() {\n\t}\n\t\n\tupdateList() {\n\t\tthis.apiService.getClubs().subscribe(res => {\n\t\t\tthis.clubs=res;\n\t\t\tthis.list.data=res;\n\t\t});\n\t}\n\n\tnewClub() {\n\t\tconst dialogRef = this.dialog.open(DialogNewClub, {\n\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif(result) {\n\t\t\t\tthis.apiService.newClub(result.name).subscribe(res => this.updateList());\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n@Component({\n\tselector: 'dialog-new-club',\n\ttemplateUrl: 'dialog-new-club.html'\n})\nexport class DialogNewClub {\n\tdivName: string;\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n    \n\n    \n        Clubs in {{ division }}\nAdd Club\n\n\n\n  \n  \n    Name\n      dataIndex instead of index -->\n      {{row.name}}\n    \n  \n\n  \n  \n  \n\n    \n\n    \n                \n                    ./clubs.component.css\n                \n                \n                \n                    ./_clubs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Clubs in {{ division }}Add Club        Name      dataIndex instead of index -->      {{row.name}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClubsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ClubsResolver.html":{"url":"guards/ClubsResolver.html","title":"guard - ClubsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ClubsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/clubs-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/clubs-resolver.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/clubs-resolver.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ApiService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\n\n\n@Injectable( {providedIn: 'root'} )\nexport class ClubsResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getClubs().pipe(map(res => {\n\t\t\tif(!res) {\n\t\t\t\tconsole.log(res);\n\t\t\t\tthis.router.navigate(['']);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn res;\n\t\t}));\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmMessage\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/confirm-dialog/confirm-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/confirm-dialog/confirm-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n\tselector: 'app-confirm-dialog',\n\ttemplateUrl: 'confirm-dialog.component.html',\n\tstyleUrls: ['./confirm-dialog.component.css']\n})\n\nexport class ConfirmDialogComponent {\n\n\tpublic confirmMessage: string;\n\tconstructor(public dialogRef: MatDialogRef) { }\n\n\n}\n    \n\n    \n        Confirm\n{{confirmMessage}}\n\n  Cancel\n  Confirm\n\n    \n\n    \n                \n                    ./confirm-dialog.component.css\n                \n                button {\n\tmargin-left: 5px;\n\tmargin-right: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Confirm{{confirmMessage}}  Cancel  Confirm'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ContentTypeInterceptor.html":{"url":"interceptors/ContentTypeInterceptor.html","title":"interceptor - ContentTypeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ContentTypeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-interceptors/content-type-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/content-type-interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\t// provided in app.module\nexport class ContentTypeInterceptor implements HttpInterceptor {\n\tintercept(request: HttpRequest, next: HttpHandler): Observable>{\n    \t// const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    \trequest.headers.append('Content-Type', 'application/json; charset=utf-8');\n\t\treturn next.handle(request);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nNewFocusInput\n\nNewFocusInput\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nNewFocusInput->CoreModule\n\n\n\n\n\nAppRoutingModule \n\nAppRoutingModule \n\nAppRoutingModule  -->\n\nCoreModule->AppRoutingModule \n\n\n\n\n\nMaterialsModule \n\nMaterialsModule \n\nMaterialsModule  -->\n\nCoreModule->MaterialsModule \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialsModule\n\nMaterialsModule\n\nCoreModule -->\n\nMaterialsModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewFocusInput\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* 3rd party libraries */\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/* Our components */\nimport { CerfComponent, CerfListComponent, \n\t\tMrfComponent, MrfListComponent,\n    MyCerfsComponent,\n\t\tProfileComponent,\n    ClubAdministrationComponent,\n    ConfirmDialogComponent } from '@app/modules/';\nimport { NewFocusInput } from '@core/utils/newfocusinput';\n\n/* Our services */\n// import { DataService } from '@core/data/data.service';\n// import { MemberIDPipe } from '@core/utils/memberid.pipe';\n\n/* Our modules */\nimport { MaterialsModule } from '@app/modules/';\nimport { AppRoutingModule } from '@app/modules/app-routing.module';\n\n/* Other modules */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDatepickerModule, MatMomentDateModule } from '@coachcare/datepicker';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    ColorPickerModule\n  ],\n  declarations: [\n\t // MemberIDPipe\n   NewFocusInput\n  ],\n  providers: [\n    // DataService\n  ],\n  exports: [\n    CommonModule,\n    MaterialsModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    ColorPickerModule\n  ]\n})\nexport class CoreModule {\n  /* make sure CoreModule is imported only by one NgModule the AppModule */\n  constructor (\n    @Optional() @SkipSelf() parentModule: CoreModule\n    // private dataService: DataService \t// We want to instantiate our service so the data is loaded before it's routed to /cerf\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogNewClub.html":{"url":"components/DialogNewClub.html","title":"component - DialogNewClub","body":"\n                   \n\n\n\n\n\n  Components\n  DialogNewClub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/clubs/clubs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-new-club\n            \n\n\n\n\n            \n                templateUrl\n                dialog-new-club.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                divName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/clubs/clubs.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/clubs/clubs.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/clubs/clubs.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\ntype Club = { _id: string, name: string };\t// move into models\n\n@Component({\n\tselector: 'app-clubs',\n\ttemplateUrl: './clubs.component.html',\n\tstyleUrls: ['./clubs.component.css', './_clubs.component.scss']\n})\nexport class ClubsComponent {\n\n\tclubs: Club[] = [];\n\tlist: MatTableDataSource;\n\tdisplayedColumns: string[] = [\"name\"];\n\n\t@Input() division = null;\n\n\tconstructor(private apiService: ApiService, private auth: AuthService, private route: ActivatedRoute, private dialog: MatDialog) {\n\t\t// this.division = this.auth.getUser().division_id;\n\t\tthis.apiService.getClubs(this.division).subscribe( (res: any) => {\n\t\t\tthis.clubs = res.result;\n\t\t});\t// if null, it'll grab user's division\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.clubs);\n\t}\n\n\tngAfterViewInit() {\n\t}\n\t\n\tupdateList() {\n\t\tthis.apiService.getClubs().subscribe(res => {\n\t\t\tthis.clubs=res;\n\t\t\tthis.list.data=res;\n\t\t});\n\t}\n\n\tnewClub() {\n\t\tconst dialogRef = this.dialog.open(DialogNewClub, {\n\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif(result) {\n\t\t\t\tthis.apiService.newClub(result.name).subscribe(res => this.updateList());\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n@Component({\n\tselector: 'dialog-new-club',\n\ttemplateUrl: 'dialog-new-club.html'\n})\nexport class DialogNewClub {\n\tdivName: string;\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n    \n\n    \n        New Club\n\n\t\n\t\tClub Name\n\t\t\n\t\n\n\n\n\tCancel\n\tSubmit\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Club\t\t\tClub Name\t\t\t\tCancel\tSubmit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogNewClub'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogNewMember.html":{"url":"components/DialogNewMember.html","title":"component - DialogNewMember","body":"\n                   \n\n\n\n\n\n  Components\n  DialogNewMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/administration/administration.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-new-member\n            \n\n\n\n\n            \n                templateUrl\n                dialog-new-member.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                first\n                            \n                            \n                                last\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/administration/administration.component.ts:196\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/administration/administration.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:195\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/administration/administration.component.ts:196\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MemberService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\n\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n\tselector: 'app-administration',\n\ttemplateUrl: './administration.component.html',\n\tstyleUrls: ['./administration.component.css', './_administration.component.scss'],\n\tanimations: [\n\t    trigger('detailExpand', [\n\t      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n\t      state('expanded', style({height: '*'})),\n\t      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n\t    ]),\n\t  ]\n})\n\nexport class ClubAdministrationComponent {\n\n\tmembers: Member[];\n\tclub: string;\n\n\t@ViewChild(MatPaginator) paginator;\n\t@ViewChild(MatSort) sort;\n\tlist: MatTableDataSource;\n\tdisplayedColumns: string[] = [\"name\", \"year\", \"position\", \"code\", \"actions\"];\n\n\tmemberRegistrationMode: boolean = false;\n\tgettingCode: boolean = false;\n\n\tmockData = {\t// replace with api call to /club/administration\n\t\tmeeting: {\n\t\t\tfrequency: \"\",\n\t\t\tdate: \"\",\n\t\t\ttime: {\n\t\t\t\tstart: \"\",\n\t\t\t\tend: \"\"\n\t\t\t},\n\t\t\tlocation: \"\"\n\t\t},\n\t\tadvisors: {\n\t\t\tfaculty: {\n\t\t\t\tname: \"Nguyet\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t},\n\t\t\tkiwanis: {\n\t\t\t\tname: \"\",\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\"\n\t\t\t}\n\t\t},\n\t\tmembers: [\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Chris\",\n\t\t\t\t\tlast: \"Lam\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Technology Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: {\n\t\t\t\t\tfirst: \"Nhi\",\n\t\t\t\t\tlast: \"Truong\",\n\t\t\t\t\t_id: \"something\"\n\t\t\t\t},\n\t\t\t\tphone: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tbirthday: \"\",\n\t\t\t\tgrad_year: \"\",\n\t\t\t\tpay_date: \"\",\n\t\t\t\trenew_date: \"\",\n\t\t\t\talumni: false,\n\t\t\t\tactive: true,\n\t\t\t\tposition: \"Graphics Chair\",\n\t\t\t\tboard: {\n\t\t\t\t\teboard: false,\n\t\t\t\t\taboard: true\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\texpandedMember = null;\n\n\tconstructor(private memberService: MemberService,\n\t\tprivate auth: AuthService, private route: ActivatedRoute, private dialog: MatDialog,\n\t\tprivate snackBar: MatSnackBar) {\n\t\tthis.members = this.route.snapshot.data['members'];\n\t\tconsole.log(this.members);\n\n\t\tthis.club = this.auth.getUser().club_id;\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.members);\n\t\t// this.list = new MatTableDataSource(this.mockData.members);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.list.paginator = this.paginator;\n\t\tthis.list.sort = this.sort;\n\t}\n\n\tapplyFilter(filterValue: string) { \n\t\tfilterValue = filterValue.trim();\n\t\tfilterValue = filterValue.toLowerCase();\n\t\tthis.list.filter = filterValue;\n\t}\n\n\tupdateList() {\n\t\tthis.memberService.getMembers().subscribe(res => {\n\t\t\tthis.members=res || [];\n\t\t\tthis.list.data=res || [];\n\t\t});\n\t}\n\n\tloadTooltip(row) {\n\t\tconsole.log(row);\n\t\treturn row;\n\t}\n\n\tnewMember() {\n\t\tconst dialogRef = this.dialog.open(DialogNewMember, {\n\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif(result) {\n\t\t\t\tconsole.log(result);\n\t\t\t\tthis.memberService.newMember(result.firstName, result.lastName).subscribe(res => this.updateList());\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCode(i) {\n\t\tconsole.log(i);\n\t\tthis.memberService.getRegistrationCode(this.members[i]._id).subscribe(res => this.members[i].code = res);\n\t}\n\n\tgetMemberCode(row) {\n\t\tif(!this.memberRegistrationMode)\n\t\t\treturn;\n\t\tthis.gettingCode = true;\n\t\tthis.memberRegistrationMode = false;\n\t\tthis.memberService.getRegistrationCode(row._id).subscribe( (res:any) => {\n\t\t\tconsole.log(res);\n\t\t\tif(res.success) {\n\t\t\t\tthis.members[this.members.findIndex(member => member._id == row._id)]['code']=res.result;\n\t\t\t\tthis.list.data = this.members;\n\t\t\t} else if(res.error) {\n\t\t\t\tthis.snackBar.open(res.error, 'close', {duration: 2000});\n\t\t\t} else {\n\t\t\t\tthis.snackBar.open('Failed getting code!', 'close', {duration: 2000});\n\t\t\t}\n\t\t\tthis.gettingCode = false;\n\t\t});\n\t}\n\n}\n\n\n\n@Component({\n\tselector: 'dialog-new-member',\n\ttemplateUrl: 'dialog-new-member.html'\n})\nexport class DialogNewMember {\n\tfirst: string;\n\tlast: string;\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n    \n\n    \n        New Member\n\n\t\n\t\tFirst Name\n\t\t\n\t\n\t\n\t\tLast Name\n\t\t\n\t\n\n\n\n\tCancel\n\tSubmit\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Member\t\t\tFirst Name\t\t\t\t\t\tLast Name\t\t\t\tCancel\tSubmit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogNewMember'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DivisionIDPipe.html":{"url":"pipes/DivisionIDPipe.html","title":"pipe - DivisionIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DivisionIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/utils/divisionid.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        divisionID\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/divisionid.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { MemberService } from '@core/services';\n\n@Pipe({ name: 'divisionID' })\nexport class DivisionIDPipe implements PipeTransform {\n\n\tconstructor(private memberService: MemberService) {};\n\n\ttransform(value: string): string {\n\t\treturn this.memberService.mapIdToDivision(value);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DivisionsComponent.html":{"url":"components/DivisionsComponent.html","title":"component - DivisionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DivisionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/divisions/divisions.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-divisions\n            \n\n            \n                styleUrls\n                ./divisions.component.css,./_divisions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./divisions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                divisions\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newMember\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDivision\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, memberService: MemberService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/divisions/divisions.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newMember\n                        \n                        \n                    \n                \n            \n            \n                \nnewMember()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/divisions/divisions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/divisions/divisions.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/divisions/divisions.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDivision\n                        \n                        \n                    \n                \n            \n            \n                \nopenDivision(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/divisions/divisions.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/divisions/divisions.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Division[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/divisions/divisions.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/divisions/divisions.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MemberService } from '@core/services';\nimport { ApiService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\n\n\ntype Division = {_id: string, name: string};\n\n@Component({\n\tselector: 'app-divisions',\n\ttemplateUrl: './divisions.component.html',\n\tstyleUrls: ['./divisions.component.css', './_divisions.component.scss']\n})\nexport class DivisionsComponent {\n\n\tdivisions: Division[] = [];\n\tlist: MatTableDataSource;\n\tdisplayedColumns: string[] = [\"name\"];\n\n\tconstructor(private apiService: ApiService, private memberService: MemberService, private dialog: MatDialog, private snackBar: MatSnackBar) {\n\t\t// this.club = this.auth.getUser().club_id;\n\t\tthis.apiService.getDivisions().subscribe( (res: any) => {\n\t\t\tthis.divisions = res.result;\n\t\t})\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.divisions);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tnewMember() {\n\t\t\n\t}\n\n\n\topenDivision(row) {\n\t\tconsole.log(row);\n\t}\n\n}\n\n\n\n// @Component({\n// \tselector: 'dialog-new-member',\n// \ttemplateUrl: 'dialog-new-member.html'\n// })\n// export class DialogNewMember {\n// \tfirst: string;\n// \tlast: string;\n\n// \tconstructor(public dialogRef: MatDialogRef) {\n\n// \t}\n\n// \tonNoClick(): void {\n// \t\tthis.dialogRef.close();\n// \t}\n// }\n    \n\n    \n         \n\n  \n  \n    Name\n      dataIndex instead of index -->\n      {{row.name}}\n    \n  \n\n  \n  \n  \n\n    \n\n    \n                \n                    ./divisions.component.css\n                \n                \n                \n                    ./_divisions.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         Name      dataIndex instead of index -->      {{row.name}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DivisionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EqualValidator.html":{"url":"directives/EqualValidator.html","title":"directive - EqualValidator","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EqualValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/signup/signup.component.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reverse\n                            \n                            \n                                    Public\n                                validateEqual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReverse\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validateEqual: string, reverse: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/signup/signup.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateEqual\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reverse\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/signup/signup.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reverse\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('reverse')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validateEqual\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('validateEqual')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReverse\n                    \n                \n\n                \n                    \n                        getisReverse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/signup/signup.component.ts:19\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Router } from '@angular/router';\n\nimport { Directive, forwardRef, Provider, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n// This is just for checking confirm password matching...\n@Directive({\n  selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => \n      EqualValidator), multi: true }\n  ]\n})\nexport class EqualValidator implements Validator {\n constructor(@Attribute('validateEqual') public validateEqual: string, @Attribute('reverse') public reverse: string) {}\n  private get isReverse() {\n     if (!this.reverse) return false;\n     return this.reverse === 'true' ? true: false;\n  }\n  validate(c: AbstractControl): { [key: string]: any } {\n    // self value\n    let v = c.value;\n    // control value\n    let e = c.root.get(this.validateEqual);\n    // value not equal\n    console.log(e, c);\n    if (e && v !== e.value && !this.isReverse) return {\n      validateEqual: false\n    }\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) e.setErrors(null);\n    }\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({ validateEqual: false })\n    }\n    return null;\n  }\n}\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', './_signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  email: string;\n  code: string;\n  password: string;\n  confirmPassword: string;\n  error: string = \"\";\n  matchedPass: boolean = true;\n\n\n  ngOnInit() { }\n\n  // editUserData(firstName, lastName, school, division) {\n  //   this.firstName = firstName;\n  //   this.lastName = lastName;\n  //   this.school = school;\n  //   this.division = division;\n  //   this.dataCorrect = true;\n  //   this.formUnlocked = false;\n  // }\n\n  // unlockForm(){\n  //   this.formUnlocked = true;\n  // }\n\n  // isFormUnlocked(){\n  //   return this.formUnlocked;\n  // }\n\n  // setDataCorrect(x){\n  //   if(x>0){ this.dataCorrect = true; }\n  //   else{ this.dataCorrect = false; }\n  // }\n\n  // isDataCorrect() {\n  //   return this.dataCorrect;\n  // }\n\n  passwordsMatch(){\n    return (this.password == this.confirmPassword);\n  }\n\n  signup({value, valid}){\n    if(value.Password == value.ConfirmPassword){\n      this.auth.signup(value.Code, value.Email, value.Password).subscribe(\n        (res: any) => {\n          if(!res.success)\n            this.error = res.error;\n        },\n        error=>console.error(error),\n        ()=> {}\n      );\n    }\n    else\n    {\n      this.matchedPass = false;\n    }\n  }\n\n  // signup( code, email, user, pass ){\n  //   this.auth.signup(code, email, user, pass).subscribe(res=> { this.router.navigate(['']) }, error=>console.error(error), ()=> {});\n  // }\n  // TODO: update this to reflect any user corrections to database\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-interceptors/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/error-interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\t// provided in app.module\nexport class ErrorInterceptor implements HttpInterceptor {\n\tintercept(request: HttpRequest, next: HttpHandler): Observable>{\n\t\treturn next.handle(request).pipe(map(event => {\n\t\t\tif(event instanceof HttpResponse) {\n\t\t\t\tif(event.body.success == false)\n\t\t\t\t\tconsole.log(event.body);\n\t\t\t}\n\t\treturn event;\n\t\t}),\n\t\tcatchError(err => { console.log(err); return throwError(err); } ));\n\t\t// TODO: some authentication stuff if error caught\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ExitGuard.html":{"url":"guards/ExitGuard.html","title":"guard - ExitGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ExitGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/exit.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDeactivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: CanComponentDeactivate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/exit.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                CanComponentDeactivate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n\tcanDeactivate: () => Observable|Promise|boolean;\n}\n\n@Injectable( { providedIn: 'root' })\nexport class ExitGuard implements CanDeactivate {\n\t\tcanDeactivate(component: CanComponentDeactivate) {\n\t\t\treturn component.canDeactivate ? component.canDeactivate() : true;\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FAQsComponent.html":{"url":"components/FAQsComponent.html","title":"component - FAQsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FAQsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/faqs/faqs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faqs\n            \n\n            \n                styleUrls\n                ./faqs.component.css,./_faqs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faqs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/faqs/faqs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/faqs/faqs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faqs',\n  templateUrl: './faqs.component.html',\n  styleUrls: ['./faqs.component.css', './_faqs.component.scss']\n})\nexport class FAQsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis ipsum ligula. Aliquam aliquam urna purus, et lobortis diam ultricies vel. Duis scelerisque turpis erat, non fringilla urna porttitor id. Curabitur a nibh erat. Vivamus ac gravida tortor. Suspendisse fermentum justo tristique dolor maximus semper. Aliquam tristique nulla ligula, vel hendrerit justo iaculis eu.\n\nPellentesque vitae eros in nisl imperdiet scelerisque. Sed venenatis id sapien ac pharetra. Sed quam neque, lacinia eu nulla et, consectetur venenatis libero. Morbi ac risus quis ligula condimentum elementum. Vivamus nec volutpat ligula. Aliquam a viverra sapien. Nam lacinia euismod eros in semper. Ut convallis ligula ut nisl elementum vehicula. Aliquam vel suscipit libero, vel vulputate arcu. Quisque non sollicitudin lorem. Duis id urna massa. Donec non dolor nulla. Phasellus tempor commodo erat facilisis rhoncus. Quisque at efficitur tortor.\n\nAliquam scelerisque lacus ut placerat consectetur. Curabitur sit amet ligula ligula. Nam posuere eros congue nunc gravida eleifend. Nunc luctus, odio at auctor mollis, nisl nibh convallis sem, id ornare turpis lacus quis augue. Nunc id urna auctor, rhoncus nisl sit amet, rhoncus sapien. Sed commodo congue libero, in auctor mauris. Pellentesque metus ligula, consequat vitae porttitor in, tincidunt vel diam. Sed eu metus eu ligula eleifend blandit id sit amet justo. Pellentesque hendrerit, diam ac fermentum fringilla, urna nisi mollis felis, quis dapibus diam leo eu elit. Etiam tempor, neque at aliquam vehicula, magna tellus varius mauris, ac posuere augue nisi ut urna. Aliquam ornare dui sapien, ac convallis massa egestas sed. Suspendisse porttitor condimentum dolor, a mollis velit ultrices non.\n\nDonec blandit pellentesque iaculis. Cras semper odio ac eros lacinia, varius imperdiet libero fermentum. Donec venenatis tristique orci id tempor. Suspendisse rutrum, erat nec suscipit vulputate, libero ante tempus lorem, id viverra orci urna non leo. Pellentesque in malesuada elit, non luctus ante. Vivamus magna neque, eleifend id suscipit vel, congue ut libero. Cras sed tincidunt sem. Duis elementum nibh vitae sem mattis tristique. Vestibulum pharetra felis metus, at consectetur eros commodo quis.\n\nMaecenas quis finibus nunc. Morbi sit amet elementum massa. Pellentesque vitae massa porttitor, consectetur neque vel, fermentum tellus. Mauris sed justo convallis, hendrerit lacus vitae, eleifend tellus. Curabitur posuere elit sit amet lorem scelerisque elementum. Quisque quis vulputate felis, sed rhoncus est. Nam sapien lorem, consequat sed laoreet et, porta at dui. Ut porttitor nibh arcu, et lobortis.\n\n\t\n\t\tabc123\n\t\n\n    \n\n    \n                \n                    ./faqs.component.css\n                \n                \n                \n                    ./_faqs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis ipsum ligula. Aliquam aliquam urna purus, et lobortis diam ultricies vel. Duis scelerisque turpis erat, non fringilla urna porttitor id. Curabitur a nibh erat. Vivamus ac gravida tortor. Suspendisse fermentum justo tristique dolor maximus semper. Aliquam tristique nulla ligula, vel hendrerit justo iaculis eu.Pellentesque vitae eros in nisl imperdiet scelerisque. Sed venenatis id sapien ac pharetra. Sed quam neque, lacinia eu nulla et, consectetur venenatis libero. Morbi ac risus quis ligula condimentum elementum. Vivamus nec volutpat ligula. Aliquam a viverra sapien. Nam lacinia euismod eros in semper. Ut convallis ligula ut nisl elementum vehicula. Aliquam vel suscipit libero, vel vulputate arcu. Quisque non sollicitudin lorem. Duis id urna massa. Donec non dolor nulla. Phasellus tempor commodo erat facilisis rhoncus. Quisque at efficitur tortor.Aliquam scelerisque lacus ut placerat consectetur. Curabitur sit amet ligula ligula. Nam posuere eros congue nunc gravida eleifend. Nunc luctus, odio at auctor mollis, nisl nibh convallis sem, id ornare turpis lacus quis augue. Nunc id urna auctor, rhoncus nisl sit amet, rhoncus sapien. Sed commodo congue libero, in auctor mauris. Pellentesque metus ligula, consequat vitae porttitor in, tincidunt vel diam. Sed eu metus eu ligula eleifend blandit id sit amet justo. Pellentesque hendrerit, diam ac fermentum fringilla, urna nisi mollis felis, quis dapibus diam leo eu elit. Etiam tempor, neque at aliquam vehicula, magna tellus varius mauris, ac posuere augue nisi ut urna. Aliquam ornare dui sapien, ac convallis massa egestas sed. Suspendisse porttitor condimentum dolor, a mollis velit ultrices non.Donec blandit pellentesque iaculis. Cras semper odio ac eros lacinia, varius imperdiet libero fermentum. Donec venenatis tristique orci id tempor. Suspendisse rutrum, erat nec suscipit vulputate, libero ante tempus lorem, id viverra orci urna non leo. Pellentesque in malesuada elit, non luctus ante. Vivamus magna neque, eleifend id suscipit vel, congue ut libero. Cras sed tincidunt sem. Duis elementum nibh vitae sem mattis tristique. Vestibulum pharetra felis metus, at consectetur eros commodo quis.Maecenas quis finibus nunc. Morbi sit amet elementum massa. Pellentesque vitae massa porttitor, consectetur neque vel, fermentum tellus. Mauris sed justo convallis, hendrerit lacus vitae, eleifend tellus. Curabitur posuere elit sit amet lorem scelerisque elementum. Quisque quis vulputate felis, sed rhoncus est. Nam sapien lorem, consequat sed laoreet et, porta at dui. Ut porttitor nibh arcu, et lobortis.\t\t\tabc123\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FAQsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/FakeBackendInterceptor.html":{"url":"interceptors/FakeBackendInterceptor.html","title":"interceptor - FakeBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  FakeBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-interceptors/fake-backend.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/fake-backend.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders, HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, delay, catchError, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()    // provided in app.module\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest, next: HttpHandler): Observable>{\n        // data\n\n        return of(null).pipe(mergeMap(() => {\n\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'GET') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n            // if (request.url.endsWith('/') && request.method === 'POST') {\n            //     let body;\n\n            //     return of(new HttpResponse({ status: 200, body: body}));\n            //     return throwError({ error: { message: \"\" } });\n            // }\n\n\n            return next.handle(request)\n\n        }))\n        .pipe(materialize())\n        .pipe(delay(500))\n        .pipe(dematerialize())\n    }\n}\n\nexport let fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialog.html":{"url":"components/InfoDialog.html","title":"component - InfoDialog","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/info-dialog/info-dialog.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n\n            \n                templateUrl\n                info-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                htmlContent\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/info-dialog/info-dialog.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info-dialog/info-dialog.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info-dialog/info-dialog.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info-dialog/info-dialog.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n\tselector: 'info-dialog',\n\ttemplateUrl: 'info-dialog.html'\n})\nexport class InfoDialog {\n\t\n\ttitle: string;\n\thtmlContent: SafeHtml;\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\t// onNoClick(): void {\n\t// \tthis.dialogRef.close();\n\t// }\n}\n    \n\n    \n        {{title}}\n\n\t\n\n\n\n\tClose\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}\t\tClose'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css,./_login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refresh\n                            \n                            \n                                user\n                            \n                            \n                                wrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/login/login.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitLogin\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitLogin(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/login/login.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', './_login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n  constructor(\n   private auth: AuthService,\n   private router: Router) {}\n\n  user;\n  refresh: boolean;\n  wrong: boolean = false;\n\n  ngOnInit() {\n    this.user = this.auth.getUser();\n  }\n\n  submitLogin({value, valid})\n  {\n    this.wrong = false;  // some indication of input when they submit another email/password\n    this.auth.login(value.email, value.password).subscribe(success => {\n      if(success)\n        this.router.navigate([''])\n      else\n        this.wrong = true;\n    },\n    error=> console.error(error),\n    ()=> {});\n  }\n}\n    \n\n    \n        \n\tOnline MRF Portal\n\n\n\t\n\t\t \n\t\t\n\t\t\tEmail or Password is incorrect\n\t\t\t Email\n\t\t\t\t\n\t\t\t\tEmail is required\n\t\t\t\n\n\t\t\t Password\n\t\t\t\t\n\t\t\t\tPassword is required\n\t\t\t\n\t\t\n\n\t\t  Forgot your credentials?  \n\n\t\t\n\t\t\t\n\t\t\t\tLog In done\n\t\t\t\n\n\t\t\t\n\t\t\t\tSign Up add\n\t\t\t\n\t\t\n\n\t\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .body{\n\ttext-align: center;\n\twhite-space: nowrap;\n}\n\n.logo{\n\tmax-width: 15%;\n\tmax-height: 15%;\n}\n\n.linkDeco{\n\ttext-decoration: none;\n}\n\n.linkDeco:hover{\n\ttext-decoration: underline;\n}\n.marginRight{\n\tmargin-right: 10px;\n}\n\n.marginBottom{\n\tmargin-bottom: 5px;\n}\n                \n                    ./_login.component.scss\n                \n                .mat-raised-button:hover{\n\tbackground-color: #1a237e;\n\tcolor: #ffffff;\n}\n\n/*:host ::ng-deep .input-alert{\n\tbackground-color: #ffe5e5;\n\tborder-color: red;\n}*/\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tOnline MRF Portal\t\t\t \t\t\t\t\tEmail or Password is incorrect\t\t\t Email\t\t\t\t\t\t\t\tEmail is required\t\t\t\t\t\t Password\t\t\t\t\t\t\t\tPassword is required\t\t\t\t\t\t\t  Forgot your credentials?  \t\t\t\t\t\t\t\t\tLog In done\t\t\t\t\t\t\t\t\t\tSign Up add\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Maker.html":{"url":"classes/Maker.html","title":"class - Maker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Maker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                cerfMaker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            cerfMaker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cerfMaker(item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/index.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cerf\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Cerf } from './cerf.model';\n\nexport * from './cerf.model';\nexport * from './mrf.model';\nexport * from './member.model';\nexport * from './user.model';\n\n\n// Model-Adapter pattern for consuming API in a Typescript manner: https://blog.florimondmanca.com/consuming-apis-in-angular-the-model-adapter-pattern\n// export interface IAdapt {\n// \tadapt(item: any): T;\n// }\n\nexport class Maker {\n\tstatic cerfMaker(item: any): Cerf {\n\t\treturn new Cerf(\n\t\t\titem._id,\n\t\t\titem.club_id,\n\t\t\titem.division_id,\n\t\t\titem.name,\n\t\t\titem.time,\n\t\t\titem.author,\n\t\t\titem.chair,\n\t\t\titem.location,\n\t\t\titem.contact,\n\t\t\titem.tags,\n\t\t\titem.attendees,\n\t\t\titem.hoursPerAttendee,\n\t\t\titem.overrideHours,\n\t\t\titem.fundraised,\n\t\t\titem.drivers,\n\t\t\titem.comments,\n\t\t\titem.kfamAttendance,\n\t\t\titem.categories,\n\t\t\titem.status\n\t\t)\n\t}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialsModule.html":{"url":"modules/MaterialsModule.html","title":"module - MaterialsModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/materials.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatFormFieldModule, MatIconModule, MatCardModule, MatGridListModule, MatInputModule,\n\t\t\tMatButtonModule, MatTooltipModule, MatSelectModule, MatTableModule,\n\t\t\tMatSortModule, MatPaginatorModule, MatDividerModule, MatDialogModule, MatCheckboxModule,\n\t\t\tMatProgressSpinnerModule, MatSidenavModule, MatListModule, MatToolbarModule, MatSnackBarModule,\n\t\t\tMatExpansionModule, MatAutocompleteModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n\timports: [\n\t\tMatFormFieldModule,\n\t\tMatIconModule,\n\t\tMatCardModule, \n\t\tMatGridListModule,\n\t\tMatInputModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tMatSelectModule,\n\t\tMatTableModule,\n\t\tMatSortModule,\n\t\tMatPaginatorModule,\n\t\tMatDividerModule,\n\t\tMatDialogModule,\n\t\tMatCheckboxModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatSidenavModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatSnackBarModule,\n\t\tMatExpansionModule,\n\t\tMatAutocompleteModule\n\t],\n\texports: [\n\t\tMatFormFieldModule,\n\t\tMatIconModule,\n\t\tMatCardModule, \n\t\tMatGridListModule,\n\t\tMatInputModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tMatSelectModule,\n\t\tMatTableModule,\n\t\tMatSortModule,\n\t\tMatPaginatorModule,\n\t\tMatDividerModule,\n\t\tMatDialogModule,\n\t\tMatCheckboxModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatSidenavModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatSnackBarModule,\n\t\tMatExpansionModule,\n\t\tMatAutocompleteModule\n\t],\n})\n\nexport class MaterialsModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Member.html":{"url":"classes/Member.html","title":"class - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/member.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                access\n                            \n                            \n                                    Public\n                                clud_id\n                            \n                            \n                                    Public\n                                    Optional\n                                code\n                            \n                            \n                                    Public\n                                division_id\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, name: string, email: string, clud_id: string, division_id: string, access: literal type, code?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/member.model.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clud_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        division_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        access\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clud_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            division_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/member.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Member {\n  constructor(\n    public _id: string,\n    public name: string,\n    public email: string,\n    public clud_id: string,  // will these be in the roster\n    public division_id: string,  //\n    public access: { club: number, division?: number, district?: number },\n    public code?: string\n  ) {}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MemberIDPipe.html":{"url":"pipes/MemberIDPipe.html","title":"pipe - MemberIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MemberIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/utils/memberid.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        memberID\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/memberid.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { MemberService } from '@core/services';\n\n@Pipe({ name: 'memberID' })\nexport class MemberIDPipe implements PipeTransform {\n\n\tconstructor(private memberService: MemberService) {};\n\n\ttransform(value: string): string {\n\t\treturn this.memberService.getNameFromId(value);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/member.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMembers\n                            \n                            \n                                getMembers\n                            \n                            \n                                getNameFromId\n                            \n                            \n                                getRegistrationCode\n                            \n                            \n                                mapIdToClub\n                            \n                            \n                                mapIdToDivision\n                            \n                            \n                                newMember\n                            \n                            \n                                searchMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMembers\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMembers(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMembers\n                        \n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNameFromId\n                        \n                        \n                    \n                \n            \n            \n                \ngetNameFromId(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRegistrationCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetRegistrationCode(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapIdToClub\n                        \n                        \n                    \n                \n            \n            \n                \nmapIdToClub(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         \"Berkeley\" | \"Club not Found\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapIdToDivision\n                        \n                        \n                    \n                \n            \n            \n                \nmapIdToDivision(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         \"Golden Gate\" | \"Division not Found\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newMember\n                        \n                        \n                    \n                \n            \n            \n                \nnewMember(firstName: string, lastName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchMember\n                        \n                        \n                    \n                \n            \n            \n                \nsearchMember(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/member.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/member.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\nimport { Member } from '@core/models/member.model';\nimport { ApiService } from './api.service';\n\n@Injectable({ providedIn: 'root' })\t// the member roster will be used throughout the whole app\nexport class MemberService {\n\t\n\troster: {name: string, email: string, _id: string}[];\n\n\tconstructor(private apiService: ApiService) {\n\t\tthis.getMembers().subscribe();\n\t}\n\n\tgetMembers(): Observable {  // stop caching in this service\n\t\tif(this.roster)\n\t\t\treturn of(this.roster);\n\t\telse\n\t\t\treturn this.apiService.fetchMembers().pipe(map(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif(response && response.success) {\n\t\t\t\t\tthis.roster = response.result.map(member => (\n\t\t\t\t\t\t{name: member.name.first + \" \" + member.name.last, email: member.email, _id: member._id}) );\n\t\t\t\t\tif(this.roster.length==0)\n\t\t\t\t\t\tthis.roster = [{name: \"None\", email: \"none\", _id: \"\"}];\n\t\t\t\t}\n\t\t\t\treturn this.roster;\n\t\t\t}\n\t\t\t));\n\t}\n\n\tfilterMembers(value: string) {\n\t\tif(!value)\n\t\t{\n\t\t\tvalue=\"\";\n\t\t}\n\t\tif(this.roster===undefined)\n\t\t{\n\t\t\t// return this.getMembers().pipe(map(done => this.roster.filter(member => (member.name && member.name.toLowerCase().indexOf(value.toLowerCase()) > -1)\n\t\t\t// \t|| (member.email && member.email.toLowerCase().indexOf(value.toLowerCase()) > -1)\n\t\t\t// \t)));\n\t\t\treturn [];\n\t\t}\n\t\treturn this.roster.filter(member => (member.name && member.name.toLowerCase().indexOf(value.toLowerCase()) > -1)\n\t\t\t|| (member.email && member.email.toLowerCase().indexOf(value.toLowerCase()) > -1));\n\t}\n\n\tsearchMember(value: string) {\n\t\tif(!value)\n\t\t\treturn false;\n\t\tif(this.roster===undefined)\n\t\t\treturn false;\n\t\tif(this.roster.map(member => member.name && member.name.toLowerCase()).indexOf(value.toLowerCase()) > -1)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tgetNameFromId(_id: string) {\n\t\tif(this.roster===undefined)\n\t\t\treturn _id;\n\t\tconst member = this.roster.find(member => member._id == _id);\n\t\tif(member)\n\t\t\treturn member.name;\n\t\telse\n\t\t\treturn _id;\n\t}\n\n\tnewMember(firstName: string, lastName: string) {\n\t\treturn this.apiService.addMember(firstName, lastName).pipe(tap((response: any) => {\n\t\t\tif(response.success)\n\t\t\t\tthis.roster.push({name: firstName + \" \" + lastName, email: undefined, _id: response.result});\n\t\t}))\n\t}\n\n\tgetRegistrationCode(_id: string) {\n\t\tif(this.roster===undefined)\n\t\t\treturn of(\"\");\n\t\treturn this.apiService.getMemberCode(_id).pipe(map(res => {\n\t\t\tif(res.success)\n\t\t\t\treturn res.result;\n\t\t\telse\n\t\t\t\treturn \"Could not load\";\n\t\t}));\n\t}\n\n\tmapIdToClub(_id: string) {\n\t\tif(_id == \"5b6d2054f176363426fe5b93\") return \"Berkeley\";\n\t\treturn \"Club not Found\";\n\t}\n\n\tmapIdToDivision(_id: string) {\n\t\tif(_id == \"5b6d1fbfdf9a7b34033f945c\") return \"Golden Gate\";\n\t\treturn \"Division not Found\";\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MembersResolver.html":{"url":"guards/MembersResolver.html","title":"guard - MembersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MembersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/members-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/members-resolver.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/members-resolver.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { MemberService } from '@core/services';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Member } from '@core/models';\n\n\n@Injectable( {providedIn: 'root'} )\nexport class MembersResolver implements Resolve {\n\tconstructor(private memberService: MemberService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.memberService.getMembers();\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mrf.html":{"url":"classes/Mrf.html","title":"class - Mrf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mrf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/mrf.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                boardMeetings\n                            \n                            \n                                    Public\n                                club_id\n                            \n                            \n                                    Public\n                                communications\n                            \n                            \n                                    Public\n                                dcm\n                            \n                            \n                                    Public\n                                division_id\n                            \n                            \n                                    Public\n                                events\n                            \n                            \n                                    Public\n                                fundraising\n                            \n                            \n                                    Public\n                                goals\n                            \n                            \n                                    Public\n                                importedEvents\n                            \n                            \n                                    Public\n                                kfamReport\n                            \n                            \n                                    Public\n                                meetings\n                            \n                            \n                                    Public\n                                month\n                            \n                            \n                                    Public\n                                numDuesPaid\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                submissionTime\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, club_id: string, division_id: string, year: number, month: number, status: number, submissionTime: Date, numDuesPaid: number, events: literal type[], importedEvents: Cerf[], goals: string[], meetings: literal type[], boardMeetings: literal type[], dcm: literal type, communications: literal type, fundraising: literal type[], kfamReport: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/mrf.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        club_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        division_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        year\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        month\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numDuesPaid\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        importedEvents\n                                                  \n                                                        \n                                                                        Cerf[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        goals\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meetings\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        boardMeetings\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dcm\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        communications\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fundraising\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kfamReport\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            boardMeetings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            club_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            communications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dcm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            division_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fundraising\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            importedEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cerf[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            kfamReport\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meetings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            month\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numDuesPaid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            submissionTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Cerf } from './cerf.model';\n\nexport class Mrf {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic club_id: string,\n\t\tpublic division_id: string,\n\t\tpublic year: number,\n\t\tpublic month: number,\n\t\tpublic status: number,\n\t\tpublic submissionTime: Date,\n\t\tpublic numDuesPaid: number,\n\t\tpublic events: {name: string, time: { start: Date, end: Date }, totals: { service: number, leadership: number, fellowship: number, members: number }}[],\n\t\tpublic importedEvents: Cerf[],\t// a Cerf Summary (id, totals, members)?\n\t\tpublic goals: string[],\n\t\tpublic meetings: {date: string, attendance: { numMembers: number, numNonHomeMembers: number, numKiwanis: number, numGuests: number },\n          \t\tadvisorAttended: { faculty: boolean, kiwanis: boolean }}[],\n    \tpublic boardMeetings: { date: string, attendance: { numBoard: number, numGuests: number }}[],\n\t\tpublic dcm: { date: Date, presidentAttended: boolean, members: number, nextDcmDate: Date },\n\t\tpublic communications: { ltg: string, dboard: string },\n    \tpublic fundraising: { source: string, ptp: number, kfh: number, fa: number, other: number, admin: number, fromEventReport: boolean }[],\n\t\tpublic kfamReport: boolean,\n\t) {}\n}\n\nexport class MrfListEntry {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic status: number,\n\t\tpublic year: number,\n\t\tpublic month: number,\n\t\tpublic submissionTime: Date\n\t) {}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MrfDeactivateGuard.html":{"url":"guards/MrfDeactivateGuard.html","title":"guard - MrfDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MrfDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/mrf-deactivate.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cerfUrl\n                            \n                            \n                                    Private\n                                mrfUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/mrf-deactivate.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDeactivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/mrf-deactivate.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                CanComponentDeactivate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ApiService } from '@core/services';\n\nexport interface CanComponentDeactivate {\n\tcanDeactivate: () => Observable|Promise|boolean;\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDeactivateGuard implements CanDeactivate {\n\tprivate mrfUrl = new RegExp('/mrf/.*');\n\tprivate cerfUrl = new RegExp('/cerf/.*');\n\n\tconstructor(private apiService: ApiService) {}\n\n\tcanDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot) {\n\t\tif(!nextState)\n\t\t\treturn true;\n\t\tif(this.mrfUrl.test(currentState.url) && this.cerfUrl.test(nextState.url))\n\t\t{\n\t\t\tthis.apiService.setMrfState(component);\n\t\t} else if(this.cerfUrl.test(currentState.url) && !this.mrfUrl.test(nextState.url)) {\n\t\t\tthis.apiService.deleteMrfState();\n\t\t}\n\t\treturn true;\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MrfDistrictComponent.html":{"url":"components/MrfDistrictComponent.html","title":"component - MrfDistrictComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MrfDistrictComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/mrf-district/mrf-district.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mrf-district\n            \n\n            \n                styleUrls\n                ./mrf-district.component.css,./_mrf-district.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mrf-district.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                            \n                                resolvedData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/mrf-district/mrf-district.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/mrf-district/mrf-district.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolvedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mrf[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrf-district/mrf-district.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mrf } from '@core/models';\n\n@Component({\n\tselector: 'app-mrf-district',\n\ttemplateUrl: './mrf-district.component.html',\n\tstyleUrls: ['./mrf-district.component.css', './_mrf-district.component.scss'],\n})\n\nexport class MrfDistrictComponent {\n\tresolvedData: Mrf[];\n\tresolve;\n\n\tconstructor(private router: ActivatedRoute) {\n\t\tthis.resolvedData = this.router.snapshot.data['districtMrfs'];\n\t}\n}\n    \n\n    \n        \n    \n\n    \n                \n                    ./mrf-district.component.css\n                \n                \n                \n                    ./_mrf-district.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MrfDistrictComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MrfDistrictResolver.html":{"url":"guards/MrfDistrictResolver.html","title":"guard - MrfDistrictResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MrfDistrictResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/mrf-resolver.guard.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/mrf-resolver.guard.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, NavigationEnd } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, tap } from 'rxjs/operators';\n\nimport { Cerf, Mrf } from '@core/models';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MrfSecretaryResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\n\t}\n}\n\n// Move to CERF resolver\n@Injectable( { providedIn: 'root' })\nexport class MrfPendingCerfResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getPendingCerfs().pipe(map(response => {\n\t\t\tconsole.log(response);\n\t\t\tif(response.success)\n\t\t\t\treturn response.result;\n\t\t\treturn [];\n\t\t}));\n\t}\n\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDivisionResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get division mrfs\n\t}\n}\n@Injectable( { providedIn: 'root' })\nexport class MrfDistrictResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get district mrfs\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MrfDivisionComponent.html":{"url":"components/MrfDivisionComponent.html","title":"component - MrfDivisionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MrfDivisionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/mrf-division/mrf-division.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mrf-division\n            \n\n            \n                styleUrls\n                ./mrf-division.component.css,./_mrf-division.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mrf-division.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                            \n                                resolvedData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/mrf-division/mrf-division.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/mrf-division/mrf-division.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolvedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mrf[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrf-division/mrf-division.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mrf } from '@core/models';\n\n@Component({\n\tselector: 'app-mrf-division',\n\ttemplateUrl: './mrf-division.component.html',\n\tstyleUrls: ['./mrf-division.component.css', './_mrf-division.component.scss'],\n})\n\nexport class MrfDivisionComponent {\n\tresolvedData: Mrf[];\n\tresolve;\n\n\tconstructor(private router: ActivatedRoute) {\n\t\tthis.resolvedData = this.router.snapshot.data['divisionMrfs'];\n\t}\n}\n    \n\n    \n        \n    \n\n    \n                \n                    ./mrf-division.component.css\n                \n                \n                \n                    ./_mrf-division.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MrfDivisionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MrfDivisionResolver.html":{"url":"guards/MrfDivisionResolver.html","title":"guard - MrfDivisionResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MrfDivisionResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/mrf-resolver.guard.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/mrf-resolver.guard.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, NavigationEnd } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, tap } from 'rxjs/operators';\n\nimport { Cerf, Mrf } from '@core/models';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MrfSecretaryResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\n\t}\n}\n\n// Move to CERF resolver\n@Injectable( { providedIn: 'root' })\nexport class MrfPendingCerfResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getPendingCerfs().pipe(map(response => {\n\t\t\tconsole.log(response);\n\t\t\tif(response.success)\n\t\t\t\treturn response.result;\n\t\t\treturn [];\n\t\t}));\n\t}\n\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDivisionResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get division mrfs\n\t}\n}\n@Injectable( { providedIn: 'root' })\nexport class MrfDistrictResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get district mrfs\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MrfListComponent.html":{"url":"components/MrfListComponent.html","title":"component - MrfListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MrfListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/mrflist/mrflist.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mrflist\n            \n\n            \n                styleUrls\n                ./mrflist.component.css,./_mrflist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mrflist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                CLUB\n                            \n                            \n                                clubs\n                            \n                            \n                                currentClub\n                            \n                            \n                                currentDivision\n                            \n                            \n                                currentTab\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Static\n                                    Readonly\n                                DISTRICT\n                            \n                            \n                                    Static\n                                    Readonly\n                                DIVISION\n                            \n                            \n                                divisions\n                            \n                            \n                                extraList\n                            \n                            \n                                list\n                            \n                            \n                                months\n                            \n                            \n                                    Static\n                                    Readonly\n                                NONE\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showClubs\n                            \n                            \n                                showDivisions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mrfList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/mrflist/mrflist.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mrfList\n                    \n                \n                \n                    \n                        Type :         Mrf[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/mrflist/mrflist.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/mrflist/mrflist.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/mrflist/mrflist.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showClubs\n                        \n                        \n                    \n                \n            \n            \n                \nshowClubs(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/mrflist/mrflist.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDivisions\n                        \n                        \n                    \n                \n            \n            \n                \nshowDivisions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/mrflist/mrflist.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CLUB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentDivision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DISTRICT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DIVISION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            divisions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extraList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrflist/mrflist.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Mrf } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { ApiService } from '@core/services';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n\tselector: 'app-mrflist',\n\ttemplateUrl: './mrflist.component.html',\n\tstyleUrls: ['./mrflist.component.css', './_mrflist.component.scss'],\n})\n\nexport class MrfListComponent {\n\n\tcurrentTab: string;\n\n\tdisplayedColumns;\n\tlist: MatTableDataSource;\n\n\tstatic readonly NONE = 0;\n\tstatic readonly CLUB = 1;\n\tstatic readonly DIVISION = 2;\n\tstatic readonly DISTRICT = 3;\n\textraList: number;\n\tcurrentDivision: string = \"\";\n\tcurrentClub: string = \"\";\n\n\tdivisions = [];\n\tclubs = [];\n\n\t@ViewChild(MatPaginator) paginator;\n\t@ViewChild(MatSort) sort;\n\n\t@Input() mrfList: Mrf[];\n\t// @Input() display: string[];\n\tmonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n\tconstructor(private auth: AuthService, private apiService: ApiService, private router: Router) {\n\t\tconst user = auth.getUser();\n\t\tthis.extraList = user.access.district > 0 ? MrfListComponent.DISTRICT : (user.access.division > 0 ? MrfListComponent.DIVISION : MrfListComponent.NONE);\n\n\t\tif(this.extraList == MrfListComponent.DISTRICT)\n\t\t{\n\t\t\tapiService.getDivisions().subscribe( (res: {success, result}) => {\n\t\t\t\tif(res.success)\n\t\t\t\t\tthis.divisions = res.result;\n\t\t\t\tconsole.log(res);\n\t\t\t});\n\t\t}\n\t\tif(this.extraList == MrfListComponent.DIVISION)\n\t\t{\n\t\t\tapiService.getClubs().subscribe( (res: {success, result}) => {\n\t\t\t\tif(res.success)\n\t\t\t\t\tthis.clubs = res.result;\n\t\t\t})\n\t\t}\n\n\t\tthis.currentTab = \"mrfs\";\n\t}\n\n\tngOnInit() {\n\t\tthis.list = new MatTableDataSource(this.mrfList);\n\t\tthis.displayedColumns = ['month', 'year']//, 'action']\n\t\t// if(this.display) this.displayedColumns = this.displayedColumns.concat(this.display);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.list.paginator = this.paginator;\n\t\tthis.list.sort = this.sort;\n\t}\n\n\tapplyFilter(filterValue: string) { \n\t\tfilterValue = filterValue.trim();\n\t\tfilterValue = filterValue.toLowerCase();\n\t\tthis.list.filter = filterValue;\n\t}\n\n\tshowDivisions() {\n\t\tthis.currentTab = \"divisions\";\n\t}\n\n\tshowClubs(row) {\n\t\tthis.currentDivision = row.name;\n\t\tthis.apiService.getClubs(row._id).subscribe( (res: {success, result}) => {\n\t\t\tif(res.success)\n\t\t\t\tthis.clubs = res.result;\n\t\t\tthis.currentTab = \"clubs\";\n\t\t})\n\t}\n}\n    \n\n    \n        \n\t\n\t\t\n    search\n\t\n -->\n  Administrator Information -->\n -->\n\n\n\n  \n    \n      \n        Home\n      \n      \n        Divisions\n      \n      \n        Clubs\n      \n      \n        Show All\n       -->\n    \n  \n\n\n\n\t\n    \n       Month \n      {{months[row.month-1]}}\n    \n\n    \n    \n       Year \n      {{row.year}}\n    \n\n    \n    \n       Label \n      {{row}}\n     -->\n\n    \n    \n       Club ID \n      {{row.club_id}}\n     -->\n\n\n    \n    \n       Action \n      \n      \topen_in_new\n      \tdelete_outline\n      \n    \n\n    \n    \n       Status \n      \n      \tnotification\n      \tnotifications_none\n      \n    \n\n    \n    \n    \n\n\n\n\n\n  \n    \n      Name\n      {{divisions[i].name}}\n    \n\n    \n    \n    \n\n\n\n\n  \n    \n      Name\n      {{clubs[i].name}}\n    \n\n    \n    \n    \n\n    \n\n    \n                \n                    ./mrflist.component.css\n                \n                #cerf-list-header {\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\tjustify-content: space-between;\n}\n#month-tabs {\n\tdisplay: flex;\n\tright: 0;\n\tflex-flow: row nowrap;\n}\n#month-tabs ul {\n\tdisplay: flex;\t/* Change vertical nav to horizontal nav*/\n\talign-self: flex-end;\n\tpadding: 0;\n\tmargin: 0;\t/* Some style sheet is forcing auto-centering margins onto ul */\n\tlist-style: none;\n}\n.mat-elevation-z4 {\t/* Using this as an 'active tab' selector, though we can add a bit more code to separate the two */\n\tborder-radius: 8px 8px 0 0;\n}\n\nmat-row {\n\tcursor: pointer;\n}\nmat-row:hover {\n\tbackground: rgba(0, 0, 0, 0.04);\n}\n                \n                    ./_mrflist.component.scss\n                \n                @import '~@angular/material/theming';\n\n@mixin mrf-table-theme($theme) {\n\t$primary: map-get($theme, primary);\n\t$accent: map-get($theme, accent);\n\t$backgroundColor: map-get($theme, background);\n\n\t.mat-table {\n\t\tbackground: transparent;\n\t}\n\n\t.mat-header-row {\n\t\tbackground: transparent;\n\n\t\tfont-family: \"Century Gothic\";\n\t\tfont-weight: bold;\n\t}\n\n\t.mat-paginator {\n\t\tbackground: transparent;\n\t}\n\n\t/*.mat-header-row {\n\t\tbackground-color: mat-color($backgroundColor, app-bar);\n\t}\n\n\tmat-row:nth-child(even){\n\t\tbackground-color: mat-color($accent);\n\t}\n\n\tmat-row:nth-child(odd){\n\t\tbackground-color: mat-color($accent, 300);\n\t}\n\n\tmat-row::after {\n\t\tborder-color: mat-color($accent); /* See other css file for animation of active bar */\n\t//}*/\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t    search\t -->  Administrator Information --> -->                    Home                    Divisions                    Clubs                    Show All       -->      \t           Month       {{months[row.month-1]}}                   Year       {{row.year}}                   Label       {{row}}     -->               Club ID       {{row.club_id}}     -->               Action             \topen_in_new      \tdelete_outline                         Status             \tnotification      \tnotifications_none                                  Name      {{divisions[i].name}}                            Name      {{clubs[i].name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MrfListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MrfListEntry.html":{"url":"classes/MrfListEntry.html","title":"class - MrfListEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MrfListEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/mrf.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                month\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                submissionTime\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, name: string, status: number, year: number, month: number, submissionTime: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/mrf.model.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        year\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        month\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            month\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            submissionTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/mrf.model.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Cerf } from './cerf.model';\n\nexport class Mrf {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic club_id: string,\n\t\tpublic division_id: string,\n\t\tpublic year: number,\n\t\tpublic month: number,\n\t\tpublic status: number,\n\t\tpublic submissionTime: Date,\n\t\tpublic numDuesPaid: number,\n\t\tpublic events: {name: string, time: { start: Date, end: Date }, totals: { service: number, leadership: number, fellowship: number, members: number }}[],\n\t\tpublic importedEvents: Cerf[],\t// a Cerf Summary (id, totals, members)?\n\t\tpublic goals: string[],\n\t\tpublic meetings: {date: string, attendance: { numMembers: number, numNonHomeMembers: number, numKiwanis: number, numGuests: number },\n          \t\tadvisorAttended: { faculty: boolean, kiwanis: boolean }}[],\n    \tpublic boardMeetings: { date: string, attendance: { numBoard: number, numGuests: number }}[],\n\t\tpublic dcm: { date: Date, presidentAttended: boolean, members: number, nextDcmDate: Date },\n\t\tpublic communications: { ltg: string, dboard: string },\n    \tpublic fundraising: { source: string, ptp: number, kfh: number, fa: number, other: number, admin: number, fromEventReport: boolean }[],\n\t\tpublic kfamReport: boolean,\n\t) {}\n}\n\nexport class MrfListEntry {\n\tconstructor(\n\t\tpublic _id: string,\n\t\tpublic name: string,\n\t\tpublic status: number,\n\t\tpublic year: number,\n\t\tpublic month: number,\n\t\tpublic submissionTime: Date\n\t) {}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MrfPendingCerfResolver.html":{"url":"guards/MrfPendingCerfResolver.html","title":"guard - MrfPendingCerfResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MrfPendingCerfResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/mrf-resolver.guard.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/mrf-resolver.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, NavigationEnd } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, tap } from 'rxjs/operators';\n\nimport { Cerf, Mrf } from '@core/models';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MrfSecretaryResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\n\t}\n}\n\n// Move to CERF resolver\n@Injectable( { providedIn: 'root' })\nexport class MrfPendingCerfResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getPendingCerfs().pipe(map(response => {\n\t\t\tconsole.log(response);\n\t\t\tif(response.success)\n\t\t\t\treturn response.result;\n\t\t\treturn [];\n\t\t}));\n\t}\n\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDivisionResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get division mrfs\n\t}\n}\n@Injectable( { providedIn: 'root' })\nexport class MrfDistrictResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get district mrfs\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MrfReuseStrategy.html":{"url":"classes/MrfReuseStrategy.html","title":"class - MrfReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MrfReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/reuse-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadMrf\n                            \n                            \n                                    Private\n                                routesToStore\n                            \n                            \n                                    Private\n                                saveMrf\n                            \n                            \n                                    Private\n                                storedRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                compareObjects\n                            \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                            \n                                updateEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadMrf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/reuse-strategy.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routesToStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['mrf/:year/:month']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/reuse-strategy.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveMrf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/reuse-strategy.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            storedRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/reuse-strategy.ts:20\n                            \n                        \n\n                \n                    \n                        Object which will store RouteStorageObjects indexed by keys, which are paths (route.routeConfig.path)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            compareObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareObjects(base: any, compare: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:107\n                \n            \n\n\n            \n                \n                    This nasty bugger finds out whether the objects are traditionally equal to each other, like you might assume someone else would have put this function in vanilla JS already\nOne thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\nAnother important note is that the method only tells you if compare has all equal parameters to base, not the other way around\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    base\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The base object which you would like to compare another object to\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to compare to base\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean indicating whether or not the objects have all the same properties and those properties are ==\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \nretrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DetachedRouteHandle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \nshouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \nshouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:78\n                \n            \n\n\n            \n                \n                    Determines whether or not the current route should be reused\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route the user was on\n\n                                    \n                                \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route the user is going to, as triggered by the router\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean basically indicating true if the user intends to leave the current route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            store\n                        \n                        \n                    \n                \n            \n            \n                \nstore(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                DetachedRouteHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvents\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/reuse-strategy.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\n/*\nReference: https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n*/\n\n/** Interface for object which can store both: \n * An ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\n * A DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n */\ninterface RouteStorageObject {\n    snapshot: ActivatedRouteSnapshot;\n    handle: DetachedRouteHandle;\n}\n\nexport class MrfReuseStrategy implements RouteReuseStrategy {\n\t/** \n     * Object which will store RouteStorageObjects indexed by keys, which are paths (route.routeConfig.path)\n     */\n    private storedRoutes: { [key: string]: RouteStorageObject } = {};\n\n    private routesToStore: string[] = ['mrf/:year/:month'];\n\n    private saveMrf: boolean;\n    private loadMrf: boolean;\n\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    \tif(this.routesToStore.indexOf(route.routeConfig.path) > -1 && this.saveMrf)\n    \t\treturn true;\n    \treturn false;\n    }\n\n    store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    \tlet storedRoute: RouteStorageObject = { snapshot: route, handle: handle };\n    \tthis.storedRoutes[route.routeConfig.path] = storedRoute;\t// Will store in key \"mrf/:year/:month\", WILL override, which we want anyways\n    }\n\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    \tlet canAttach = !!route.routeConfig && !!this.storedRoutes[route.routeConfig.path];\n\n    \tif(canAttach && this.loadMrf) {\n    \t\t// route.params: {year: \"2018\", month: \"7\"}\n    \t\t// route.queryParams: {}\n    \t\t/* storedRoutes.snapshot:\n    \t\t\t\tparams: {year: \"2018\", month: \"7\"}\n    \t\t\t\tqueryParams: {}\n    \t\t\t\trouteConfig: \n\t    \t\t\t\tcanActivate: [AuthGuard]\n\t\t\t\t\t\tcomponent: MrfComponent\n\t\t\t\t\t\tpath: \"mrf/:year/:month\"\n\t\t\t\t\t\tresolve: mrf: MrfResolver\n\t\t\t\t\turl (UrlSegments):\n\t\t\t\t\t\t[0] \"mrf\" [1] \"2018\" [2] \"7\"\n    \t\t*/\n\n    \t\treturn this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params) &&\n    \t\t\tthis.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams);\n    \t}\n    \treturn false;\n    }\n\n    updateEvents() {\n\n    }\n\n    retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    \tif(!route.routeConfig || !this.storedRoutes[route.routeConfig.path]) return null;\n        console.log(this.storedRoutes[route.routeConfig.path]);\n    \treturn this.storedRoutes[route.routeConfig.path].handle;\n    }\n\n    /** \n     * Determines whether or not the current route should be reused\n     * @param curr The route the user was on\n     * @param future The route the user is going to, as triggered by the router\n     * @returns boolean basically indicating true if the user intends to leave the current route\n     */\n    shouldReuseRoute(curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot): boolean {\n    \t// if(future.routeConfig.path == \"mrf/:year/:month\" && curr.routeConfig.path == \"cerf/:id\") {\n    \t// \tconsole.log(\"trying to reload MRF \");\n    \t// \treturn true;\n    \t// }\n    \tif(curr.routeConfig && future.routeConfig) {\n    \t\tif(curr.routeConfig.path == \"mrf/:year/:month\" && future.routeConfig.path == \"cerf/:id\") {\n    \t\t\tthis.saveMrf = true;\t// Want to save if going into a CERF from MRF\n    \t\t}\n    \t\telse if (curr.routeConfig.path == \"cerf/:id\" && future.routeConfig.path == \"mrf/:year/:month\") {\n    \t\t\tthis.loadMrf = true;\t// Want to load if going back to MRF from CERF\n    \t\t}\n    \t\telse {\n    \t\t\tthis.storedRoutes = {};\n    \t\t\tthis.saveMrf = false;\n    \t\t\tthis.loadMrf = false;\n    \t\t}\n    \t}\n    \treturn future.routeConfig === curr.routeConfig;\n    }\n\n    /** \n     * This nasty bugger finds out whether the objects are _traditionally_ equal to each other, like you might assume someone else would have put this function in vanilla JS already\n     * One thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\n     * Another important note is that the method only tells you if `compare` has all equal parameters to `base`, not the other way around\n     * @param base The base object which you would like to compare another object to\n     * @param compare The object to compare to base\n     * @returns boolean indicating whether or not the objects have all the same properties and those properties are ==\n     */\n    private compareObjects(base: any, compare: any): boolean {\n\n        // loop through all properties in base object\n        for (let baseProperty in base) {\n\n            // determine if comparrison object has that property, if not: return false\n            if (compare.hasOwnProperty(baseProperty)) {\n                switch(typeof base[baseProperty]) {\n                    // if one is object and other is not: return false\n                    // if they are both objects, recursively call this comparison function\n                    case 'object':\n                        if ( typeof compare[baseProperty] !== 'object' || !this.compareObjects(base[baseProperty], compare[baseProperty]) ) { return false; } break;\n                    // if one is function and other is not: return false\n                    // if both are functions, compare function.toString() results\n                    case 'function':\n                        if ( typeof compare[baseProperty] !== 'function' || base[baseProperty].toString() !== compare[baseProperty].toString() ) { return false; } break;\n                    // otherwise, see if they are equal using coercive comparison\n                    default:\n                        if ( base[baseProperty] != compare[baseProperty] ) { return false; }\n                }\n            } else {\n                return false;\n            }\n        }\n\n        // returns true only after false HAS NOT BEEN returned through all loops\n        return true;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MrfSecretaryComponent.html":{"url":"components/MrfSecretaryComponent.html","title":"component - MrfSecretaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MrfSecretaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/mrf-secretary/mrf-secretary.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mrf-secretary\n            \n\n            \n                styleUrls\n                ./mrf-secretary.component.css,./_mrf-secretary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mrf-secretary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mrfList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/mrf-secretary/mrf-secretary.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrfList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mrf[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/mrf-secretary/mrf-secretary.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mrf, Cerf } from '@core/models';\n\n@Component({\n\tselector: 'app-mrf-secretary',\n\ttemplateUrl: './mrf-secretary.component.html',\n\tstyleUrls: ['./mrf-secretary.component.css', './_mrf-secretary.component.scss'],\n})\n\nexport class MrfSecretaryComponent {\n\tmrfList: Mrf[];\n\n\tconstructor(private router: ActivatedRoute) {\n\t\tthis.mrfList = this.router.snapshot.data['mrfs'];\n\t}\n}\n    \n\n    \n        MRFs\n\n    \n\n    \n                \n                    ./mrf-secretary.component.css\n                \n                h2 {\n\t/*color: #144c83;*/\n\tfont-family: \"Century Gothic\";\n\tfont-size: 48px;\n\tmargin-bottom: 32px;\n}\n                \n                    ./_mrf-secretary.component.scss\n                \n                .mat-header-row {\n\tbackground-color:  #F2E18B;\n}\n\nmat-row:nth-child(even){\n\tbackground-color: #d8dbbe;\n}\n\nmat-row:nth-child(odd){\n\tbackground-color: #9EA374;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'MRFs'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MrfSecretaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MrfSecretaryResolver.html":{"url":"guards/MrfSecretaryResolver.html","title":"guard - MrfSecretaryResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MrfSecretaryResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/mrf-resolver.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/mrf-resolver.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, NavigationEnd } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, tap } from 'rxjs/operators';\n\nimport { Cerf, Mrf } from '@core/models';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MrfSecretaryResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\n\t}\n}\n\n// Move to CERF resolver\n@Injectable( { providedIn: 'root' })\nexport class MrfPendingCerfResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getPendingCerfs().pipe(map(response => {\n\t\t\tconsole.log(response);\n\t\t\tif(response.success)\n\t\t\t\treturn response.result;\n\t\t\treturn [];\n\t\t}));\n\t}\n\n}\n\n@Injectable( { providedIn: 'root' })\nexport class MrfDivisionResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get division mrfs\n\t}\n}\n@Injectable( { providedIn: 'root' })\nexport class MrfDistrictResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMrfList();\t// get district mrfs\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MrfService.html":{"url":"injectables/MrfService.html","title":"injectable - MrfService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MrfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/mrf.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mrf\n                            \n                            \n                                    Private\n                                mrfForm\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createReactiveForm\n                            \n                            \n                                dispatchUpdate\n                            \n                            \n                                getMrf\n                            \n                            \n                                getMrfForm\n                            \n                            \n                                    Private\n                                getMrfFromForm\n                            \n                            \n                                loadMrf\n                            \n                            \n                                setMrf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, authService: AuthService, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/mrf.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createReactiveForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReactiveForm(model: Mrf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                Mrf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdate\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMrf\n                        \n                        \n                    \n                \n            \n            \n                \ngetMrf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMrfForm\n                        \n                        \n                    \n                \n            \n            \n                \ngetMrfForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMrfFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMrfFromForm(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMrf\n                        \n                        \n                    \n                \n            \n            \n                \nloadMrf(year: string, month: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    year\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    month\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMrf\n                        \n                        \n                    \n                \n            \n            \n                \nsetMrf(mrf: Mrf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mrf.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mrf\n                                    \n                                                Mrf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mrf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mrf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/mrf.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mrfForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/mrf.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/services/mrf.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Mrf, Cerf } from '@core/models';\nimport { ApiService } from './api.service';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport * as moment from 'moment';\n\n@Injectable()\nexport class MrfService {\n\tprivate mrf: Mrf;\n\tprivate mrfForm: BehaviorSubject = new BehaviorSubject(undefined);\n\tprivate user;\n\n\tconstructor(private apiService: ApiService, private authService: AuthService, private builder: FormBuilder)\n\t{\n\t\tthis.user = this.authService.getUser();\n\t}\n\n\tloadMrf(year: string, month: string) {\n\t\treturn this.apiService.getMrfByDate(year, month).pipe(tap(response => {\n\t\t\tthis.mrf = response.result;\n\t\t\tthis.mrfForm.next(this.createReactiveForm(this.mrf));\n\t\t}));\n\t}\n\n\tdispatchUpdate() {\n\t\treturn this.apiService.updateMrf(this.getMrfFromForm(this.mrfForm.value)).pipe(tap(response => console.log(response)));\n\t}\n\n\tgetMrf() {\n\t\treturn this.mrf;\n\t}\n\n\tgetMrfForm() {\n\t\treturn this.mrfForm.value;\n\t}\n\n\t/*\n\tgetters for identifiable subcomponents, e.g. meetings\n\t*/\n\n\tsetMrf(mrf: Mrf) {\n\t\t// Initial thought would be to tie this local object to the DOM, but this object doesn't have to be binded to the DOM form\n\t\tthis.mrf = mrf;\n\t}\n\t/*\n\tsetters for identifiable subcomponents, e.g. meetings\n\t*/\n\n\tprivate createReactiveForm(model: Mrf): FormGroup {\n\t\t// this.fillDefaults(model);\n\n\t\tlet form = this.builder.group({\n\t\t\tcommunications: this.builder.group(model.communications),\n\t        dcm: this.builder.group(model.dcm),\n\t        events: this.builder.array(model.events.map(eachEvent => this.builder.group(eachEvent))),\n\t        goals: this.builder.array(model.goals),\n\t        kfamReport: this.builder.control(model.kfamReport),\n\t        meetings: this.builder.array(model.meetings.map(eachMeeting => this.builder.group({date: this.builder.control(moment(eachMeeting.date).format(\"MM-DD-YYYY\")), attendance: this.builder.group(eachMeeting.attendance), advisorAttended: this.builder.group(eachMeeting.advisorAttended)}))),\n\t        boardMeetings: this.builder.array(model.boardMeetings.map(eachBoardMeeting => this.builder.group({date: this.builder.control(moment(eachBoardMeeting.date).format(\"MM-DD-YYYY\")), attendance: this.builder.group(eachBoardMeeting.attendance)}))),\n\t        fundraising: this.builder.array(model.fundraising.map(eachFundraising => this.builder.group(eachFundraising))),\n\t        month: this.builder.control(model.month),\n\t        year: this.builder.control(model.year),\n\t        club_id: this.builder.control(model.club_id),\n\t        numDuesPaid: this.builder.control(model.numDuesPaid),\n\t        status: this.builder.control(model.status),\n\t        submissionTime: this.builder.control(model.submissionTime)\n\t    })\n\n\t\treturn form;\n\t}\n\n\tprivate getMrfFromForm(form: FormGroup) {\n\t\tlet rawMrf = form.getRawValue();\n\t\trawMrf.meetings.forEach(meeting => meeting.date = new Date(meeting.date).toISOString());\n\t\trawMrf.boardMeetings.forEach(meeting => meeting.date = new Date(meeting.date).toISOString());\n\t\tObject.assign(this.mrf, rawMrf);\n\t\t// console.log(this.mrf);\n\t\treturn this.mrf;\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyCerfsComponent.html":{"url":"components/MyCerfsComponent.html","title":"component - MyCerfsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyCerfsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/my-cerfs/my-cerfs.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-cerfs\n            \n\n            \n                styleUrls\n                ./my-cerfs.component.css,./_my-cerfs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-cerfs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cerfs\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                list\n                            \n                            \n                                mrfView\n                            \n                            \n                                paginator\n                            \n                            \n                                resolve\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickRow\n                            \n                            \n                                newCerf\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, auth: AuthService, _location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickRow\n                        \n                        \n                    \n                \n            \n            \n                \nclickRow(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newCerf\n                        \n                        \n                    \n                \n            \n            \n                \nnewCerf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cerfs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cerf[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\", \"time.start\", \"author\", \"status\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrfView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/my-cerfs/my-cerfs.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Directive, Renderer2, ElementRef, ViewChild } from '@angular/core';\n// import { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cerf, Member } from '@core/models';\nimport { NgForm } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { MatPaginator, MatSort, MatTableDataSource, MatSortable } from '@angular/material';\n\nimport { AuthService } from '@core/authentication/auth.service';\n\nimport { Observable, zip } from 'rxjs';\n\n\n@Component({\n\tselector: 'app-my-cerfs',\n\ttemplateUrl: './my-cerfs.component.html',\n\tstyleUrls: ['./my-cerfs.component.css', './_my-cerfs.component.scss'],\n})\n\nexport class MyCerfsComponent {\n\tdisplayedColumns = [\"name\", \"time.start\", \"author\", \"status\"];\t// Add \"status\" to display notification of status\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@Input() pagination: boolean;\n\n\tmrfView: boolean = false;\n\tcerfs: Cerf[] = [];\n\tlist: MatTableDataSource;\n\tresolve;\n\n\tconstructor(private route: ActivatedRoute, private router: Router,\n\t\tprivate auth: AuthService, private _location: Location) {\n\t\t// this.route.data.subscribe(response => this.resolvedData = response.myCerfs);\n\t\tthis.cerfs = this.route.snapshot.data['myCerfs'];\n\t\tthis.cerfs.concat(this.route.snapshot.data['pendingCerfs']);\n\t}\n\n\tngOnInit() {\n\t\tif(this.cerfs) {\n\t\t\tthis.list = new MatTableDataSource(this.cerfs);\n\t\t\tthis.pagination = this.cerfs.length > 10 || this.pagination;\t// even if not specified, automatically attach pagination when there's enough elements\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tif(this.list) {\n\t\t\tthis.list.sort = this.sort;\n\t\t\tthis.list.sortingDataAccessor = (data, header) => {\n\t\t\t\tswitch (header) {\n\t\t\t\t\tcase \"time.start\":\n\t\t\t\t\t\treturn new Date(data.time.start);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn data[header]; // https://github.com/angular/material2/issues/9966\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.pagination)\n\t\t\t\tthis.list.paginator = this.paginator;\n\t\t}\n\t}\n\n\tapplyFilter(filterValue: string) {\n\t\tif(this.list) {\n\t\t    filterValue = filterValue.trim(); // Remove whitespace\n\t\t    filterValue = filterValue.toLowerCase(); // list defaults to lowercase matches\n\t\t    this.list.filter = filterValue;\n\t\t}\n\t}\n\n\tclickRow(row) {\n\t\tthis.router.navigate(['/cerf', row._id]);\n\t}\n\n\tnewCerf() {\n\t\tthis.router.navigate(['/cerf', 'new']);\t// Router resolver handles generating the blank template\n\t\t//if(this.mrfView)\n\t\t\t//this.dataService.addCerfToMrf(cerf, this.mrfView);\n\t\t\n\t}\n}\n    \n\n    \n        \n\tEvent Reports\n\t\n\t\t+ New Report\n\t\n\n\n\n\t\n  \n    Name\n    {{row.name}}\n  \n\n  \n   \n       Chair \n      {{row.chair_id}}\n     -->\n\n    \n    \n      Date\n      {{row.time.start | date:'shortDate'}}\n    \n\n\n    \n    \n      Action\n      \n      \topen_in_new\n      \tdelete_outline\n      \n     -->\n\n    \n    \n      Created By\n      {{row.cerf_author}}\n    \n\n    \n    \n      Status\n      \n        warning Draft\n        sms_failed Submitted\n        check Added to MRF\n      \n    \n\n    \n      Color\n      \n        color_lens\n      \n     -->\n\n    \n      Labels\n      \n        {{ row.labels }}\n      \n    \n\n    \n   \n      \n        \n        \n          \n          Search\n          search\n        \n        \n      \n      \n     -->\n\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./my-cerfs.component.css\n                \n                /*button {\n\tmargin-bottom: 16px;\n}*/\nbutton {\n\tfont-family: \"Century Gothic\";\n}\nh1, h3 {\n\tcolor: #144c83;\n\tfont-family: \"Century Gothic\";\n}\nh2 {\n\tfont-size: 48px;\n\tmargin-bottom: 32px;\n}\n\n.action {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n.action button {\n\tborder-radius: 10px;\n\tcolor: white;\n\tbackground-color: #003366;\n\tmargin-right: 32px;\n}\n\n/*.mat-column-status {\n\tflex: 0 0 100px;\n}\n.mat-column-search {\t Stop the search bar from taking up too much space \n\tflex: 0 0 20%;\n}*/\n.mat-cell > span {\n\tdisplay: inline-flex;\n\talign-items: center;\n}\n.mat-cell > span > mat-icon {\n\tpadding-right: 10px;\n}\n\n.red_icon {\n\tcolor: rgb(176, 0, 32);\n}\n\nmat-row {\n\tcursor: pointer;\n}\nmat-row:hover {\n\tbackground: rgba(0, 0, 0, 0.04);\n}\n/*mat-row::after {\n\tposition: absolute;\n\tcontent: '';\n\tborder-left: solid 3px;\n\ttransform: scaleY(0);\n\ttransition: transform 250ms ease-in-out;\n}\nmat-row:hover::after {\n\ttransform: scaleY(1);\n}*/\n                \n                    ./_my-cerfs.component.scss\n                \n                @import '~@angular/material/theming';\n\n@mixin cerf-table-theme($theme) {\n\n\t$primary: map-get($theme, primary);\n\t$accent: map-get($theme, accent);\n\t$backgroundColor: map-get($theme, background);\n\n\n\n\n\t/*.mat-header-row {\n\t\tbackground-color: mat-color($backgroundColor, app-bar);\n\t}\n\n\tmat-row:nth-child(even){\n\t\tbackground-color: mat-color($primary);\n\t}\n\n\tmat-row:nth-child(odd){\n\t\tbackground-color: mat-color($primary, 300);\n\t}\n\n\tmat-row::after {\n\t\tborder-color: mat-color($accent); /* See other css file for animation of active bar */\n\t//}\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tEvent Reports\t\t\t+ New Report\t\t      Name    {{row.name}}              Chair       {{row.chair_id}}     -->              Date      {{row.time.start | date:\\'shortDate\\'}}                  Action            \topen_in_new      \tdelete_outline           -->              Created By      {{row.cerf_author}}                  Status              warning Draft        sms_failed Submitted        check Added to MRF                    Color              color_lens           -->          Labels              {{ row.labels }}                                                           Search          search                                 -->              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MyCerfsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MyCerfsResolver.html":{"url":"guards/MyCerfsResolver.html","title":"guard - MyCerfsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MyCerfsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/cerf-resolver.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/cerf-resolver.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/cerf-resolver.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, RoutesRecognized } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, take, filter, pairwise, catchError, tap } from 'rxjs/operators';\n\nimport { Cerf, Member } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { ApiService } from '@core/services';\n\n@Injectable( { providedIn: 'root' })\nexport class MyCerfsResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\t\treturn this.apiService.getMyCerfList().pipe(map(res => {\n\t\t\tif(res['success'])\n\t\t\t\treturn res['result'];\n\t\t\treturn null;\n\t\t}),\n\t\tcatchError(err => {\n\t\t\tconsole.log(\"Error retrieving data\");\n\t\t\treturn of([]);\n\t\t})  );//,\n\t\t// tap(res => this.apiService.routeMrf = false));\n\t}\n}\n\n@Injectable( { providedIn: 'root' })\nexport class CerfNavResolver implements Resolve {\n\tconstructor(private apiService: ApiService, private auth: AuthService, private router: Router) { }\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\treturn true;//this.apiService.isRouteMrf;\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NewFocusInput.html":{"url":"directives/NewFocusInput.html","title":"directive - NewFocusInput","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NewFocusInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/newfocusinput.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [newlyfocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/utils/newfocusinput.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/newfocusinput.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/utils/newfocusinput.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/utils/newfocusinput.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, ElementRef } from '@angular/core';\n\n@Directive({\n\tselector: \"[newlyfocus]\"\n})\nexport class NewFocusInput {\n\tconstructor(public renderer: Renderer2, public elementRef: ElementRef){}\n\n\tngOnInit() {\n\t\tthis.renderer.selectRootElement(this.elementRef.nativeElement).focus();\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refresh\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/profile/profile.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/profile/profile.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/profile/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetData\n                        \n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/profile/profile.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/profile/profile.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/profile/profile.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { User } from '@core/models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  user: User;\n  refresh: boolean;\n\n  ngOnInit() {\n  \tthis.auth.getUserObservable().subscribe(user => this.user = user);\n  }\n\n  logout()\n  {\n  \tthis.auth.logout();\n    this.user = null;\n    this.router.navigate(['/login']);\n    // this.dataService.logoutData();\n  }\n\n  // login()\n  // {\n  // \tthis.auth.login(\"user\", \"pass\").subscribe(()=>{ this.auth.getUser().subscribe(user => this.user = user) }, error=>console.error(error), ()=> {});\n\n  // }\n  // moved to login component\n\n  resetData()\n  {\n    // this.dataService.resetData();\n  }\n\n}\n\n    \n\n    \n        \n  MRF Portal\n  Hello {{user.name}}!\n\n\n  {{ user | json }}\n  \n    \n     Club\n     \n   \n\n   \n     Division\n     \n   \n\n   \n     District\n     \n   \n   Update\n  -->\n\n\nLog out\nLog in -->\nreset localhost -->\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  MRF Portal  Hello {{user.name}}!  {{ user | json }}           Club                Division                District           Update  -->Log outLog in -->reset localhost -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCache.html":{"url":"injectables/RequestCache.html","title":"injectable - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/request-cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                currentMember\n                            \n                            \n                                member\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dirtyWrite\n                            \n                            \n                                get\n                            \n                            \n                                init\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dirtyWrite\n                        \n                        \n                    \n                \n            \n            \n                \ndirtyWrite(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/request-cache.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/request-cache.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(member: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/request-cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/request-cache.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/utils/request-cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/utils/request-cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            member\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/utils/request-cache.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { User } from '@core/models';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\nimport HttpConfig from '@env/api_config';\n\nconst maxAge = 30000;\n@Injectable( { providedIn: 'root' })\nexport class RequestCache  {\n\n  cache = new Map();\n  member: Observable;\n  currentMember: User;\n\n  init(member: Observable)\n  {\n    this.member = member;\n    this.member.pipe(first()).subscribe(member => this.currentMember = member);\n  }\n\n  get(req: HttpRequest): HttpResponse | undefined {\n    if(!this.member && this.member.pipe(first()).subscribe(member => this.currentMember._id == member._id))\n    {\n      this.cache.clear();  // If change accounts, we don't want anything cached\n      return;\n    }\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached || cached.lastRead , response: HttpResponse): void {\n    if(response.status >= 400) {\n      return;  // don't cache errors\n    }\n\n    const url = req.url;\n    const entry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, entry);\n\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(expiredEntry => {\n      if (expiredEntry.lastRead ) {  // don't cache post requests (in fact, remove cached reads that need to be re-read)\n    if(this.cache.get(req.url))  // catch cerf/mrf/member/club patches\n      this.cache.delete(req.url);\n\n    // special handing for specific patches (e.g. submit/confirm)\n    if(req.url.indexOf(\"/submit\") > 0 || req.url.indexOf(\"/confirm\") > 0) {\n      const id = req.url.split(\"/\").splice(-2, 1);  // ... events (-3) :id (-2) submit (-1) -- for cerfs\n      this.cache.delete(HttpConfig.baseUrl + \"/events/\" + id + \"/submit\");  // delete() returns true if property does not exist\n      this.cache.delete(HttpConfig.baseUrl + \"/events/\" + id + \"/confirm\");\n      // this.cache.delete(HttpConfig.baseUrl + \"/club/\" + id + \"/submit\");\n      // this.cache.delete(HttpConfig.baseUrl + \"/club/\" + id + \"/submit\");\n\n      this.cache.delete(HttpConfig.baseUrl + \"/members/\" + this.member.pipe(first()).subscribe(member => member._id) + \"/events\");\n    }\n\n    // if(req.method == \"PATCH\") {\n    //   if(req.url.indexOf(\"/events/\")) {  // Remove cerf cache\n    //     const cerfID = req.url.split(\"/\").pop();\n\n    //   }\n    // }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        result\n                                \n                                \n                                        success\n                                \n                                \n                                            Optional\n                                        warnings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        warnings\n                                    \n                                \n                                \n                                    \n                                        warnings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, of, zip, forkJoin } from 'rxjs';\nimport { defaultIfEmpty, concatMap, map, tap, filter, catchError, first, last } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport HttpConfig from '@env/api_config';\nimport { Cerf, Mrf, User, Member } from '@core/models';\nimport { AuthService } from '@core/authentication/auth.service';\nimport * as moment from 'moment';\n\ninterface Response {\n\tsuccess: boolean,\n\tauth: boolean,\n\terror?: string,\n\twarnings?: string,\n\tresult?: T\n}\n\n// Any and all api calls go through here (except end-to-end authentication). Previously data.service.ts\n// References: https://itnext.io/dont-clone-back-end-models-in-angular-f7a749bdc1b0\n// \t\t\t\thttps://medium.com/@joshblf/dynamic-nested-reactive-forms-in-angular-654c1d4a769a\n@Injectable( {providedIn: 'root' })\nexport class ApiService {\n\n\tconstructor(private http: HttpClient, private authService: AuthService) {\n\t\tthis.authService.getUserObservable().subscribe(user => this.user=user);\n\t}\n\n\tuser: User;\n\n\tmrfState: Mrf;\n\tmrfFormState;\n\tmrfTabState: string;\n\n\tresetData()\t// this goes into auth probably\n\t{\n\t\t// this.localStorage.clear().subscribe(()=>{});  // removes token also\n\t}\n\n\n\tgetCerf(id: string) {\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/events/' + id);\n\t}\n\tgetMyCerfList() {\n\t\tif(!this. user) return of(null);\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/members/' + this.user._id + '/events');\n\t\t// it is not the service's concern to clean up the data for the app to consume (e.g. reading 'success' or returning [])\n\t}\n\tgetPendingCerfs() {\n\t\tif(!this.user) return of(null);\n\t\tlet params = new HttpParams().set('status', '1');\n\t\treturn this.http.get>(HttpConfig.baseUrl + '/clubs/' + this.user.club_id + '/events', { params: params } );\n\t\t// This returns all. Endpoint to get it for specific month? Or we can filter and split up, but inefficient\n\t}\n\n\tupdateCerf(data: Cerf) {\n\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + data._id, data).pipe(tap(res => console.log(res)));;\n\t\t// TODO: cache-bust according to data._id\n\t}\n\n\tcreateNewCerf(data: Cerf) {\n\t\treturn this.http.post>(HttpConfig.baseUrl + \"/events\", data).pipe(tap(res => console.log(res)));\n\t\t// TODO: Special cache handler since the user will access this new cerf through its id\n\t\t// or leave it to refresh get requests again\n\t}\n\n\tchangeCerfStatus(id: string, action: string) {\n\t\tif(action == \"SUBMIT\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/submit\", {submit: true});\n\t\t} else if(action == \"UNSUBMIT\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/submit\", {submit: false});\n\t\t} else if(action == \"CONFIRM\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/confirm\", {confirm: true});\n\t\t} else if(action == \"UNCONFIRM\") {\n\t\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/events/\" + id + \"/confirm\", {confirm: false});\n\t\t}\n\n\t\treturn of(null);\n\t}\n\n\tdeleteCerf(id: string) {\n\t\treturn this.http.delete>(HttpConfig.baseUrl + \"/events/\" + id);\n\t}\n\n\n\n\n\t// just a simple array of month-year objects\n\tgetMrfList() {\n\t\tconst current = moment();\n\t\tconst oldest = moment().month() > 5 ? moment().set('month', 5) : moment().subtract(1, 'year').set('month', 5);\n\t\tlet list = [];\n\t\twhile ((current > oldest || current.format('M') === oldest.format('M')) && list.length >(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/mrfs/\" + year + \"/\" + month);\n\t}\n\n\tupdateMrf(data: Mrf) {\n\t\tif(!this.user) return of(null);\n\t\tconsole.log(data);\n\t\treturn this.http.patch>(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/mrfs/\" + data.year + \"/\" + data.month, data);\n\t}\n\n\n\n\t// Option 1: RouterReuseStrategy\n\t// Option 2: directly save inputted data when routing (this is more predicatable and explicit?)\n\tsetMrfState(component) {\n\t\tthis.mrfState = component.mrfForm.getRawValue();\n\t\tthis.mrfFormState = component.mrfForm;\n\t\tthis.mrfTabState = component.currentTab;\n\t}\n\n\tdeleteMrfState() {\n\t\tthis.mrfState = undefined;\n\t\tthis.mrfFormState = undefined;\n\t\tthis.mrfTabState = undefined;\n\t}\n\n\tget getMrfTabState() {\n\t\tif(this.mrfTabState) {\n\t\t\treturn this.mrfTabState;\n\t\t}\n\t\treturn \"main\";\n\t}\n\n\tget getMrfFormState() {\n\t\tif(this.mrfFormState)\n\t\t\treturn this.mrfFormState;\n\t}\n\n\n\n\tfetchMembers() {\n\t\tif(!this.user) return of(null);\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/clubs/\" + this.user.club_id + \"/members\");\n\t}\n\n\taddMember(first: string, last: string) {\n\t\tif(!this.user) return of(false);\n\t\treturn this.http.post(HttpConfig.baseUrl + '/clubs/' + this.user.club_id + \"/members\", {name: {'first': first, 'last': last}});\n\t}\n\n\tgetMemberCode(id: string) {\n\t\treturn this.http.get(HttpConfig.baseUrl + '/members/' + id + '/registration');\n\t}\n\n\n\t// Only usable by district secretary\n\tgetDivisions() {\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/divisions\");\n\t}\n\n\tnewDivision(name: string) {\n\t\treturn this.http.post(HttpConfig.baseUrl + \"/divisions\", {'name': name});\n\t}\n\n\tdeleteDivision(id: string) {\n\t\treturn this.http.delete(HttpConfig.baseUrl + \"/divisions/\" + id);\n\t}\n\n\n\n\n\tgetClubs(divisionId?: string) {\n\t\tif(!this.user) return of(null);\n\t\tif(!divisionId) divisionId=this.user.division_id;\n\t\treturn this.http.get(HttpConfig.baseUrl + \"/divisions/\" + divisionId + \"/clubs\");\n\t}\n\n\tnewClub(name: string) {\n\t\tif(!this.user) return of(false);\n\t\treturn this.http.post(HttpConfig.baseUrl + '/divisions/' + this.user.division_id + '/clubs', {'name': name});\n\t}\n\n\tdeleteClub(id: string) {\n\t\treturn this.http.delete(HttpConfig.baseUrl + '/clubs/' + id);\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteStorageObject.html":{"url":"interfaces/RouteStorageObject.html","title":"interface - RouteStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/reuse-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Interface for object which can store both: \nAn ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\nA DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        handle\n                                \n                                \n                                        snapshot\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         DetachedRouteHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DetachedRouteHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                    \n                                \n                                \n                                    \n                                        snapshot:         ActivatedRouteSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivatedRouteSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\n/*\nReference: https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n*/\n\n/** Interface for object which can store both: \n * An ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\n * A DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n */\ninterface RouteStorageObject {\n    snapshot: ActivatedRouteSnapshot;\n    handle: DetachedRouteHandle;\n}\n\nexport class MrfReuseStrategy implements RouteReuseStrategy {\n\t/** \n     * Object which will store RouteStorageObjects indexed by keys, which are paths (route.routeConfig.path)\n     */\n    private storedRoutes: { [key: string]: RouteStorageObject } = {};\n\n    private routesToStore: string[] = ['mrf/:year/:month'];\n\n    private saveMrf: boolean;\n    private loadMrf: boolean;\n\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    \tif(this.routesToStore.indexOf(route.routeConfig.path) > -1 && this.saveMrf)\n    \t\treturn true;\n    \treturn false;\n    }\n\n    store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    \tlet storedRoute: RouteStorageObject = { snapshot: route, handle: handle };\n    \tthis.storedRoutes[route.routeConfig.path] = storedRoute;\t// Will store in key \"mrf/:year/:month\", WILL override, which we want anyways\n    }\n\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    \tlet canAttach = !!route.routeConfig && !!this.storedRoutes[route.routeConfig.path];\n\n    \tif(canAttach && this.loadMrf) {\n    \t\t// route.params: {year: \"2018\", month: \"7\"}\n    \t\t// route.queryParams: {}\n    \t\t/* storedRoutes.snapshot:\n    \t\t\t\tparams: {year: \"2018\", month: \"7\"}\n    \t\t\t\tqueryParams: {}\n    \t\t\t\trouteConfig: \n\t    \t\t\t\tcanActivate: [AuthGuard]\n\t\t\t\t\t\tcomponent: MrfComponent\n\t\t\t\t\t\tpath: \"mrf/:year/:month\"\n\t\t\t\t\t\tresolve: mrf: MrfResolver\n\t\t\t\t\turl (UrlSegments):\n\t\t\t\t\t\t[0] \"mrf\" [1] \"2018\" [2] \"7\"\n    \t\t*/\n\n    \t\treturn this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params) &&\n    \t\t\tthis.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams);\n    \t}\n    \treturn false;\n    }\n\n    updateEvents() {\n\n    }\n\n    retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    \tif(!route.routeConfig || !this.storedRoutes[route.routeConfig.path]) return null;\n        console.log(this.storedRoutes[route.routeConfig.path]);\n    \treturn this.storedRoutes[route.routeConfig.path].handle;\n    }\n\n    /** \n     * Determines whether or not the current route should be reused\n     * @param curr The route the user was on\n     * @param future The route the user is going to, as triggered by the router\n     * @returns boolean basically indicating true if the user intends to leave the current route\n     */\n    shouldReuseRoute(curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot): boolean {\n    \t// if(future.routeConfig.path == \"mrf/:year/:month\" && curr.routeConfig.path == \"cerf/:id\") {\n    \t// \tconsole.log(\"trying to reload MRF \");\n    \t// \treturn true;\n    \t// }\n    \tif(curr.routeConfig && future.routeConfig) {\n    \t\tif(curr.routeConfig.path == \"mrf/:year/:month\" && future.routeConfig.path == \"cerf/:id\") {\n    \t\t\tthis.saveMrf = true;\t// Want to save if going into a CERF from MRF\n    \t\t}\n    \t\telse if (curr.routeConfig.path == \"cerf/:id\" && future.routeConfig.path == \"mrf/:year/:month\") {\n    \t\t\tthis.loadMrf = true;\t// Want to load if going back to MRF from CERF\n    \t\t}\n    \t\telse {\n    \t\t\tthis.storedRoutes = {};\n    \t\t\tthis.saveMrf = false;\n    \t\t\tthis.loadMrf = false;\n    \t\t}\n    \t}\n    \treturn future.routeConfig === curr.routeConfig;\n    }\n\n    /** \n     * This nasty bugger finds out whether the objects are _traditionally_ equal to each other, like you might assume someone else would have put this function in vanilla JS already\n     * One thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\n     * Another important note is that the method only tells you if `compare` has all equal parameters to `base`, not the other way around\n     * @param base The base object which you would like to compare another object to\n     * @param compare The object to compare to base\n     * @returns boolean indicating whether or not the objects have all the same properties and those properties are ==\n     */\n    private compareObjects(base: any, compare: any): boolean {\n\n        // loop through all properties in base object\n        for (let baseProperty in base) {\n\n            // determine if comparrison object has that property, if not: return false\n            if (compare.hasOwnProperty(baseProperty)) {\n                switch(typeof base[baseProperty]) {\n                    // if one is object and other is not: return false\n                    // if they are both objects, recursively call this comparison function\n                    case 'object':\n                        if ( typeof compare[baseProperty] !== 'object' || !this.compareObjects(base[baseProperty], compare[baseProperty]) ) { return false; } break;\n                    // if one is function and other is not: return false\n                    // if both are functions, compare function.toString() results\n                    case 'function':\n                        if ( typeof compare[baseProperty] !== 'function' || base[baseProperty].toString() !== compare[baseProperty].toString() ) { return false; } break;\n                    // otherwise, see if they are equal using coercive comparison\n                    default:\n                        if ( base[baseProperty] != compare[baseProperty] ) { return false; }\n                }\n            } else {\n                return false;\n            }\n        }\n\n        // returns true only after false HAS NOT BEEN returned through all loops\n        return true;\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css,./_settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css', './_settings.component.scss']\n})\nexport class SettingsComponent {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n                \n                    ./_settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css,./_signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                error\n                            \n                            \n                                matchedPass\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatch\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/signup/signup.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/signup/signup.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordsMatch\n                        \n                        \n                    \n                \n            \n            \n                \npasswordsMatch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/signup/signup.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/signup/signup.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchedPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/signup/signup.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@core/authentication/auth.service';\nimport { Router } from '@angular/router';\n\nimport { Directive, forwardRef, Provider, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n// This is just for checking confirm password matching...\n@Directive({\n  selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => \n      EqualValidator), multi: true }\n  ]\n})\nexport class EqualValidator implements Validator {\n constructor(@Attribute('validateEqual') public validateEqual: string, @Attribute('reverse') public reverse: string) {}\n  private get isReverse() {\n     if (!this.reverse) return false;\n     return this.reverse === 'true' ? true: false;\n  }\n  validate(c: AbstractControl): { [key: string]: any } {\n    // self value\n    let v = c.value;\n    // control value\n    let e = c.root.get(this.validateEqual);\n    // value not equal\n    console.log(e, c);\n    if (e && v !== e.value && !this.isReverse) return {\n      validateEqual: false\n    }\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) e.setErrors(null);\n    }\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({ validateEqual: false })\n    }\n    return null;\n  }\n}\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', './_signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  email: string;\n  code: string;\n  password: string;\n  confirmPassword: string;\n  error: string = \"\";\n  matchedPass: boolean = true;\n\n\n  ngOnInit() { }\n\n  // editUserData(firstName, lastName, school, division) {\n  //   this.firstName = firstName;\n  //   this.lastName = lastName;\n  //   this.school = school;\n  //   this.division = division;\n  //   this.dataCorrect = true;\n  //   this.formUnlocked = false;\n  // }\n\n  // unlockForm(){\n  //   this.formUnlocked = true;\n  // }\n\n  // isFormUnlocked(){\n  //   return this.formUnlocked;\n  // }\n\n  // setDataCorrect(x){\n  //   if(x>0){ this.dataCorrect = true; }\n  //   else{ this.dataCorrect = false; }\n  // }\n\n  // isDataCorrect() {\n  //   return this.dataCorrect;\n  // }\n\n  passwordsMatch(){\n    return (this.password == this.confirmPassword);\n  }\n\n  signup({value, valid}){\n    if(value.Password == value.ConfirmPassword){\n      this.auth.signup(value.Code, value.Email, value.Password).subscribe(\n        (res: any) => {\n          if(!res.success)\n            this.error = res.error;\n        },\n        error=>console.error(error),\n        ()=> {}\n      );\n    }\n    else\n    {\n      this.matchedPass = false;\n    }\n  }\n\n  // signup( code, email, user, pass ){\n  //   this.auth.signup(code, email, user, pass).subscribe(res=> { this.router.navigate(['']) }, error=>console.error(error), ()=> {});\n  // }\n  // TODO: update this to reflect any user corrections to database\n\n}\n    \n\n    \n        \n\t Sign Up \n\n\t\n\t\t\t\n\t\t\t\tName\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tDivision\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tClub\n\t\t\t\t\n\t\t\t\n\t\t\t -->\n\t\t\t\n\t\t\t\tRegistration Code\n\t\t\t\t\n\t\t\t\tRegistration code is required\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tEmail\n\t\t\t\t\n\t\t\t\tEnter valid email\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tUsername\n\t\t\t\t\n\t\t\t\tUsername is required\n\t\t\t -->\n\t\t\t\n\t\t\t\tPassword\n\t\t\t\t\n\t\t\t\tPassword is required\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tConfirm Password\n\t\t\t\t\n\t\t\t\tPasswords do not match\n\t\t\t\n\t\t\t\n\n\t\t\tIs this not you? -->\n\t\t\t\n\n\t\t\t\tNext\n\t\t\t -->\n\t\t\tSubmitdone \n\t\t\tLogin instead\n\t\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                .body{\n\ttext-align: center; \n\theight: 70%;\n\tmin-height: 70%;\n}\n\n.linkDeco{\n\ttext-decoration: none;\n}\n\n.linkDeco:hover{\n\ttext-decoration: underline;\n}\n\n.marginRight{\n\tmargin-right: 10px;\n}\n\n.marginLeft{\n\tmargin-left: 10px;\n}\n\n.marginBottom{\n\tmargin-bottom: 5px;\n}\n                \n                    ./_signup.component.scss\n                \n                .mat-raised-button:hover{\n\tbackground-color: #1a237e;\n\tcolor: #ffffff;\n}\n\n:host ::ng-deep .input-alert {\n\tborder-color: red;\n\tbackground-color: #ffe5e5;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t Sign Up \t\t\t\t\t\t\t\tName\t\t\t\t\t\t\t\t\t\t\t\t\t\tDivision\t\t\t\t\t\t\t\t\t\t\t\t\t\tClub\t\t\t\t\t\t\t\t\t\t -->\t\t\t\t\t\t\tRegistration Code\t\t\t\t\t\t\t\tRegistration code is required\t\t\t\t\t\t\t\t\t\t\t\t\tEmail\t\t\t\t\t\t\t\tEnter valid email\t\t\t\t\t\t\t\t\t\t\t\t\tUsername\t\t\t\t\t\t\t\tUsername is required\t\t\t -->\t\t\t\t\t\t\tPassword\t\t\t\t\t\t\t\tPassword is required\t\t\t\t\t\t\t\t\t\t\t\t\tConfirm Password\t\t\t\t\t\t\t\tPasswords do not match\t\t\t\t\t\t\t\t\tIs this not you? -->\t\t\t\t\t\t\tNext\t\t\t -->\t\t\tSubmitdone \t\t\tLogin instead\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsDialog.html":{"url":"components/TagsDialog.html","title":"component - TagsDialog","body":"\n                   \n\n\n\n\n\n  Components\n  TagsDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cerf/tags-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tags-dialog\n            \n\n\n\n\n            \n                templateUrl\n                tags-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cerf/tags-dialog.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cerf/tags-dialog.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n\tselector: 'tags-dialog',\n\ttemplateUrl: 'tags-dialog.component.html'\n})\nexport class TagsDialog {\n\n\tconstructor(public dialogRef: MatDialogRef) {\n\n\t}\n\n\t// onNoClick(): void {\n\t// \tthis.dialogRef.close();\n\t// }\n}\n    \n\n    \n        Tag Descriptions\n\n\n\tCommunity Service: An event where your club members are serving for the community without pay\n\tCampus Service: Any event where your club is doing community service on your school's campus\n\tContinuing Service: An event that has been completed with the same organization repeatedly at least once a month for a two-month duration\n\tDistrict Service Initiative: Any event that contributes to the current District Service Initiative\n\tInternational Service Initiative: Any event that contributes to the current International Service Initiative\n\tAdministrative: Any event related to the operation of the club should be tagged as AD. Examples of administrative events include but are not limited to attending meetings (e.g. general meetings, board meetings, committee meetings, Kiwanis meetings), and workshops\n\tSocial Event: Any event in which club members are socially interacting with one another should be tagged as SE. A social event promotes the moral of members so it is usually tagged as MD; however, remember that although all SE events are MD-tagged, not all MD events are SE-tagged (e.g. workshops)\n\tMembership Development: An event that promotes membership recruitment and development\n\tFundraiser: A home club-hosted event that raises money for a charity or for administrative funds\n\tCircle K: An event in which at least two members from your Circle K club and at least two members from another Circle K club are present\n\tKiwanis Family: An event in which at least two members from your Circle K club and at least two members from another non-Circle K Kiwanis Family club are present\n\tInterclub: An event in which there must be a certain amount of members from your Circle K club and the same amount of members from another Circle K/Kiwanis Family club present, depending on your Circle K club's number of dues paid members. Clubs with less than or equal to 20 members need a minimum of two members present; clubs with 21-30 members need a minimum of three memberrs present; and clubs with greater than or equal to 31 members need a minimum of four members present\n\tWebinar: An online webinar usualy hosted by the District Board for the District. This tag applies to both District and International webinars\n\tDivisional: An event hosted by and for the Division, which is usually hosted by the respective Lieutenant Governor (and Divisional Board)\n\tDistrict: An event hosted by and for the District\n\tInternational: An event hosted by Circle K International\n\tClub Hosted: Any event hosted through your Circle K club\n\n\n\n\tClose\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tag Descriptions\tCommunity Service: An event where your club members are serving for the community without pay\tCampus Service: Any event where your club is doing community service on your school\\'s campus\tContinuing Service: An event that has been completed with the same organization repeatedly at least once a month for a two-month duration\tDistrict Service Initiative: Any event that contributes to the current District Service Initiative\tInternational Service Initiative: Any event that contributes to the current International Service Initiative\tAdministrative: Any event related to the operation of the club should be tagged as AD. Examples of administrative events include but are not limited to attending meetings (e.g. general meetings, board meetings, committee meetings, Kiwanis meetings), and workshops\tSocial Event: Any event in which club members are socially interacting with one another should be tagged as SE. A social event promotes the moral of members so it is usually tagged as MD; however, remember that although all SE events are MD-tagged, not all MD events are SE-tagged (e.g. workshops)\tMembership Development: An event that promotes membership recruitment and development\tFundraiser: A home club-hosted event that raises money for a charity or for administrative funds\tCircle K: An event in which at least two members from your Circle K club and at least two members from another Circle K club are present\tKiwanis Family: An event in which at least two members from your Circle K club and at least two members from another non-Circle K Kiwanis Family club are present\tInterclub: An event in which there must be a certain amount of members from your Circle K club and the same amount of members from another Circle K/Kiwanis Family club present, depending on your Circle K club\\'s number of dues paid members. Clubs with less than or equal to 20 members need a minimum of two members present; clubs with 21-30 members need a minimum of three memberrs present; and clubs with greater than or equal to 31 members need a minimum of four members present\tWebinar: An online webinar usualy hosted by the District Board for the District. This tag applies to both District and International webinars\tDivisional: An event hosted by and for the Division, which is usually hosted by the respective Lieutenant Governor (and Divisional Board)\tDistrict: An event hosted by and for the District\tInternational: An event hosted by Circle K International\tClub Hosted: Any event hosted through your Circle K club\tClose'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CerfComponent', 'selector': 'app-cerf'},{'name': 'CerfListComponent', 'selector': 'app-cerflist'},{'name': 'ClubAdministrationComponent', 'selector': 'app-administration'},{'name': 'ClubsComponent', 'selector': 'app-clubs'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DialogNewClub', 'selector': 'dialog-new-club'},{'name': 'DialogNewMember', 'selector': 'dialog-new-member'},{'name': 'DivisionsComponent', 'selector': 'app-divisions'},{'name': 'FAQsComponent', 'selector': 'app-faqs'},{'name': 'InfoDialog', 'selector': 'info-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MrfComponent', 'selector': 'app-mrf'},{'name': 'MrfDistrictComponent', 'selector': 'app-mrf-district'},{'name': 'MrfDivisionComponent', 'selector': 'app-mrf-division'},{'name': 'MrfListComponent', 'selector': 'app-mrflist'},{'name': 'MrfSecretaryComponent', 'selector': 'app-mrf-secretary'},{'name': 'MyCerfsComponent', 'selector': 'app-my-cerfs'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TagsDialog', 'selector': 'tags-dialog'}];\n    var DIRECTIVES = [{'name': 'EqualValidator', 'selector': '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]'},{'name': 'NewFocusInput', 'selector': '[newlyfocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-interceptors/token-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http-interceptors/token-interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\t// provided in app.module\nexport class TokenInterceptor implements HttpInterceptor {\n\tintercept(request: HttpRequest, next: HttpHandler): Observable>{\n    \t// const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    \tconst token = localStorage.getItem('access_token');\n    \tif(token)\n    \t\treturn next.handle(request.clone({\n    \t\t\theaders: new HttpHeaders({\n    \t\t\t\t'Authorization': 'Bearer ' + token \n    \t\t\t})\n    \t\t}));\n\t\treturn next.handle(request);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                access\n                            \n                            \n                                    Public\n                                club_id\n                            \n                            \n                                    Public\n                                division_id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, _id: string, club_id: string, division_id: string, access: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/user.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        club_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        division_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        access\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            club_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            division_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\tconstructor(public name: string, public _id: string, public club_id: string, public division_id: string,\n\t\t\t\tpublic access: {club: number, division: number, district: number}) {}\n\t// TODO: abstract access numbers as enum levels (officer, secretary, ltg)? What's not allowed to overlap?\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/core/authentication/auth.service.ts\n            \n            variable\n            tokenName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/cerf-resolver.guard.ts\n            \n            guard\n            CerfNavResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/cerf-resolver.guard.ts\n            \n            guard\n            MyCerfsResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/clubs-resolver.guard.ts\n            \n            guard\n            ClubsResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/exit.guard.ts\n            \n            interface\n            CanComponentDeactivate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/guards/exit.guard.ts\n            \n            guard\n            ExitGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/guards/members-resolver.guard.ts\n            \n            guard\n            MembersResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-deactivate.guard.ts\n            \n            interface\n            CanComponentDeactivate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-deactivate.guard.ts\n            \n            guard\n            MrfDeactivateGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n            guard\n            MrfDistrictResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n            guard\n            MrfDivisionResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n            guard\n            MrfPendingCerfResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/mrf-resolver.guard.ts\n            \n            guard\n            MrfSecretaryResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/reuse-strategy.ts\n            \n            class\n            MrfReuseStrategy\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/reuse-strategy.ts\n            \n            interface\n            RouteStorageObject\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/cache-interceptor.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/cache-interceptor.ts\n            \n            variable\n            cacheInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/content-type-interceptor.ts\n            \n            interceptor\n            ContentTypeInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/error-interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/fake-backend.ts\n            \n            interceptor\n            FakeBackendInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/fake-backend.ts\n            \n            variable\n            fakeBackendProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/index.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http-interceptors/token-interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/cerf.model.ts\n            \n            class\n            Cerf\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/core/models/cerf.model.ts\n            \n            class\n            CerfListEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/index.ts\n            \n            class\n            Maker\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/member.model.ts\n            \n            class\n            Member\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/mrf.model.ts\n            \n            class\n            Mrf\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/core/models/mrf.model.ts\n            \n            class\n            MrfListEntry\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/core/services/api.service.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/cerf.service.ts\n            \n            injectable\n            CerfService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/core/services/member.service.ts\n            \n            injectable\n            MemberService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/mrf.service.ts\n            \n            injectable\n            MrfService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/utils/clubid.pipe.ts\n            \n            pipe\n            ClubIDPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/divisionid.pipe.ts\n            \n            pipe\n            DivisionIDPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/memberid.pipe.ts\n            \n            pipe\n            MemberIDPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/newfocusinput.ts\n            \n            directive\n            NewFocusInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/utils/request-cache.service.ts\n            \n            injectable\n            RequestCache\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/utils/request-cache.service.ts\n            \n            variable\n            maxAge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/administration/administration.component.ts\n            \n            component\n            ClubAdministrationComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/modules/administration/administration.component.ts\n            \n            component\n            DialogNewMember\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/cerf/cerf.component.ts\n            \n            component\n            CerfComponent\n            \n                0 %\n                (0/58)\n            \n        \n        \n            \n                \n                src/app/modules/cerf/tags-dialog.component.ts\n            \n            component\n            TagsDialog\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/cerflist/cerflist.component.ts\n            \n            component\n            CerfListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/clubs/clubs.component.ts\n            \n            component\n            ClubsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/clubs/clubs.component.ts\n            \n            component\n            DialogNewClub\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/divisions/divisions.component.ts\n            \n            component\n            DivisionsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/faqs/faqs.component.ts\n            \n            component\n            FAQsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/info-dialog/info-dialog.ts\n            \n            component\n            InfoDialog\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/mrf-district/mrf-district.component.ts\n            \n            component\n            MrfDistrictComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/mrf-division/mrf-division.component.ts\n            \n            component\n            MrfDivisionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/mrf-secretary/mrf-secretary.component.ts\n            \n            component\n            MrfSecretaryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/mrf/mrf.component.ts\n            \n            component\n            MrfComponent\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/app/modules/mrflist/mrflist.component.ts\n            \n            component\n            MrfListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/modules/my-cerfs/my-cerfs.component.ts\n            \n            component\n            MyCerfsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/modules/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/signup/signup.component.ts\n            \n            directive\n            EqualValidator\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/api_config.ts\n            \n            variable\n            HttpConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.12\n        \n            @angular/cdk : ^7.3.6\n        \n            @angular/common : ^7.2.12\n        \n            @angular/compiler : ^7.2.12\n        \n            @angular/core : ^7.2.12\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ^7.2.12\n        \n            @angular/http : ^7.2.12\n        \n            @angular/material : ^7.3.6\n        \n            @angular/platform-browser : ^7.2.12\n        \n            @angular/platform-browser-dynamic : ^7.2.12\n        \n            @angular/router : ^7.2.12\n        \n            @auth0/angular-jwt : ^2.1.0\n        \n            @coachcare/datepicker : ^0.9.9\n        \n            @ngx-pwa/local-storage : ^6.2.3\n        \n            angular-cli-ghpages : ^0.5.3\n        \n            core-js : ^2.6.5\n        \n            material : ^0.2.6\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.23\n        \n            ng-excel : ^1.0.5\n        \n            ngx-color-picker : ^6.8.0\n        \n            npm : ^6.9.0\n        \n            rxjs : ^6.4.0\n        \n            rxjs-tslint : ^0.1.7\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortal\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCerfComponent\n\nCerfComponent\n\nAppModule -->\n\nCerfComponent->AppModule\n\n\n\n\n\nCerfListComponent\n\nCerfListComponent\n\nAppModule -->\n\nCerfListComponent->AppModule\n\n\n\n\n\nClubAdministrationComponent\n\nClubAdministrationComponent\n\nAppModule -->\n\nClubAdministrationComponent->AppModule\n\n\n\n\n\nClubIDPipe\n\nClubIDPipe\n\nAppModule -->\n\nClubIDPipe->AppModule\n\n\n\n\n\nClubsComponent\n\nClubsComponent\n\nAppModule -->\n\nClubsComponent->AppModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nAppModule -->\n\nConfirmDialogComponent->AppModule\n\n\n\n\n\nDialogNewClub\n\nDialogNewClub\n\nAppModule -->\n\nDialogNewClub->AppModule\n\n\n\n\n\nDialogNewMember\n\nDialogNewMember\n\nAppModule -->\n\nDialogNewMember->AppModule\n\n\n\n\n\nDivisionIDPipe\n\nDivisionIDPipe\n\nAppModule -->\n\nDivisionIDPipe->AppModule\n\n\n\n\n\nDivisionsComponent\n\nDivisionsComponent\n\nAppModule -->\n\nDivisionsComponent->AppModule\n\n\n\n\n\nEqualValidator\n\nEqualValidator\n\nAppModule -->\n\nEqualValidator->AppModule\n\n\n\n\n\nFAQsComponent\n\nFAQsComponent\n\nAppModule -->\n\nFAQsComponent->AppModule\n\n\n\n\n\nInfoDialog\n\nInfoDialog\n\nAppModule -->\n\nInfoDialog->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMemberIDPipe\n\nMemberIDPipe\n\nAppModule -->\n\nMemberIDPipe->AppModule\n\n\n\n\n\nMrfComponent\n\nMrfComponent\n\nAppModule -->\n\nMrfComponent->AppModule\n\n\n\n\n\nMrfDistrictComponent\n\nMrfDistrictComponent\n\nAppModule -->\n\nMrfDistrictComponent->AppModule\n\n\n\n\n\nMrfDivisionComponent\n\nMrfDivisionComponent\n\nAppModule -->\n\nMrfDivisionComponent->AppModule\n\n\n\n\n\nMrfListComponent\n\nMrfListComponent\n\nAppModule -->\n\nMrfListComponent->AppModule\n\n\n\n\n\nMrfSecretaryComponent\n\nMrfSecretaryComponent\n\nAppModule -->\n\nMrfSecretaryComponent->AppModule\n\n\n\n\n\nMyCerfsComponent\n\nMyCerfsComponent\n\nAppModule -->\n\nMyCerfsComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nTagsDialog\n\nTagsDialog\n\nAppModule -->\n\nTagsDialog->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAppRoutingModule \n\nAppRoutingModule \n\nAppRoutingModule  -->\n\nCoreModule->AppRoutingModule \n\n\n\n\n\nMaterialsModule \n\nMaterialsModule \n\nMaterialsModule  -->\n\nCoreModule->MaterialsModule \n\n\n\n\n\nNewFocusInput\n\nNewFocusInput\n\nCoreModule -->\n\nNewFocusInput->CoreModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialsModule\n\nMaterialsModule\n\nCoreModule -->\n\nMaterialsModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attendee   (src/.../cerf.component.ts)\n                        \n                        \n                            Club   (src/.../clubs.component.ts)\n                        \n                        \n                            Division   (src/.../divisions.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/cerf/cerf.component.ts\n    \n    \n        \n            \n                \n                    \n                    Attendee\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/modules/clubs/clubs.component.ts\n    \n    \n        \n            \n                \n                    \n                    Club\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/modules/divisions/divisions.component.ts\n    \n    \n        \n            \n                \n                    \n                    Division\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cacheInterceptor   (src/.../cache-interceptor.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fakeBackendProvider   (src/.../fake-backend.ts)\n                        \n                        \n                            HttpConfig   (src/.../api_config.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../index.ts)\n                        \n                        \n                            maxAge   (src/.../request-cache.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            tokenName   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/http-interceptors/cache-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cacheInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CacheInterceptor,\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http-interceptors/fake-backend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fakeBackendProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/api_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HttpConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t'schemelessUrl': 'ec2-54-215-238-75.us-west-1.compute.amazonaws.com:3000',\n\t'baseUrl': 'http://ec2-54-215-238-75.us-west-1.compute.amazonaws.com:3000',\n\t'signin': '/signin',\n\t'generateCerf': '/new'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http-interceptors/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpInterceptorProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t{ provide: HTTP_INTERCEPTORS, useClass: ContentTypeInterceptor, multi: true},\n\t{ provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n\t{ provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true},\n\t{ provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true}\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/core/utils/request-cache.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tokenName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'access_token'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
