/*

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$graphic-standard-primary: #003D79;
$graphic-standard-accent:  #F2E18B;

// The warn palette is optional (defaults to red).
$graphic-standard-warn:    #820024;

// Create the theme object (a Sass map containing all of the palettes).
$graphic-standard-theme: mat.define-light-theme($graphic-standard-primary, $graphic-standard-accent, $graphic-standard-warn);
*/
@use '~@angular/material' as mat;
/*@import '~@coachcare/datepicker/theming';*/
@import '~@angular/material/theming';
@include mat.core();
@import './graphic_standard_palette.scss';

// https://stackoverflow.com/questions/42786192/angular-2-material-dynamic-themes
@import '~@coachcare/datepicker/prebuilt-themes/indigo-pink.css';

$standardColors: (
	white: #ffffff,
	yellow: #F2E18B,
	oliveGreen: #9EA374,
	lightBlue: #C7D6EE,
	red: #820024,
	grey: #eee,		// not in style-guide, but taken from cnhcirclek.org
	darkGrey: #58595B,
	orange: #F58025,
	green: #6A9448,
	cyan: #00A5D9,
	blue: #003D79,
	black: #231F20,
);


// Only light themes are used right now. Just switch the keys (light <-> dark) if you want to experiment with a dark theme
// I'll hook up a toggle later
$themes: (
	light: (
		backgroundColor: map-get($standardColors, white),	// White
		navColor: map-get($standardColors, white),
		textColor: map-get($standardColors, black),	// CNH Black
		altTextColor: map-get($standardColors, white),	// White - currently used for table header color
		linkColor: map-get($standardColors, blue),	// CNH Blue - for sidenav <a>

		tableHeader: map-get($standardColors, blue),
		tableColor1: map-get($standardColors, lightBlue),	// CNH Light Blue
		tableColor2: map-get($standardColors, white)

	),

	dark: (
		backgroundColor: map-get($standardColors, darkGrey),
		navColor: map-get($standardColors, blue),
		textColor: map-get($standardColors, white),
		altTextColor: map-get($standardColors, balck),
		linkColor: map-get($standardColors, white),

		tableHeader: map-get($standardColors, green),
		tableColor1: map-get($standardColors, oliveGreen),	// CNH Olive Green
		tableColor2: map-get($standardColors, white)
	),
);

@function get-light($prop: 'backgroundColor') {
	@return map-get(map-get($themes, light), $prop);
}

@function get-dark($prop: 'backgroundColor') {
	@return map-get(map-get($themes, dark), $prop);
}



// Light theme
$light-primary: mat.define-palette($md-graphicblue);
$light-accent: mat.define-palette($md-graphiccyan);
$light-warn: mat.define-palette($md-graphicred);
$light-theme: mat.define-light-theme($light-primary, $light-accent, $light-warn);




// Dark theme
$dark-primary: mat.define-palette($md-graphicdarkgrey);
$dark-accent:  mat.define-palette($md-graphicolive);
$dark-warn:    mat.define-palette($md-graphicorange);
$dark-theme:   mat.define-dark-theme($dark-primary, $dark-accent, $dark-warn);



$custom-typography: mat.define-typography-config(
  $font-family: 'Century Gothic',
  $display-4:     mat.define-typography-level(112px, 112px, 300),
  $display-3:     mat.define-typography-level(56px, 56px, 400),
  $display-2:     mat.define-typography-level(45px, 48px, 400),
  $display-1:     mat.define-typography-level(34px, 40px, 400),
  $headline:      mat.define-typography-level(24px, 32px, 400),
  $title:         mat.define-typography-level(20px, 32px, 500),
  $subheading-2:  mat.define-typography-level(16px, 28px, 400),
  $subheading-1:  mat.define-typography-level(15px, 24px, 400),
  $body-2:        mat.define-typography-level(14px, 24px, 500),
  $body-1:        mat.define-typography-level(14px, 20px, 400),
  $caption:       mat.define-typography-level(12px, 20px, 400),
  $button:        mat.define-typography-level(14px, 14px, 500),
  // Line-height must be unit-less fraction of the font-size.
  $input:         mat.define-typography-level(inherit, 1.125, 400)
);

.light-theme {
  @include mat.all-component-themes($light-theme);
}

.dark-theme {
  @include mat.all-component-themes($dark-theme);
}

@include mat.all-component-typographies($custom-typography);

/* Trying to customize our Material theme by using mixins */
/*




// Default colors
$my-app-primary: mat.define-palette(mat.$teal-palette, 700, 100, 800);
$my-app-accent:  mat.define-palette(mat.$teal-palette, 700, 100, 800);

$my-app-theme: mat.define-light-theme($my-app-primary, $my-app-accent);
@include mat.all-component-themes($my-app-theme);



// Light theme
*/